Le script a dÃ©butÃ© sur dim. 31 mars 2019 14:40:26 CEST
]0;romain.pereira@hpc01:~[?1034h[romain.pereira@hpc01 ~]$ cd
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$  wget https://raw.githubusercontent.com/easybuilders/easybuild-framework/develop/easybuild/scripts/bootstrap_eb.py
--2019-03-31 14:40:44--  https://raw.githubusercontent.com/easybuilders/easybuild-framework/develop/easybuild/scripts/bootstrap_eb.py
Connexion vers 172.30.140.11:3128...connectÃ©.
requÃªte Proxy transmise, en attente de la rÃ©ponse...200 OK
Longueur: 48545 (47K) [text/plain]
Sauvegarde en : Â«bootstrap_eb.py.1Â»

 0% [                                                                                                                                                             ] 0           --.-K/s              100%[============================================================================================================================================================>] 48 545      --.-K/s   ds 0,004s  

2019-03-31 14:40:44 (11,2 MB/s) - Â«bootstrap_eb.py.1Â» sauvegardÃ© [48545/48545]

]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$  wget https://raw.githubusercontent.com/easybuilders/easybuild-framework/develop/easybuild/scripts/bootstrap_eb.py^C
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ EASYBUILD_PREFIX=$HOME/local/easybuild
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ EASYBUILD_PREFIX=$HOME/local/easybuild^C
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ python bootstrap_eb.py $EASYBUILD_PREFIX
[[INFO]] EasyBuild bootstrap script (version 20190112.01, MD5: bc4314750291d8fec119a99ea59dea2d)
[[INFO]] Found Python 2.7.5 (default, Aug  4 2017, 00:39:18) ; [GCC 4.8.5 20150623 (Red Hat 4.8.5-16)]

[[INFO]] Installation prefix /home/romain.pereira/local/easybuild
[[INFO]] Found module command 'modulecmd' (EnvironmentModulesC), so using it.
[[INFO]] Suitable setuptools installation already found, skipping stage 0...


[[INFO]] +++ STAGE 1: installing EasyBuild in temporary dir with easy_install...

[[INFO]] installing EasyBuild with 'easy_install --quiet --upgrade --prefix=/tmp/tmpek6LGZ/eb_stage1 easybuild'
[[INFO]] running post install command 'easy_install --upgrade --prefix=/tmp/tmpek6LGZ/eb_stage1 vsc-base'


[[INFO]] +++ STAGE 2: installing EasyBuild in /home/romain.pereira/local/easybuild with EasyBuild from stage 1...

Traceback (most recent call last):
  File "bootstrap_eb.py", line 1084, in <module>
    main()
  File "bootstrap_eb.py", line 887, in main
    stage2(tmpdir, templates, install_path, distribute_egg_dir, sourcepath)
  File "bootstrap_eb.py", line 750, in stage2
    easybuild_main()
  File "/tmp/tmpek6LGZ/eb_stage1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/easybuild/main.py", line 193, in main
    eb_go, cfg_settings = set_up_configuration(args=args, logfile=logfile, testing=testing)
  File "/tmp/tmpek6LGZ/eb_stage1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/easybuild/tools/options.py", line 1280, in set_up_configuration
    eb_go = parse_options(args=args)
  File "/tmp/tmpek6LGZ/eb_stage1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/easybuild/tools/options.py", line 1247, in parse_options
    raise EasyBuildError("Failed to parse configuration options: %s" % err)
easybuild.tools.build_log.EasyBuildError: 'Failed to parse configuration options: __init__() takes exactly 4 arguments (2 given)'
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ l .config/
abrt/           dconf/          easybuild/      gtk-3.0/        qupzilla/       Trolltech.conf  
[romain.pereira@hpc01 ~]$ l .config/^C
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --confighelp
bash: eb : commande introuvable
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ moduel[K[Kle load 
dot                           modules                       mpi/mpich-x86_64              mpi/mvapich2-2.2-x86_64       null                          
module-git                    mpi/mpich-3.0-x86_64          mpi/mvapich2-2.0-x86_64       mpi/mvapich2-x86_64           use.own                       
module-info                   mpi/mpich-3.2-x86_64          mpi/mvapich2-2.2-psm2-x86_64  mpi/openmpi-x86_64            
[romain.pereira@hpc01 ~]$ module load eb[Kas^C
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ l .o[Kconfig/easybuild/config.cfg [K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kl^C
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ ls local/easybuild/
[0m[38;5;27mmodules[0m  [38;5;27msoftware[0m
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ ls local/easybuild/modules/
all/   tools/ 
[romain.pereira@hpc01 ~]$ ls local/easybuild/modules/
[0m[38;5;27mall[0m  [38;5;27mtools[0m
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ ls local/easybuild/modules/all/
[0m[38;5;27mEasyBuild[0m
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ module avail

----------------------------------------------------------------------------------- /usr/share/Modules/modulefiles -----------------------------------------------------------------------------------
dot         module-git  module-info modules     null        use.own

------------------------------------------------------------------------------------------ /etc/modulefiles ------------------------------------------------------------------------------------------
mpi/mpich-3.0-x86_64         mpi/mpich-x86_64             mpi/mvapich2-2.2-psm2-x86_64 mpi/mvapich2-x86_64
mpi/mpich-3.2-x86_64         mpi/mvapich2-2.0-x86_64      mpi/mvapich2-2.2-x86_64      mpi/openmpi-x86_64
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ d[Kmoudle u^C
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ module use local/easybuild/
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ module use local/easybuild/avail[K

------------------------------------------------------------------------------------------ local/easybuild/ ------------------------------------------------------------------------------------------
modules/all/EasyBuild/3.8.1
modules/tools/EasyBuild/3.8.1
software/EasyBuild/3.8.1/easybuild/EasyBuild-3.8.1-easybuild-devel
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/CategorizedHMNS/Compiler/GCC/6.4.0-2.28/mpi/OpenMPI/2.1.2
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/CategorizedHMNS/Compiler/GCC/6.4.0-2.28/numlib/OpenBLAS/0.2.20
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/CategorizedHMNS/Compiler/GCC/6.4.0-2.28/system/hwloc/1.11.8
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/CategorizedHMNS/Core/compiler/GCC/6.4.0-2.28
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/CategorizedHMNS/Core/toolchain/foss/2018a
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/CategorizedHMNS/Core/toolchain/gompi/2018a
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/CategorizedHMNS/MPI/GCC/6.4.0-2.28/OpenMPI/2.1.2/numlib/FFTW/3.3.7
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/CategorizedHMNS/MPI/GCC/6.4.0-2.28/OpenMPI/2.1.2/numlib/ScaLAPACK/2.0.2-OpenBLAS-0.2.20
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/cce/8.3.12
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/cgompi/1.1.6
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/cgoolf/1.1.6
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/Clang/3.2-GCC-6.4.0-2.28
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/ClangGCC/1.1.2
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/Compiler/GCC/6.4.0-2.28/hwloc/1.11.8
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/Compiler/GCC/6.4.0-2.28/OpenMPI/2.1.2
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/Compiler/intel/2016.1.150-GCC-4.9.3-2.25/impi/5.1.2.150
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/Core/foss/2018a
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/Core/GCC/4.9.3-2.25
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/Core/GCC/6.4.0-2.28
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/Core/gompi/2018a
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/Core/icc/2016.1.150-GCC-4.9.3-2.25
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/Core/iccifort/2016.1.150-GCC-4.9.3-2.25
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/Core/ifort/2016.1.150-GCC-4.9.3-2.25
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/Core/iimpi/2016.01
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/CrayCCE/2015.06-XC
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/CrayGNU/2015.06-XC
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/CrayIntel/2015.06-XC
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/cray-libsci/13.0.4
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/cray-mpich/7.2.2
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/craype-test
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/CUDA/9.1.85
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/EasyBuild/fake
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/FFTW/3.3.7-cgompi-1.1.6
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/FFTW/3.3.7-gompi-2018a
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/FFTW/3.3.7-gompi-2018b
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/foss/2018a
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/foss/2018a-brokenFFTW
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/fosscuda/2018a
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/GCC/4.6.3
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/GCC/4.6.4
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/GCC/6.4.0-2.28
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/GCC/7.3.0-2.30
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/GCCcore/6.2.0
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/gompi/2018a
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/gompi/2018b
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/hwloc/1.11.8-ClangGCC-1.1.2
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/hwloc/1.11.8-GCC-6.4.0-2.28
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/hwloc/1.11.8-GCC-7.3.0-2.30
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/icc/11.1.073
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/icc/2018.1.163
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/iccifort/2018.1.163
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/ifort/11.1.073
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/ifort/2018.1.163
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/imkl/10.2.6.038
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/imkl/2018.1.163
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/impi/2018.1.163
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/impi/4.0.0.028
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/intel/15.0.1.133
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/intel/2012a
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/intel/2018a
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/MPI/GCC/6.4.0-2.28/OpenMPI/2.1.2/FFTW/3.3.7
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/MPI/GCC/6.4.0-2.28/OpenMPI/2.1.2/OpenBLAS/0.2.20
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/MPI/GCC/6.4.0-2.28/OpenMPI/2.1.2/ScaLAPACK/2.0.2-OpenBLAS-0.2.20
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/OpenBLAS/0.2.20-cgompi-1.1.6
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/OpenBLAS/0.2.20-GCC-6.4.0-2.28
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/OpenBLAS/0.2.20-GCC-7.3.0-2.30
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/OpenMPI/2.1.2-ClangGCC-1.1.2
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/OpenMPI/2.1.2-GCC-6.4.0-2.28
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/OpenMPI/3.1.1-GCC-7.3.0-2.30
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/PGI/16.7-GCC-5.4.0-2.26
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/PrgEnv-cray/5.2.40
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/PrgEnv-gnu/5.2.40
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/PrgEnv-intel/5.2.40
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/PrgEnv-pgi/5.2.40
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/ScaLAPACK/2.0.2-cgompi-1.1.6-OpenBLAS-0.2.20
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/ScaLAPACK/2.0.2-gompi-2018a-OpenBLAS-0.2.20
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/ScaLAPACK/2.0.2-gompi-2018b-OpenBLAS-0.2.20
software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/modules/toy/0.0

----------------------------------------------------------------------------------- /usr/share/Modules/modulefiles -----------------------------------------------------------------------------------
dot         module-git  module-info modules     null        use.own

------------------------------------------------------------------------------------------ /etc/modulefiles ------------------------------------------------------------------------------------------
mpi/mpich-3.0-x86_64         mpi/mpich-x86_64             mpi/mvapich2-2.2-psm2-x86_64 mpi/mvapich2-x86_64
mpi/mpich-3.2-x86_64         mpi/mvapich2-2.0-x86_64      mpi/mvapich2-2.2-x86_64      mpi/openmpi-x86_64
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ module availuse local/easybuild/[C[1@u[1@n
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ module unuse local/easybuild/avail[K

----------------------------------------------------------------------------------- /usr/share/Modules/modulefiles -----------------------------------------------------------------------------------
dot         module-git  module-info modules     null        use.own

------------------------------------------------------------------------------------------ /etc/modulefiles ------------------------------------------------------------------------------------------
mpi/mpich-3.0-x86_64         mpi/mpich-x86_64             mpi/mvapich2-2.2-psm2-x86_64 mpi/mvapich2-x86_64
mpi/mpich-3.2-x86_64         mpi/mvapich2-2.0-x86_64      mpi/mvapich2-2.2-x86_64      mpi/openmpi-x86_64
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ mou[Kdule use local/easybuild/
modules/  software/ 
[romain.pereira@hpc01 ~]$ module use local/easybuild/
modules/  software/ 
[romain.pereira@hpc01 ~]$ module use local/easybuild/modules/
all/   tools/ 
[romain.pereira@hpc01 ~]$ module use local/easybuild/modules/
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ module use local/easybuild/modules/avail[K

-------------------------------------------------------------------------------------- local/easybuild/modules/ --------------------------------------------------------------------------------------
all/EasyBuild/3.8.1   tools/EasyBuild/3.8.1

----------------------------------------------------------------------------------- /usr/share/Modules/modulefiles -----------------------------------------------------------------------------------
dot         module-git  module-info modules     null        use.own

------------------------------------------------------------------------------------------ /etc/modulefiles ------------------------------------------------------------------------------------------
mpi/mpich-3.0-x86_64         mpi/mpich-x86_64             mpi/mvapich2-2.2-psm2-x86_64 mpi/mvapich2-x86_64
mpi/mpich-3.2-x86_64         mpi/mvapich2-2.0-x86_64      mpi/mvapich2-2.2-x86_64      mpi/openmpi-x86_64
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ module load all/EasyBuild/3.8.1 
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb
ERROR: Failed to parse configuration options: __init__() takes exactly 4 arguments (2 given)
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --version
This is EasyBuild 3.8.1 (framework: 3.8.1, easyblocks: 3.8.1) on host hpc01.c-hpc.pedago.ensiie.fr.
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ vim .config/
abrt/           dconf/          easybuild/      gtk-3.0/        qupzilla/       Trolltech.conf  
[romain.pereira@hpc01 ~]$ vim .config/easybuild/config.cfg 
[?1049h[?1h=[2;1Hâ½[6n[1;1H  [1;1H[1;49r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[49;1H".config/easybuild/config.cfg" 10L, 637C[>c[1;1H[38;5;130m  1 [m[34m#[m
[38;5;130m  2 [m[34m# Current EasyBuild configuration[m
[38;5;130m  3 [m[34m# (C: command line argument, D: default value, E: environment variable, F: configuration file)[m
[38;5;130m  4 [m[34m#[m
[38;5;130m  5 [mbuildpath      (D) =[31m /home/romain.pereira/.local/easybuild/build[m
[38;5;130m  6 [mcontainerpath  (D) =[31m /home/romain.pereira/.local/easybuild/containers[m
[38;5;130m  7 [minstallpath    (D) =[31m /home/romain.pereira/.local/easybuild[m
[38;5;130m  8 [mrepositorypath (D) =[31m /home/romain.pereira/.local/easybuild/ebfiles_repo[m
[38;5;130m  9 [mrobot-paths    (D) =[31m /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs[m
[38;5;130m 10 [msourcepath     (D) =[31m /home/romain.pereira/.local/easybuild/sources[m
[94m~                                                                                                                                                                                                     [12;1H~                                                                                                                                                                                                     [13;1H~                                                                                                                                                                                                     [14;1H~                                                                                                                                                                                                     [15;1H~                                                                                                                                                                                                     [16;1H~                                                                                                                                                                                                     [17;1H~                                                                                                                                                                                                     [18;1H~                                                                                                                                                                                                     [19;1H~                                                                                                                                                                                                     [20;1H~                                                                                                                                                                                                     [21;1H~                                                                                                                                                                                                     [22;1H~                                                                                                                                                                                                     [23;1H~                                                                                                                                                                                                     [24;1H~                                                                                                                                                                                                     [25;1H~                                                                                                                                                                                                     [26;1H~                                                                                                                                                                                                     [27;1H~                                                                                                                                                                                                     [28;1H~                                                                                                                                                                                                     [29;1H~                                                                                                                                                                                                     [30;1H~                                                                                                                                                                                                     [31;1H~                                                                                                                                                                                                     [32;1H~                                                                                                                                                                                                     [33;1H~                                                                                                                                                                                                     [34;1H~                                                                                                                                                                                                     [35;1H~                                                                                                                                                                                                     [36;1H~                                                                                                                                                                                                     [37;1H~                                                                                                                                                                                                     [38;1H~                                                                                                                                                                                                     [39;1H~                                                                                                                                                                                                     [40;1H~                                                                                                                                                                                                     [41;1H~                                                                                                                                                                                                     [42;1H~                                                                                                                                                                                                     [43;1H~                                                                                                                                                                                                     [44;1H~                                                                                                                                                                                                     [45;1H~                                                                                                                                                                                                     [46;1H~                                                                                                                                                                                                     [47;1H~                                                                                                                                                                                                     [48;1H~                                                                                                                                                                                                     [m[49;181H1,1[10CTout[1;5H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[49;1H[K[49;1H/[?12l[?25ht[?25l[?12l[?25hc[?25l[?12l[?25hl[?25l[?12l[?25h[?25l[31mLa recherche a atteint le BAS, et continue en HAUT[m[97m[41mE486: Motif introuvable : tcl[m[49;30H[K[49;181H1,1[10CTout[1;5H[?12l[?25h[?25l[49;1H[K[49;1H:[?12l[?25hq[?25l[?12l[?25h![?25l[?12l[?25h[?25l[49;1H[K[49;1H[?1l>[?12l[?25h[?1049l]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ vim .config/easybuild/config.cfg [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[21Peb --version^C
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --confighelp
[MAIN]
# Enable debug log mode (def False)
#debug=
# Enable info log mode (def False)
#info=
# Enable quiet/warning log mode (def False)
#quiet=

[basic]
# Print build overview incl. dependencies (full paths) (def False)
#dry-run=
# Print build overview incl. dependencies (short paths) (def False)
#dry-run-short=
# Print build environment and (expected) build procedure that will be performed (def False)
#extended-dry-run=
# Ignore errors that occur during dry run (def True)
#extended-dry-run-ignore-errors=
# Force to rebuild software even if it's already installed (i.e. if it can be found as module), and skipping check for OS dependencies (def False)
#force=
# Submit the build as a job (def False)
#job=
# Redirect main log to stdout (def False)
#logtostdout=
# Only build listed blocks (type comma-separated list)
#only-blocks=
# Rebuild software, even if module already exists (don't skip OS dependencies checks) (def False)
#rebuild=
# Enable dependency resolution, using easyconfigs in specified paths (type pathsep-separated list; def )
#robot=
# Additional paths to consider by robot for easyconfigs (--robot paths get priority) (type pathsep-separated list; def /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs)
#robot-paths=
# Additional locations to consider in --search (next to --robot and --robot-paths paths) (type pathsep-separated list; def )
#search-paths=
# Skip existing software (useful for installing additional packages) (def False)
#skip=
# Stop the installation after certain step (type choice; def source) (choices: fetch, ready, source, patch, prepare, configure, build, test, install, extensions, postproc, sanitycheck, cleanup, module, permissions, package, testcases)
#stop=
# Set strictness level (type choice; def warn) (choices: ignore, warn, error)
#strict=

[config]
# Show all supported module naming schemes (def False)
#avail-module-naming-schemes=
# Show all supported module tools (def False)
#avail-modules-tools=
# Show all repository types (incl. non-usable) (def False)
#avail-repositories=
# Temporary build path (def /home/romain.pereira/.local/easybuild/build)
#buildpath=
# Location where container recipe & image will be stored (def /home/romain.pereira/.local/easybuild/containers)
#containerpath=
# List of files specifying metadata for external modules (INI format) (type comma-separated list)
#external-modules-metadata=
# Location of Python module with hook implementations (type str)
#hooks=
# Directory names to ignore when searching for files/dirs (type comma-separated list; def .git,.svn)
#ignore-dirs=
# Location(s) of extra or customized easyblocks (type comma-separated list; def )
#include-easyblocks=
# Location(s) of extra or customized module naming schemes (type comma-separated list; def )
#include-module-naming-schemes=
# Location(s) of extra or customized toolchains or toolchain components (type comma-separated list; def )
#include-toolchains=
# Install path for software and modules (def /home/romain.pereira/.local/easybuild)
#installpath=
# Install path for modules (if None, combine --installpath and --subdir-modules)
#installpath-modules=
# Install path for software (if None, combine --installpath and --subdir-software)
#installpath-software=
# Backend to use for submitting jobs (type choice; def GC3Pie) (choices: GC3Pie, PbsPython, Slurm)
#job-backend=
# Directory name and format of the log file (type comma-separated tuple; def easybuild,easybuild-%(name)s-%(version)s-%(date)s.%(time)s.log)
#logfile-format=
# Use depends_on (Lmod 7.6.1+) for dependencies in all generated modules (implies recursive unloading of modules). (def False)
#module-depends-on=
# Module naming scheme to use (def EasyBuildMNS)
#module-naming-scheme=
# Syntax to be used for module files (type choice; def Lua) (choices: Lua, Tcl)
#module-syntax=
# Extend supported module classes (For more info on the default classes, use --show-default-moduleclasses) (type comma-separated list; def base,astro,bio,cae,chem,compiler,data,debugger,devel,geo,ide,lang,lib,math,mpi,numlib,perf,quantum,phys,system,toolchain,tools,vis)
#moduleclasses=
# Path to file containing footer to be added to all generated module files
#modules-footer=
# Path to file containing header to be added to all generated module files
#modules-header=
# Modules tool to use (type choice; def Lmod) (choices: EnvironmentModules, EnvironmentModulesC, EnvironmentModulesTcl, Lmod)
#modules-tool=
# Packaging naming scheme choice (type choice; def EasyBuildPNS) (choices: EasyBuildPNS)
#package-naming-scheme=
# The destination path for the packages built by package-tool (def /home/romain.pereira/.local/easybuild/packages)
#packagepath=
# Change prefix for buildpath, installpath, sourcepath and repositorypath (used prefix for defaults /home/romain.pereira/.local/easybuild)
#prefix=
# Enable generating of modules that unload recursively. (def False)
#recursive-module-unload=
# Repository type, using repositorypath (type choice; def FileRepository) (choices: FileRepository)
#repository=
# Repository path, used by repository (is passed as list of arguments to create the repository instance). For more info, use --avail-repositories. (type comma-separated list; def /home/romain.pereira/.local/easybuild/ebfiles_repo)
#repositorypath=
# Path(s) to where sources should be downloaded (string, colon-separated) (def /home/romain.pereira/.local/easybuild/sources)
#sourcepath=
# Installpath subdir for modules (def modules)
#subdir-modules=
# Installpath subdir for software (def software)
#subdir-software=
# Base path of user-specific modules relative to their $HOME
#subdir-user-modules=
# Suffix for module files install path (def all)
#suffix-modules-path=
# Path to where a job should place the output (to be set within jobscript)
#testoutput=
# Log directory where temporary log files are stored
#tmp-logdir=
# Directory to use for temporary storage
#tmpdir=

[container]
# Base for container image. Examples (for Singularity): --container-base localimage:/path/to/image.img, --container-base shub:<image>:<tag>, --container-base docker:<image>:<tag>  (type <type 'str'>)
#container-base=
# Build container image (requires sudo privileges!) (def False)
#container-build-image=
# Container image format (type choice) (choices: ext3, sandbox, squashfs)
#container-image-format=
# Custom name for container image (defaults to name of easyconfig)
#container-image-name=
# Temporary directory where container image is built
#container-tmpdir=
# Type of container recipe/image to create (type choice; def singularity) (choices: docker, singularity)
#container-type=

[easyconfig]
# Inject checksums of specified type for sources/patches into easyconfig file(s) (type choice; def sha256) (choices: adler32, crc32, md5, sha1, sha256, sha512, size)
#inject-checksums=

[github]
# Runs checks to see whether the given easyconfigs are ready to be contributed back (def False)
#check-contrib=
# Check status of GitHub integration, and report back (def False)
#check-github=
# Run a style check on the given easyconfigs (def False)
#check-style=
# Clean up easyconfig files for pull request (def True)
#cleanup-easyconfigs=
# Close pull request (type <type 'int'>)
#close-pr=
# Custom close message for pull request closed with --close-pr;  (type <type 'str'>)
#close-pr-msg=
# Close reason for pull request closed with --close-pr; supported values: archived, inactive, obsolete (type <type 'str'>)
#close-pr-reasons=
# Dump test report to specified path (def test_report.md)
#dump-test-report=
# Obtain easyconfigs from specified PR (type <type 'int'>)
#from-pr=
# Path to Git working directories for EasyBuild repositories (type <type 'str'>)
#git-working-dirs-path=
# GitHub organization (type <type 'str'>)
#github-org=
# GitHub username (type <type 'str'>)
#github-user=
# Install GitHub token (requires --github-user) (def False)
#install-github-token=
# List pull requests (type <type 'str'>; def open,created,desc)
#list-prs=
# Merge pull request (type <type 'int'>)
#merge-pr=
# Open a new pull request (def False)
#new-pr=
# Branch name to use for new PRs; '<timestamp>_new_pr_<name><version>' if unspecified (type <type 'str'>)
#pr-branch-name=
# Commit message for new/updated pull request created with --new-pr (type <type 'str'>)
#pr-commit-msg=
# Description for new pull request created with --new-pr (type <type 'str'>)
#pr-descr=
# Target account for new PRs (type <type 'str'>; def easybuilders)
#pr-target-account=
# Target branch for new PRs (type <type 'str'>; def develop)
#pr-target-branch=
# Target repository for new/updating PRs (type <type 'str'>; def easybuild-easyconfigs)
#pr-target-repo=
# Title for new pull request created with --new-pr (type <type 'str'>)
#pr-title=
# Preview a new pull request (def False)
#preview-pr=
# Review specified pull request (type <type 'int'>)
#review-pr=
# Regex used to filter out variables in environment dump of test report
#test-report-env-filter=
# Update an existing pull request (type <type 'int'>)
#update-pr=
# Upload full test report as a gist on GitHub (def False)
#upload-test-report=

[informative]
# Show all constants that can be used in configuration files (def False)
#avail-cfgfile-constants=
# Show all constants that can be used in easyconfigs (def False)
#avail-easyconfig-constants=
# Show all license constants that can be used in easyconfigs (def False)
#avail-easyconfig-licenses=
# Show all easyconfig parameters (include easyblock-specific ones by using -e) (def False)
#avail-easyconfig-params=
# Show all template names and template constants that can be used in easyconfigs. (def False)
#avail-easyconfig-templates=
# Show list of known hooks (def False)
#avail-hooks=
# Show options for toolchain (type str)
#avail-toolchain-opts=
# Check for version conflicts in dependency graphs (def False)
#check-conflicts=
# Create dependency graph
#dep-graph=
# Dump source script to set up build environment based on toolchain/dependencies (def False)
#dump-env-script=
# Print location to EasyBuild log file of last (failed) session (def False)
#last-log=
# Show list of available easyblocks (type choice; def simple) (choices: simple, detailed)
#list-easyblocks=
# Show list of installed software (type choice; def simple) (choices: simple, detailed)
#list-installed-software=
# Show list of supported software (type choice; def simple) (choices: simple, detailed)
#list-software=
# Show list of known toolchains (def False)
#list-toolchains=
# Search for easyconfig files in the robot search path, print full paths
#search=
# Search for easyconfig files in the robot search path, print only filenames
#search-filename=
# Search for easyconfig files in the robot search path, print short paths
#search-short=
# Show current EasyBuild configuration (only non-default + selected settings) (def False)
#show-config=
# Show list of default config files (def False)
#show-default-configfiles=
# Show default module classes with description (def False)
#show-default-moduleclasses=
# Show current EasyBuild configuration (all settings) (def False)
#show-full-config=
# Show system information relevant to EasyBuild (def False)
#show-system-info=
# Terse output (machine-readable) (def False)
#terse=

[job]
# Configuration file for job backend
#job-backend-config=
# Number of cores to request per job (type int)
#job-cores=
# Type of dependency to set between jobs (default depends on job backend) (type choice) (choices: abort_on_error, always_run)
#job-deps-type=
# Maximum number of concurrent jobs (queued and running, 0 = unlimited) (type int; def 0)
#job-max-jobs=
# Maximum walltime for jobs (in hours) (type int; def 24)
#job-max-walltime=
# Output directory for jobs (default: current directory) (def /home/romain.pereira)
#job-output-dir=
# Interval between polls for status of jobs (in seconds) (type <type 'float'>; def 30.0)
#job-polling-interval=
# Target resource for jobs
#job-target-resource=

[override]
# Include dummy in minimal toolchain searches (def False)
#add-dummy-to-minimal-toolchains=
# List of software names for which to allow loaded modules in initial environment (type comma-separated list; def EasyBuild)
#allow-loaded-modules=
# Allow mismatch of modules tool and definition of 'module' function (def False)
#allow-modules-tool-mismatch=
# Allow using of EasyBuild as root (NOT RECOMMENDED!) (def False)
#allow-use-as-root-and-accept-consequences=
# Back up an existing module file, if any. Only works when using --module-only
#backup-modules=
# Action to take when defined $EBROOT* environment variables are found for which there is no matching loaded module; supported values: error, ignore, unset, warn (def warn)
#check-ebroot-env-vars=
# Cleanup build dir after successful installation. (def True)
#cleanup-builddir=
# Cleanup tmp dir after successful run. (def True)
#cleanup-tmpdir=
# Colorize output (type choice; def auto) (choices: auto, always, never)
#color=
# Also consider archived easyconfigs (def False)
#consider-archived-easyconfigs=
# Generate container recipe/image (def False)
#containerize=
# Run Lmod modules tool commands in debug module (def False)
#debug-lmod=
# Specify default optimisation level (type choice; def defaultopt) (choices: noopt, lowopt, defaultopt, opt)
#default-opt-level=
# Run pretending to be (future) version, to test removal of deprecated code.
#deprecated=
# Detect loaded EasyBuild-generated modules, act accordingly; supported values: error, ignore, purge, unload, warn (def warn)
#detect-loaded-modules=
# Enable including of development log messages (def False)
#devel=
# Timeout for initiating downloads (in seconds) (type <type 'float'>)
#download-timeout=
# Reformat easyconfigs using autopep8 when dumping them (def False)
#dump-autopep8=
# easyblock to use for processing the spec file or dumping the options
#easyblock=
# Enforce availability of checksums for all sources/patches, so they can be verified (def False)
#enforce-checksums=
# Allow experimental code (with behaviour that can be changed/removed at any given time). (def False)
#experimental=
# List of extra modules to load after setting up the build environment (type comma-separated list)
#extra-modules=
# Allow downloading sources ignoring OS and modules tool dependencies, implies --stop=fetch, --ignore-osdeps and ignore modules tool (def False)
#fetch=
# List of dependencies that you do *not* want to install with EasyBuild, because equivalent OS packages are installed. (e.g. --filter-deps=zlib,ncurses) (type comma-separated list)
#filter-deps=
# List of names of environment variables that should *not* be defined/updated by module files generated by EasyBuild (type comma-separated list)
#filter-env-vars=
# Use fixed naming scheme for installation directories (def False)
#fixed-installdir-naming-scheme=
# Force re-downloading of sources and/or patches, even if they are available already in source path (type choice; def sources) (choices: all, patches, sources)
#force-download=
# Group to be used for software installations (only verified, not set)
#group=
# Enable group write permissions on installation directory after installation (def False)
#group-writable-installdir=
# Install 'hidden' module file(s) by prefixing their version with '.' (def False)
#hidden=
# Comma separated list of dependencies that you want automatically hidden, (e.g. --hide-deps=zlib,ncurses) (type comma-separated list)
#hide-deps=
# Comma separated list of toolchains that you want automatically hidden, (e.g. --hide-toolchains=GCCcore) (type comma-separated list)
#hide-toolchains=
# Ignore failing checksum verification (def False)
#ignore-checksums=
# Ignore any listed OS dependencies (def False)
#ignore-osdeps=
# Install latest known version of easybuild (def False)
#install-latest-eb-release=
# Fallback in sanity check to lib64/ equivalent for missing libraries (def True)
#lib64-fallback-sanity-check=
# Maximum ratio for failures to allow when adjusting permissions (type float; def 0.5)
#max-fail-ratio-adjust-permissions=
# Use minimal toolchain when resolving dependencies (def False)
#minimal-toolchains=
# Only generate module file(s); skip all steps except for module, prepare, ready, sanitycheck (def False)
#module-only=
# Check version of modules tool being used (def True)
#modules-tool-version-check=
# Template for MPI commands (template keys: %(nr_ranks)s, %(cmd)s)
#mpi-cmd-template=
# Run MPI tests (when relevant) (def True)
#mpi-tests=
# Set architecture optimization, overriding native architecture optimizations
#optarch=
# Set output format (type choice; def txt) (choices: txt, rst)
#output-format=
# Specify (maximum) level of parallellism used during build procedure (type int)
#parallel=
# Create installation directory before submitting build jobs (def True)
#pre-create-installdir=
# Does the build/installation in a test directory located in $HOME/easybuildinstall (def False)
#pretend=
# Set read-only permissions on installation directory after installation (def False)
#read-only-installdir=
# Enable use of RPATH for linking with libraries (def False)
#rpath=
# List of regex patterns to use for filtering out RPATH paths (type comma-separated list)
#rpath-filter=
# Set the generated module as default (def False)
#set-default-module=
# Set group ID bit on newly created directories (def False)
#set-gid-bit=
# Skip running test cases (def False)
#skip-test-cases=
# Set sticky bit on newly created directories (def False)
#sticky-bit=
# Provide more information in output to stdout on progress (def False)
#trace=
# umask to use (e.g. '022'); non-user write permissions on install directories are removed
#umask=
# Update modules tool cache file(s) after generating module file (def False)
#update-modules-tool-cache=
# Enable use of ccache to speed up compilation, with specified cache dir (type <type 'str'>; def False)
#use-ccache=
# Use existing modules when resolving dependencies with minimal toolchains (def False)
#use-existing-modules=
# Enable use of f90cache to speed up compilation, with specified cache dir (type <type 'str'>; def False)
#use-f90cache=
# Verify whether filename of specified easyconfigs matches with contents (def False)
#verify-easyconfig-filenames=
# Zip logs that are copied to install directory, using specified command (def gzip)
#zip-logs=

[package]
# Enabling packaging (def False)
#package=
# Package release iteration number (def 1)
#package-release=
# Packaging tool to use (def fpm)
#package-tool=
# Extra options for packaging tool (def '')
#package-tool-options=
# Type of package to generate (def rpm)
#package-type=

[regtest]
# Collect all the xmls inside the given directory and generate a single file
#aggregate-regtest=
# Enable regression test mode (def False)
#regtest=
# Set output directory for test-run
#regtest-output-dir=
# Specify this option if you want to prevent parallel build (def False)
#sequential=

[software]
# Specify additional search and build parameters (can be used multiple times); for example: versionprefix=foo or patches=one.patch,two.patch)
#amend=
# Enable mapping of (sub)toolchains when --try-toolchain(-version) is used (def True)
#map-toolchains=
# Search and build software with given name and version (type comma-separated list)
#software=
# Search and build software with given name
#software-name=
# Search and build software with given version
#software-version=
# Search and build with given toolchain (name and version) (type comma-separated list)
#toolchain=
# Search and build with given toolchain name
#toolchain-name=
# Search and build with given toolchain version
#toolchain-version=
# Try to specify additional search and build parameters (can be used multiple times); for example: versionprefix=foo or patches=one.patch,two.patch) (USE WITH CARE!)
#try-amend=
# Try to search and build software with given name and version (USE WITH CARE!) (type comma-separated list)
#try-software=
# Try to search and build software with given name (USE WITH CARE!)
#try-software-name=
# Try to search and build software with given version (USE WITH CARE!)
#try-software-version=
# Try to search and build with given toolchain (name and version) (USE WITH CARE!) (type comma-separated list)
#try-toolchain=
# Try to search and build with given toolchain name (USE WITH CARE!)
#try-toolchain-name=
# Try to search and build with given toolchain version (USE WITH CARE!)
#try-toolchain-version=

[unittest]
# Log to this file in unittest mode
#unittest-file=

]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --confighelp > $[K[K
bash: Erreur de syntaxe prÃ¨s du symbole inattendu Â« newline Â»
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --confighelp > $HOME [K/.co\$HOME/.config eas[K[K[K[K/eas[C[C[1P$HOME/.config/eas[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cybi[Kuild/config.cfg
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ vim h[K;co[K[K[K.config/easybuild/config.cfg 
[?1049h[?1h=[2;1Hâ½[6n[1;1H  [1;1H[1;49r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[49;1H".config/easybuild/config.cfg" 444L, 20554C[>c[1;1H[38;5;130m  1 [m[32m[106m[[m[32mMAIN[m[32m[106m][m
[38;5;130m  2 [m[34m# Enable debug log mode (def False)[m
[38;5;130m  3 [m[34m#debug=[m
[38;5;130m  4 [m[34m# Enable info log mode (def False)[m
[38;5;130m  5 [m[34m#info=[m
[38;5;130m  6 [m[34m# Enable quiet/warning log mode (def False)[m
[38;5;130m  7 [m[34m#quiet=[m
[38;5;130m  8 
  9 [m[32m[basic][m
[38;5;130m 10 [m[34m# Print build overview incl. dependencies (full paths) (def False)[m
[38;5;130m 11 [m[34m#dry-run=[m
[38;5;130m 12 [m[34m# Print build overview incl. dependencies (short paths) (def False)[m
[38;5;130m 13 [m[34m#dry-run-short=[m
[38;5;130m 14 [m[34m# Print build environment and (expected) build procedure that will be performed (def False)[m
[38;5;130m 15 [m[34m#extended-dry-run=[m
[38;5;130m 16 [m[34m# Ignore errors that occur during dry run (def True)[m
[38;5;130m 17 [m[34m#extended-dry-run-ignore-errors=[m
[38;5;130m 18 [m[34m# Force to rebuild software even if it's already installed (i.e. if it can be found as module), and skipping check for OS dependencies (def False)[m
[38;5;130m 19 [m[34m#force=[m
[38;5;130m 20 [m[34m# Submit the build as a job (def False)[m
[38;5;130m 21 [m[34m#job=[m
[38;5;130m 22 [m[34m# Redirect main log to stdout (def False)[m
[38;5;130m 23 [m[34m#logtostdout=[m
[38;5;130m 24 [m[34m# Only build listed blocks (type comma-separated list)[m
[38;5;130m 25 [m[34m#only-blocks=[m
[38;5;130m 26 [m[34m# Rebuild software, even if module already exists (don't skip OS dependencies checks) (def False)[m
[38;5;130m 27 [m[34m#rebuild=[m
[38;5;130m 28 [m[34m# Enable dependency resolution, using easyconfigs in specified paths (type pathsep-separated list; def )[m
[38;5;130m 29 [m[34m#robot=[m
[38;5;130m 30 [m[34m# Additional paths to consider by robot for easyconfigs (--robot paths get priority) (type pathsep-separated list; def /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.77[m[31;1H[38;5;130m    [m[34m/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs)[m
[38;5;130m 31 [m[34m#robot-paths=[m
[38;5;130m 32 [m[34m# Additional locations to consider in --search (next to --robot and --robot-paths paths) (type pathsep-separated list; def )[m
[38;5;130m 33 [m[34m#search-paths=[m
[38;5;130m 34 [m[34m# Skip existing software (useful for installing additional packages) (def False)[m
[38;5;130m 35 [m[34m#skip=[m
[38;5;130m 36 [m[34m# Stop the installation after certain step (type choice; def source) (choices: fetch, ready, source, patch, prepare, configure, build, test, install, extensions, postproc, sanitycheck, cleanup,  [m[38;1H[38;5;130m    [m[34mmodule, permissions, package, testcases)[m
[38;5;130m 37 [m[34m#stop=[m
[38;5;130m 38 [m[34m# Set strictness level (type choice; def warn) (choices: ignore, warn, error)[m
[38;5;130m 39 [m[34m#strict=[m
[38;5;130m 40 
 41 [m[32m[config][m
[38;5;130m 42 [m[34m# Show all supported module naming schemes (def False)[m
[38;5;130m 43 [m[34m#avail-module-naming-schemes=[m
[38;5;130m 44 [m[34m# Show all supported module tools (def False)[m
[38;5;130m 45 [m[34m#avail-modules-tools=[m
[38;5;130m 46 [m[34m# Show all repository types (incl. non-usable) (def False)[m[49;181H1,1[10CHaut[1;5H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[32m[MAIN][m[49;181H2[2;5H[?12l[?25h[?25l[49;181H3[3;5H[?12l[?25h[?25l[49;181H4[4;5H[?12l[?25h[?25l[49;181H5[5;5H[?12l[?25h[?25l[49;181H6[6;5H[?12l[?25h[?25l[49;1H[K[49;1H/[?12l[?25hT[?25l[?12l[?25hC[?25l[?12l[?25hL[?25l[?12l[?25h[?25l[31mLa recherche a atteint le BAS, et continue en HAUT[m[97m[41mE486: Motif introuvable : TCL[m[49;30H[K[49;181H6,1[10CHaut[6;5H[?12l[?25h[?25l[49;1H[K[49;1H/[?12l[?25ht[?25l[?12l[?25hc[?25l[?12l[?25hl[?25l[?12l[?25h[?25l[31mLa recherche a atteint le BAS, et continue en HAUT[m[97m[41mE486: Motif introuvable : tcl[m[49;30H[K[49;181H6,1[10CHaut[6;5H[?12l[?25h[?25l[49;1H[K[49;1H/[?12l[?25hT[?25l[?12l[?25hc[?25l[?12l[?25hl[?25l[?12l[?25h[?25l[27m[m[H[2J[1;1H[38;5;130m 55 [m[34m#hooks=[m
[38;5;130m 56 [m[34m# Directory names to ignore when searching for files/dirs (type comma-separated list; def .git,.svn)[m
[38;5;130m 57 [m[34m#ignore-dirs=[m
[38;5;130m 58 [m[34m# Location(s) of extra or customized easyblocks (type comma-separated list; def )[m
[38;5;130m 59 [m[34m#include-easyblocks=[m
[38;5;130m 60 [m[34m# Location(s) of extra or customized module naming schemes (type comma-separated list; def )[m
[38;5;130m 61 [m[34m#include-module-naming-schemes=[m
[38;5;130m 62 [m[34m# Location(s) of extra or customized toolchains or toolchain components (type comma-separated list; def )[m
[38;5;130m 63 [m[34m#include-toolchains=[m
[38;5;130m 64 [m[34m# Install path for software and modules (def /home/romain.pereira/.local/easybuild)[m
[38;5;130m 65 [m[34m#installpath=[m
[38;5;130m 66 [m[34m# Install path for modules (if None, combine --installpath and --subdir-modules)[m
[38;5;130m 67 [m[34m#installpath-modules=[m
[38;5;130m 68 [m[34m# Install path for software (if None, combine --installpath and --subdir-software)[m
[38;5;130m 69 [m[34m#installpath-software=[m
[38;5;130m 70 [m[34m# Backend to use for submitting jobs (type choice; def GC3Pie) (choices: GC3Pie, PbsPython, Slurm)[m
[38;5;130m 71 [m[34m#job-backend=[m
[38;5;130m 72 [m[34m# Directory name and format of the log file (type comma-separated tuple; def easybuild,easybuild-%(name)s-%(version)s-%(date)s.%(time)s.log)[m
[38;5;130m 73 [m[34m#logfile-format=[m
[38;5;130m 74 [m[34m# Use depends_on (Lmod 7.6.1+) for dependencies in all generated modules (implies recursive unloading of modules). (def False)[m
[38;5;130m 75 [m[34m#module-depends-on=[m
[38;5;130m 76 [m[34m# Module naming scheme to use (def EasyBuildMNS)[m
[38;5;130m 77 [m[34m#module-naming-scheme=[m
[38;5;130m 78 [m[34m# Syntax to be used for module files (type choice; def Lua) (choices: Lua, [m[34m[103mTcl[m[34m)[m
[38;5;130m 79 [m[34m#module-syntax=[m
[38;5;130m 80 [m[34m# Extend supported module classes (For more info on the default classes, use --show-default-moduleclasses) (type comma-separated list; def base,astro,bio,cae,chem,compiler,data,debugger,devel,gee[m[27;1H[38;5;130m    [m[34mo,ide,lang,lib,math,mpi,numlib,perf,quantum,phys,system,toolchain,tools,vis)[m
[38;5;130m 81 [m[34m#moduleclasses=[m
[38;5;130m 82 [m[34m# Path to file containing footer to be added to all generated module files[m
[38;5;130m 83 [m[34m#modules-footer=[m
[38;5;130m 84 [m[34m# Path to file containing header to be added to all generated module files[m
[38;5;130m 85 [m[34m#modules-header=[m
[38;5;130m 86 [m[34m# Modules tool to use (type choice; def Lmod) (choices: EnvironmentModules, EnvironmentModulesC, EnvironmentModules[m[34m[103mTcl[m[34m, Lmod)[m
[38;5;130m 87 [m[34m#modules-tool=[m
[38;5;130m 88 [m[34m# Packaging naming scheme choice (type choice; def EasyBuildPNS) (choices: EasyBuildPNS)[m
[38;5;130m 89 [m[34m#package-naming-scheme=[m
[38;5;130m 90 [m[34m# The destination path for the packages built by package-tool (def /home/romain.pereira/.local/easybuild/packages)[m
[38;5;130m 91 [m[34m#packagepath=[m
[38;5;130m 92 [m[34m# Change prefix for buildpath, installpath, sourcepath and repositorypath (used prefix for defaults /home/romain.pereira/.local/easybuild)[m
[38;5;130m 93 [m[34m#prefix=[m
[38;5;130m 94 [m[34m# Enable generating of modules that unload recursively. (def False)[m
[38;5;130m 95 [m[34m#recursive-module-unload=[m
[38;5;130m 96 [m[34m# Repository type, using repositorypath (type choice; def FileRepository) (choices: FileRepository)[m
[38;5;130m 97 [m[34m#repository=[m
[38;5;130m 98 [m[34m# Repository path, used by repository (is passed as list of arguments to create the repository instance). For more info, use --avail-repositories. (type comma-separated list; def /home/romain.pee[m[46;1H[38;5;130m    [m[34mreira/.local/easybuild/ebfiles_repo)[m
[38;5;130m 99 [m[34m#repositorypath=[m
[38;5;130m100 [m[34m# Path(s) to where sources should be downloaded (string, colon-separated) (def /home/romain.pereira/.local/easybuild/sources)[m[49;181H78,76[9C13%[24;80H[?12l[?25h[?25l[49;182H9,15[25;19H[?12l[?25h[?25l[49;185H [25;5H[?12l[?25h[?25lmodule-syntax=[25;19H[K[25;5H[?12l[?25h[?25l[49;185H4[25;18H[?12l[?25h[?25l[49;1H[1m-- INSERTION --[m[49;181H[K[49;181H79,14[9C13%[25;18H[?12l[?25h[?25l[49;185H5[25;19H[?12l[?25h[?25l[31m [m[49;185H6[25;20H[?12l[?25h[?25l[25;19H[K[49;185H5[25;19H[?12l[?25h[?25l[31mT[m[49;185H6[25;20H[?12l[?25h[?25l[31mc[m[49;185H7[25;21H[?12l[?25h[?25l[31m[103mTcl[m[49;185H8[25;22H[?12l[?25h[49;1H[K[25;21H[?25l[49;181H79,17[9C13%[25;21H[?12l[?25h[?25l[49;181H[K[49;1H/[?12l[?25hc[?25l[?12l[?25ho[?25l[?12l[?25hm[?25l[?12l[?25hm[?25l[?12l[?25ha[?25l[?12l[?25hn[?25l[?12l[?25hd[?25l[?12l[?25h[?25l[27m[m[H[2J[1;1H[38;5;130m261 [m[32m[override][m
[38;5;130m262 [m[34m# Include dummy in minimal toolchain searches (def False)[m
[38;5;130m263 [m[34m#add-dummy-to-minimal-toolchains=[m
[38;5;130m264 [m[34m# List of software names for which to allow loaded modules in initial environment (type comma-separated list; def EasyBuild)[m
[38;5;130m265 [m[34m#allow-loaded-modules=[m
[38;5;130m266 [m[34m# Allow mismatch of modules tool and definition of 'module' function (def False)[m
[38;5;130m267 [m[34m#allow-modules-tool-mismatch=[m
[38;5;130m268 [m[34m# Allow using of EasyBuild as root (NOT RECOMMENDED!) (def False)[m
[38;5;130m269 [m[34m#allow-use-as-root-and-accept-consequences=[m
[38;5;130m270 [m[34m# Back up an existing module file, if any. Only works when using --module-only[m
[38;5;130m271 [m[34m#backup-modules=[m
[38;5;130m272 [m[34m# Action to take when defined $EBROOT* environment variables are found for which there is no matching loaded module; supported values: error, ignore, unset, warn (def warn)[m
[38;5;130m273 [m[34m#check-ebroot-env-vars=[m
[38;5;130m274 [m[34m# Cleanup build dir after successful installation. (def True)[m
[38;5;130m275 [m[34m#cleanup-builddir=[m
[38;5;130m276 [m[34m# Cleanup tmp dir after successful run. (def True)[m
[38;5;130m277 [m[34m#cleanup-tmpdir=[m
[38;5;130m278 [m[34m# Colorize output (type choice; def auto) (choices: auto, always, never)[m
[38;5;130m279 [m[34m#color=[m
[38;5;130m280 [m[34m# Also consider archived easyconfigs (def False)[m
[38;5;130m281 [m[34m#consider-archived-easyconfigs=[m
[38;5;130m282 [m[34m# Generate container recipe/image (def False)[m
[38;5;130m283 [m[34m#containerize=[m
[38;5;130m284 [m[34m# Run Lmod modules tool [m[34m[103mcommand[m[34ms in debug module (def False)[m
[38;5;130m285 [m[34m#debug-lmod=[m
[38;5;130m286 [m[34m# Specify default optimisation level (type choice; def defaultopt) (choices: noopt, lowopt, defaultopt, opt)[m
[38;5;130m287 [m[34m#default-opt-level=[m
[38;5;130m288 [m[34m# Run pretending to be (future) version, to test removal of deprecated code.[m
[38;5;130m289 [m[34m#deprecated=[m
[38;5;130m290 [m[34m# Detect loaded EasyBuild-generated modules, act accordingly; supported values: error, ignore, purge, unload, warn (def warn)[m
[38;5;130m291 [m[34m#detect-loaded-modules=[m
[38;5;130m292 [m[34m# Enable including of development log messages (def False)[m
[38;5;130m293 [m[34m#devel=[m
[38;5;130m294 [m[34m# Timeout for initiating downloads (in seconds) (type <type 'float'>)[m
[38;5;130m295 [m[34m#download-timeout=[m
[38;5;130m296 [m[34m# Reformat easyconfigs using autopep8 when dumping them (def False)[m
[38;5;130m297 [m[34m#dump-autopep8=[m
[38;5;130m298 [m[34m# easyblock to use for processing the spec file or dumping the options[m
[38;5;130m299 [m[34m#easyblock=[m
[38;5;130m300 [m[34m# Enforce availability of checksums for all sources/patches, so they can be verified (def False)[m
[38;5;130m301 [m[34m#enforce-checksums=[m
[38;5;130m302 [m[34m# Allow experimental code (with behaviour that can be changed/removed at any given time). (def False)[m
[38;5;130m303 [m[34m#experimental=[m
[38;5;130m304 [m[34m# List of extra modules to load after setting up the build environment (type comma-separated list)[m
[38;5;130m305 [m[34m#extra-modules=[m
[38;5;130m306 [m[34m# Allow downloading sources ignoring OS and modules tool dependencies, implies --stop=fetch, --ignore-osdeps and ignore modules tool (def False)[m
[38;5;130m307 [m[34m#fetch=[m
[38;5;130m308 [m[34m# List of dependencies that you do *not* want to install with EasyBuild, because equivalent OS packages are installed. (e.g. --filter-deps=zlib,ncurses) (type comma-separated list)[m[49;181H284,25[8C65%[24;29H[?12l[?25h[?25l[49;1H/command[49;181H[K[49;1H[27m[m[H[2J[1;1H[38;5;130m319 [m[34m#group-writable-installdir=[m
[38;5;130m320 [m[34m# Install 'hidden' module file(s) by prefixing their version with '.' (def False)[m
[38;5;130m321 [m[34m#hidden=[m
[38;5;130m322 [m[34m# Comma separated list of dependencies that you want automatically hidden, (e.g. --hide-deps=zlib,ncurses) (type comma-separated list)[m
[38;5;130m323 [m[34m#hide-deps=[m
[38;5;130m324 [m[34m# Comma separated list of toolchains that you want automatically hidden, (e.g. --hide-toolchains=GCCcore) (type comma-separated list)[m
[38;5;130m325 [m[34m#hide-toolchains=[m
[38;5;130m326 [m[34m# Ignore failing checksum verification (def False)[m
[38;5;130m327 [m[34m#ignore-checksums=[m
[38;5;130m328 [m[34m# Ignore any listed OS dependencies (def False)[m
[38;5;130m329 [m[34m#ignore-osdeps=[m
[38;5;130m330 [m[34m# Install latest known version of easybuild (def False)[m
[38;5;130m331 [m[34m#install-latest-eb-release=[m
[38;5;130m332 [m[34m# Fallback in sanity check to lib64/ equivalent for missing libraries (def True)[m
[38;5;130m333 [m[34m#lib64-fallback-sanity-check=[m
[38;5;130m334 [m[34m# Maximum ratio for failures to allow when adjusting permissions (type float; def 0.5)[m
[38;5;130m335 [m[34m#max-fail-ratio-adjust-permissions=[m
[38;5;130m336 [m[34m# Use minimal toolchain when resolving dependencies (def False)[m
[38;5;130m337 [m[34m#minimal-toolchains=[m
[38;5;130m338 [m[34m# Only generate module file(s); skip all steps except for module, prepare, ready, sanitycheck (def False)[m
[38;5;130m339 [m[34m#module-only=[m
[38;5;130m340 [m[34m# Check version of modules tool being used (def True)[m
[38;5;130m341 [m[34m#modules-tool-version-check=[m
[38;5;130m342 [m[34m# Template for MPI [m[34m[103mcommand[m[34ms (template keys: %(nr_ranks)s, %(cmd)s)[m
[38;5;130m343 [m[34m#mpi-cmd-template=[m
[38;5;130m344 [m[34m# Run MPI tests (when relevant) (def True)[m
[38;5;130m345 [m[34m#mpi-tests=[m
[38;5;130m346 [m[34m# Set architecture optimization, overriding native architecture optimizations[m
[38;5;130m347 [m[34m#optarch=[m
[38;5;130m348 [m[34m# Set output format (type choice; def txt) (choices: txt, rst)[m
[38;5;130m349 [m[34m#output-format=[m
[38;5;130m350 [m[34m# Specify (maximum) level of parallellism used during build procedure (type int)[m
[38;5;130m351 [m[34m#parallel=[m
[38;5;130m352 [m[34m# Create installation directory before submitting build jobs (def True)[m
[38;5;130m353 [m[34m#pre-create-installdir=[m
[38;5;130m354 [m[34m# Does the build/installation in a test directory located in $HOME/easybuildinstall (def False)[m
[38;5;130m355 [m[34m#pretend=[m
[38;5;130m356 [m[34m# Set read-only permissions on installation directory after installation (def False)[m
[38;5;130m357 [m[34m#read-only-installdir=[m
[38;5;130m358 [m[34m# Enable use of RPATH for linking with libraries (def False)[m
[38;5;130m359 [m[34m#rpath=[m
[38;5;130m360 [m[34m# List of regex patterns to use for filtering out RPATH paths (type comma-separated list)[m
[38;5;130m361 [m[34m#rpath-filter=[m
[38;5;130m362 [m[34m# Set the generated module as default (def False)[m
[38;5;130m363 [m[34m#set-default-module=[m
[38;5;130m364 [m[34m# Set group ID bit on newly created directories (def False)[m
[38;5;130m365 [m[34m#set-gid-bit=[m
[38;5;130m366 [m[34m# Skip running test cases (def False)[m[49;181H342,20[8C80%[24;24H[?12l[?25h[?25l[49;1H/command[49;181H[K[49;1H[1;48r[1;1H[18M[1;49r[31;1H[38;5;130m367 [m[34m#skip-test-cases=[m
[38;5;130m368 [m[34m# Set sticky bit on newly created directories (def False)[m
[38;5;130m369 [m[34m#sticky-bit=[m
[38;5;130m370 [m[34m# Provide more information in output to stdout on progress (def False)[m
[38;5;130m371 [m[34m#trace=[m
[38;5;130m372 [m[34m# umask to use (e.g. '022'); non-user write permissions on install directories are removed[m
[38;5;130m373 [m[34m#umask=[m
[38;5;130m374 [m[34m# Update modules tool cache file(s) after generating module file (def False)[m
[38;5;130m375 [m[34m#update-modules-tool-cache=[m
[38;5;130m376 [m[34m# Enable use of ccache to speed up compilation, with specified cache dir (type <type 'str'>; def False)[m
[38;5;130m377 [m[34m#use-ccache=[m
[38;5;130m378 [m[34m# Use existing modules when resolving dependencies with minimal toolchains (def False)[m
[38;5;130m379 [m[34m#use-existing-modules=[m
[38;5;130m380 [m[34m# Enable use of f90cache to speed up compilation, with specified cache dir (type <type 'str'>; def False)[m
[38;5;130m381 [m[34m#use-f90cache=[m
[38;5;130m382 [m[34m# Verify whether filename of specified easyconfigs matches with contents (def False)[m
[38;5;130m383 [m[34m#verify-easyconfig-filenames=[m
[38;5;130m384 [m[34m# Zip logs that are copied to install directory, using specified [m[34m[103mcommand[m[34m (def gzip)[m[49;1H[K[49;181H384,66[8C84%[48;70H[?12l[?25h[27m[m[H[2J[?25l[1;1H[38;5;130m348 [m[34m# Set output format (type choice; def txt) (choices: txt, rst)[m
[38;5;130m349 [m[34m#output-format=[m
[38;5;130m350 [m[34m# Specify (maximum) level of parallellism used during build procedure (tt[m[4;1H[38;5;130m    [m[34mype int)[m
[38;5;130m351 [m[34m#parallel=[m
[38;5;130m352 [m[34m# Create installation directory before submitting build jobs (def True)[m
[38;5;130m353 [m[34m#pre-create-installdir=[m
[38;5;130m354 [m[34m# Does the build/installation in a test directory located in $HOME/easybb[m[9;1H[38;5;130m    [m[34muildinstall (def False)[m
[38;5;130m355 [m[34m#pretend=[m
[38;5;130m356 [m[34m# Set read-only permissions on installation directory after installationn[m[12;1H[38;5;130m    [m[34m (def False)[m
[38;5;130m357 [m[34m#read-only-installdir=[m
[38;5;130m358 [m[34m# Enable use of RPATH for linking with libraries (def False)[m
[38;5;130m359 [m[34m#rpath=[m
[38;5;130m360 [m[34m# List of regex patterns to use for filtering out RPATH paths (type commm[m[17;1H[38;5;130m    [m[34ma-separated list)[m
[38;5;130m361 [m[34m#rpath-filter=[m
[38;5;130m362 [m[34m# Set the generated module as default (def False)[m
[38;5;130m363 [m[34m#set-default-module=[m
[38;5;130m364 [m[34m# Set group ID bit on newly created directories (def False)[m
[38;5;130m365 [m[34m#set-gid-bit=[m
[38;5;130m366 [m[34m# Skip running test cases (def False)[m
[38;5;130m367 [m[34m#skip-test-cases=[m
[38;5;130m368 [m[34m# Set sticky bit on newly created directories (def False)[m
[38;5;130m369 [m[34m#sticky-bit=[m
[38;5;130m370 [m[34m# Provide more information in output to stdout on progress (def False)[m
[38;5;130m371 [m[34m#trace=[m
[38;5;130m372 [m[34m# umask to use (e.g. '022'); non-user write permissions on install direcc[m[30;1H[38;5;130m    [m[34mtories are removed[m
[38;5;130m373 [m[34m#umask=[m
[38;5;130m374 [m[34m# Update modules tool cache file(s) after generating module file (def Faa[m[33;1H[38;5;130m    [m[34mlse)[m
[38;5;130m375 [m[34m#update-modules-tool-cache=[m
[38;5;130m376 [m[34m# Enable use of ccache to speed up compilation, with specified cache dirr[m[36;1H[38;5;130m    [m[34m (type <type 'str'>; def False)[m
[38;5;130m377 [m[34m#use-ccache=[m
[38;5;130m378 [m[34m# Use existing modules when resolving dependencies with minimal toolchaii[m[39;1H[38;5;130m    [m[34mns (def False)[m
[38;5;130m379 [m[34m#use-existing-modules=[m
[38;5;130m380 [m[34m# Enable use of f90cache to speed up compilation, with specified cache dd[m[42;1H[38;5;130m    [m[34mir (type <type 'str'>; def False)[m
[38;5;130m381 [m[34m#use-f90cache=[m
[38;5;130m382 [m[34m# Verify whether filename of specified easyconfigs matches with contentss[m[45;1H[38;5;130m    [m[34m (def False)[m
[38;5;130m383 [m[34m#verify-easyconfig-filenames=[m
[38;5;130m384 [m[34m# Zip logs that are copied to install directory, using specified [m[34m[103mcommandd[m[48;1H[38;5;130m    [m[34m (def gzip)[m[49;59H384,66[8C85%[47;70H[?12l[?25h[27m[m[H[2J[?25l[1;1H[38;5;130m348 [m[34m# Set output format (type choice; def txt) (choices: txt, rst)[m
[38;5;130m349 [m[34m#output-format=[m
[38;5;130m350 [m[34m# Specify (maximum) level of parallellism used during build procedure (type int)[m
[38;5;130m351 [m[34m#parallel=[m
[38;5;130m352 [m[34m# Create installation directory before submitting build jobs (def True)[m
[38;5;130m353 [m[34m#pre-create-installdir=[m
[38;5;130m354 [m[34m# Does the build/installation in a test directory located in $HOME/easybuildinstall (def Falsee[m[8;1H[38;5;130m    [m[34m)[m
[38;5;130m355 [m[34m#pretend=[m
[38;5;130m356 [m[34m# Set read-only permissions on installation directory after installation (def False)[m
[38;5;130m357 [m[34m#read-only-installdir=[m
[38;5;130m358 [m[34m# Enable use of RPATH for linking with libraries (def False)[m
[38;5;130m359 [m[34m#rpath=[m
[38;5;130m360 [m[34m# List of regex patterns to use for filtering out RPATH paths (type comma-separated list)[m
[38;5;130m361 [m[34m#rpath-filter=[m
[38;5;130m362 [m[34m# Set the generated module as default (def False)[m
[38;5;130m363 [m[34m#set-default-module=[m
[38;5;130m364 [m[34m# Set group ID bit on newly created directories (def False)[m
[38;5;130m365 [m[34m#set-gid-bit=[m
[38;5;130m366 [m[34m# Skip running test cases (def False)[m
[38;5;130m367 [m[34m#skip-test-cases=[m
[38;5;130m368 [m[34m# Set sticky bit on newly created directories (def False)[m
[38;5;130m369 [m[34m#sticky-bit=[m
[38;5;130m370 [m[34m# Provide more information in output to stdout on progress (def False)[m
[38;5;130m371 [m[34m#trace=[m
[38;5;130m372 [m[34m# umask to use (e.g. '022'); non-user write permissions on install directories are removed[m
[38;5;130m373 [m[34m#umask=[m
[38;5;130m374 [m[34m# Update modules tool cache file(s) after generating module file (def False)[m
[38;5;130m375 [m[34m#update-modules-tool-cache=[m
[38;5;130m376 [m[34m# Enable use of ccache to speed up compilation, with specified cache dir (type <type 'str'>; dd[m[31;1H[38;5;130m    [m[34mef False)[m
[38;5;130m377 [m[34m#use-ccache=[m
[38;5;130m378 [m[34m# Use existing modules when resolving dependencies with minimal toolchains (def False)[m
[38;5;130m379 [m[34m#use-existing-modules=[m
[38;5;130m380 [m[34m# Enable use of f90cache to speed up compilation, with specified cache dir (type <type 'str'>;;[m[36;1H[38;5;130m    [m[34m def False)[m
[38;5;130m381 [m[34m#use-f90cache=[m
[38;5;130m382 [m[34m# Verify whether filename of specified easyconfigs matches with contents (def False)[m
[38;5;130m383 [m[34m#verify-easyconfig-filenames=[m
[38;5;130m384 [m[34m# Zip logs that are copied to install directory, using specified [m[34m[103mcommand[m[34m (def gzip)[m
[38;5;130m385 [m[34m#zip-logs=[m
[38;5;130m386 
387 [m[32m[package][m
[38;5;130m388 [m[34m# Enabling packaging (def False)[m
[38;5;130m389 [m[34m#package=[m
[38;5;130m390 [m[34m# Package release iteration number (def 1)[m
[38;5;130m391 [m[34m#package-release=[m
[38;5;130m392 [m[34m# Packaging tool to use (def fpm)[m[49;81H384,66[8C86%[40;70H[?12l[?25h[?25l[49;81H[K[49;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l".config/easybuild/config.cfg" 444L, 20556C Ã©crit(s)
[?1l>[?12l[?25h[?1049l]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ $EASYBUILD_MODULES_TOOLe$EASYBUILD_MODULES_TOOLx$EASYBUILD_MODULES_TOOLp$EASYBUILD_MODULES_TOOLo$EASYBUILD_MODULES_TOOLr$EASYBUILD_MODULES_TOOLt$EASYBUILD_MODULES_TOOL $EASYBUILD_MODULES_TOOL[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C=EnvironmentModulesC
bash: export: Â« =EnvironmentModulesC Â» : identifiant non valable
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ export $EASYBUILD_MODULES_TOOL=EnvironmentModulesC[1PEnvironmentModulesC EnvironmentModulesC
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ fg
bash: fg: courant : tÃ¢che inexistante
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ vfgexport $EASYBUILD_MODULES_TOOL EnvironmentModulesC=EnvironmentModulesC[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[17Pvim .config/easybuild/config.cfg 
[?1049h[?1h=[2;1Hâ½[6n[1;1H  [1;1H[1;49r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[49;1H".config/easybuild/config.cfg" 444L, 20556C[>c[1;1H[38;5;130m363 [m[34m#set-default-module=[m
[38;5;130m364 [m[34m# Set group ID bit on newly created directories (def False)[m
[38;5;130m365 [m[34m#set-gid-bit=[m
[38;5;130m366 [m[34m# Skip running test cases (def False)[m
[38;5;130m367 [m[34m#skip-test-cases=[m
[38;5;130m368 [m[34m# Set sticky bit on newly created directories (def False)[m
[38;5;130m369 [m[34m#sticky-bit=[m
[38;5;130m370 [m[34m# Provide more information in output to stdout on progress (def False)[m
[38;5;130m371 [m[34m#trace=[m
[38;5;130m372 [m[34m# umask to use (e.g. '022'); non-user write permissions on install directories are removed[m
[38;5;130m373 [m[34m#umask=[m
[38;5;130m374 [m[34m# Update modules tool cache file(s) after generating module file (def False)[m
[38;5;130m375 [m[34m#update-modules-tool-cache=[m
[38;5;130m376 [m[34m# Enable use of ccache to speed up compilation, with specified cache dir (type <type 'str'>; dd[m[15;1H[38;5;130m    [m[34mef False)[m
[38;5;130m377 [m[34m#use-ccache=[m
[38;5;130m378 [m[34m# Use existing modules when resolving dependencies with minimal toolchains (def False)[m
[38;5;130m379 [m[34m#use-existing-modules=[m
[38;5;130m380 [m[34m# Enable use of f90cache to speed up compilation, with specified cache dir (type <type 'str'>;;[m[20;1H[38;5;130m    [m[34m def False)[m
[38;5;130m381 [m[34m#use-f90cache=[m
[38;5;130m382 [m[34m# Verify whether filename of specified easyconfigs matches with contents (def False)[m
[38;5;130m383 [m[34m#verify-easyconfig-filenames=[m
[38;5;130m384 [m[34m# Zip logs that are copied to install directory, using specified [m[34m[103mcommand[m[34m (def gzip)[m
[38;5;130m385 [m[34m#zip-logs=[m
[38;5;130m386 
387 [m[32m[package][m
[38;5;130m388 [m[34m# Enabling packaging (def False)[m
[38;5;130m389 [m[34m#package=[m
[38;5;130m390 [m[34m# Package release iteration number (def 1)[m
[38;5;130m391 [m[34m#package-release=[m
[38;5;130m392 [m[34m# Packaging tool to use (def fpm)[m
[38;5;130m393 [m[34m#package-tool=[m
[38;5;130m394 [m[34m# Extra options for packaging tool (def '')[m
[38;5;130m395 [m[34m#package-tool-options=[m
[38;5;130m396 [m[34m# Type of package to generate (def rpm)[m
[38;5;130m397 [m[34m#package-type=[m
[38;5;130m398 
399 [m[32m[regtest][m
[38;5;130m400 [m[34m# Collect all the xmls inside the given directory and generate a single file[m
[38;5;130m401 [m[34m#aggregate-regtest=[m
[38;5;130m402 [m[34m# Enable regression test mode (def False)[m
[38;5;130m403 [m[34m#regtest=[m
[38;5;130m404 [m[34m# Set output directory for test-run[m
[38;5;130m405 [m[34m#regtest-output-dir=[m
[38;5;130m406 [m[34m# Specify this option if you want to prevent parallel build (def False)[m
[38;5;130m407 [m[34m#sequential=[m
[38;5;130m408 [m[49;81H384,1[9C90%[24;5H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[49;1H[K[49;1H/[?12l[?25hm[?25l[?12l[?25ho[?25l[?12l[?25hd[?25l[?12l[?25hu[?25l[?12l[?25hl[?25l[?12l[?25he[?25l[?12l[?25hc[?25l[?12l[?25hm[?25l[?12l[?25hd[?25l[?12l[?25h[?25l[31mLa recherche a atteint le BAS, et continue en HAUT[m[97m[41mE486: Motif introuvable : modulecmd[m[49;36H[K[24;70H[34mcommand[m[49;81H384,1[9C90%[24;5H[?12l[?25h[?25l[49;1H[K[49;1H/[?12l[?25hE[?25l[?12l[?25hn[?25l[?12l[?25hv[?25l[?12l[?25hr[?25l[?12l[?25ho[?25l[?12l[?25h[?25l[49;6H[K[49;6H[?12l[?25h[?25l[49;5H[K[49;5H[?12l[?25hi[?25l[?12l[?25hr[?25l[?12l[?25ho[?25l[?12l[?25hn[?25l[?12l[?25hm[?25l[?12l[?25he[?25l[?12l[?25hn[?25l[?12l[?25ht[?25l[?12l[?25h[?25l[31mLa recherche a atteint le BAS, et continue en HAUT[27m[m[H[2J[1;1H[38;5;130m 68 [m[34m# Install path for software (if None, combine --installpath and --subdir-software)[m
[38;5;130m 69 [m[34m#installpath-software=[m
[38;5;130m 70 [m[34m# Backend to use for submitting jobs (type choice; def GC3Pie) (choices: GC3Pie, PbsPython, Sll[m[4;1H[38;5;130m    [m[34murm)[m
[38;5;130m 71 [m[34m#job-backend=[m
[38;5;130m 72 [m[34m# Directory name and format of the log file (type comma-separated tuple; def easybuild,easybuii[m[7;1H[38;5;130m    [m[34mld-%(name)s-%(version)s-%(date)s.%(time)s.log)[m
[38;5;130m 73 [m[34m#logfile-format=[m
[38;5;130m 74 [m[34m# Use depends_on (Lmod 7.6.1+) for dependencies in all generated modules (implies recursive unn[m[10;1H[38;5;130m    [m[34mloading of modules). (def False)[m
[38;5;130m 75 [m[34m#module-depends-on=[m
[38;5;130m 76 [m[34m# Module naming scheme to use (def EasyBuildMNS)[m
[38;5;130m 77 [m[34m#module-naming-scheme=[m
[38;5;130m 78 [m[34m# Syntax to be used for module files (type choice; def Lua) (choices: Lua, Tcl)[m
[38;5;130m 79 [mmodule-syntax=[31mTcl[m
[38;5;130m 80 [m[34m# Extend supported module classes (For more info on the default classes, use --show-default-moo[m[17;1H[38;5;130m    [m[34mduleclasses) (type comma-separated list; def base,astro,bio,cae,chem,compiler,data,debugger,dee[m[18;1H[38;5;130m    [m[34mvel,geo,ide,lang,lib,math,mpi,numlib,perf,quantum,phys,system,toolchain,tools,vis)[m
[38;5;130m 81 [m[34m#moduleclasses=[m
[38;5;130m 82 [m[34m# Path to file containing footer to be added to all generated module files[m
[38;5;130m 83 [m[34m#modules-footer=[m
[38;5;130m 84 [m[34m# Path to file containing header to be added to all generated module files[m
[38;5;130m 85 [m[34m#modules-header=[m
[38;5;130m 86 [m[34m# Modules tool to use (type choice; def Lmod) (choices: [m[34m[103mEnvironment[m[34mModules, [m[34m[103mEnvironment[m[34mModuless[m[25;1H[38;5;130m    [m[34mC, [m[34m[103mEnvironment[m[34mModulesTcl, Lmod)[m
[38;5;130m 87 [m[34m#modules-tool=[m
[38;5;130m 88 [m[34m# Packaging naming scheme choice (type choice; def EasyBuildPNS) (choices: EasyBuildPNS)[m
[38;5;130m 89 [m[34m#package-naming-scheme=[m
[38;5;130m 90 [m[34m# The destination path for the packages built by package-tool (def /home/romain.pereira/.locall[m[30;1H[38;5;130m    [m[34m/easybuild/packages)[m
[38;5;130m 91 [m[34m#packagepath=[m
[38;5;130m 92 [m[34m# Change prefix for buildpath, installpath, sourcepath and repositorypath (used prefix for deff[m[33;1H[38;5;130m    [m[34maults /home/romain.pereira/.local/easybuild)[m
[38;5;130m 93 [m[34m#prefix=[m
[38;5;130m 94 [m[34m# Enable generating of modules that unload recursively. (def False)[m
[38;5;130m 95 [m[34m#recursive-module-unload=[m
[38;5;130m 96 [m[34m# Repository type, using repositorypath (type choice; def FileRepository) (choices: FileReposii[m[38;1H[38;5;130m    [m[34mtory)[m
[38;5;130m 97 [m[34m#repository=[m
[38;5;130m 98 [m[34m# Repository path, used by repository (is passed as list of arguments to create the repositoryy[m[41;1H[38;5;130m    [m[34m instance). For more info, use --avail-repositories. (type comma-separated list; def /home/romm[m[42;1H[38;5;130m    [m[34main.pereira/.local/easybuild/ebfiles_repo)[m
[38;5;130m 99 [m[34m#repositorypath=[m
[38;5;130m100 [m[34m# Path(s) to where sources should be downloaded (string, colon-separated) (def /home/romain.pee[m[45;1H[38;5;130m    [m[34mreira/.local/easybuild/sources)[m
[38;5;130m101 [m[34m#sourcepath=[m
[38;5;130m102 [m[34m# Installpath subdir for modules (def modules)[m
[38;5;130m103 [m[34m#subdir-modules=[m[49;81H86,57[9C16%[31mLa recherche a atteint le BAS, et continue en HAUT[m[49;81H[K[49;81H86,57[9C16%[24;61H[?12l[?25h[?25l[49;82H5,16[23;20H[?12l[?25h[?25l[49;1H[K[49;1H:[?12l[?25h[?25lwq[?12l[?25h[?25l[49;3H[K[49;3H[?12l[?25h[?25l[49;2H[K[49;2H[?12l[?25h [?25l[79C85,16[9C16%[23;20H[?12l[?25h[?25l[49;85H5[23;19H[?12l[?25h[?25l[49;81H[K[49;1H/[?12l[?25hE[?25l[?12l[?25hn[?25l[?12l[?25hv[?25l[?12l[?25hi[?25l[?12l[?25hr[?25l[?12l[?25ho[?25l[?12l[?25hn[?25l[?12l[?25hm[?25l[?12l[?25he[?25l[?12l[?25hn[?25l[?12l[?25ht[?25l[?12l[?25hM[?25l[?12l[?25ho[?25l[?12l[?25hd[?25l[?12l[?25hu[?25l[?12l[?25hl[?25l[?12l[?25he[?25l[?12l[?25hC[?25l[?12l[?25hsC[?25l[?12l[?25h[?25l[24;61H[34mEnvironment[m[20C[34m[103mModuless[m[25;1H[38;5;130m [m[3C[34m[103mC[m[2C[34mEnvironment[m[49;81H86,77[9C16%[24;81H[?12l[?25h[?25l[49;81H[K[49;1H[31mLa recherche a atteint le BAS, et continue en HAUT[m[30C86,77[9C16%[49;81H[K[49;81H86,77[9C16%[24;81H[?12l[?25h[?25l[49;1H/EnvironmentModulesC[49;21H[K[49;1H[31mLa recherche a atteint le BAS, et continue en HAUT[m[30C86,77[9C16%[49;81H[K[49;81H86,77[9C16%[24;81H[?12l[?25h[?25l[49;1H/EnvironmentModulesC[49;21H[K[49;1H[31mLa recherche a atteint le BAS, et continue en HAUT[m[30C86,77[9C16%[49;81H[K[49;81H86,77[9C16%[24;81H[?12l[?25h[?25l[49;1H/EnvironmentModulesC[49;21H[K[49;1H[31mLa recherche a atteint le BAS, et continue en HAUT[m[30C86,77[9C16%[49;81H[K[49;81H86,77[9C16%[24;81H[?12l[?25h[?25l[49;1H/EnvironmentModulesC[49;21H[K[49;1H[31mLa recherche a atteint le BAS, et continue en HAUT[m[30C86,77[9C16%[49;81H[K[49;81H86,77[9C16%[24;81H[?12l[?25h[?25l[49;1H/EnvironmentModulesC[49;21H[K[49;1H[31mLa recherche a atteint le BAS, et continue en HAUT[m[30C86,77[9C16%[49;81H[K[49;81H86,77[9C16%[24;81H[?12l[?25h[?25l[49;82H7,14[26;18H[?12l[?25h[?25l[49;1H[1m-- INSERTION --[m[49;16H[K[49;81H87,14[9C16%[26;18H[?12l[?25h[?25l[49;85H5[26;19H[?12l[?25h[?25l[34mE[m[49;85H6[26;20H[?12l[?25h[?25l[34mn[m[49;85H7[26;21H[?12l[?25h[?25l[34mv[m[49;85H8[26;22H[?12l[?25h[?25l[34mi[m[49;85H9[26;23H[?12l[?25h[?25l[34mr[m[49;84H20[26;24H[?12l[?25h[?25l[34mo[m[49;85H1[26;25H[?12l[?25h[?25l[34mn[m[49;85H2[26;26H[?12l[?25h[?25l[34mm[m[49;85H3[26;27H[?12l[?25h[?25l[34me[m[49;85H4[26;28H[?12l[?25h[?25l[34mn[m[49;85H5[26;29H[?12l[?25h[?25l[34mt[m[49;85H6[26;30H[?12l[?25h[?25l[34mM[m[49;85H7[26;31H[?12l[?25h[?25l[34mo[m[49;85H8[26;32H[?12l[?25h[?25l[34md[m[49;85H9[26;33H[?12l[?25h[?25l[34mu[m[49;84H30[26;34H[?12l[?25h[?25l[34ml[m[49;85H1[26;35H[?12l[?25h[?25l[34me[m[49;85H2[26;36H[?12l[?25h[?25l[34ms[m[49;85H3[26;37H[?12l[?25h[?25l[26;19H[34m[103mEnvironmentModulesC[m[49;85H4[26;38H[?12l[?25h[?25l[49;84H1 [26;5H[?12l[?25h[?25lmodules-tool=[31m[103mEnvironmentModulesC[m[26;37H[K[26;5H[?12l[?25h[49;1H[K[26;5H[?25l[49;81H87,1[10C16%[26;5H[?12l[?25h[?25l[49;81H[K[49;1H:[?12l[?25hw[?25l[?12l[?25h[?25l".config/easybuild/config.cfg" 444L, 20574C Ã©crit(s)[28C87,1[10C16%[49;81H[K[49;81H87,1[10C16%[26;5H[?12l[?25h[?25l[49;1H[K[49;1H/[?12l[?25hi[?25l[?12l[?25hn[?25l[?12l[?25hs[?25l[?12l[?25ht[?25l[?12l[?25ha[?25l[?12l[?25hl[?25l[?12l[?25hl[?25l[?12l[?25h[?25l[1;53H[34m[103minstall[2;6Hinstall[m[24;81H[34mEnvironmentModuless[m[25;1H[38;5;130m [m[3C[34mC[m[26;18H[31mEnvironmentModulesC[m[32;36H[34m[103minstall[m[55C[34mff[m[33;1H[38;5;130m [m[49;81H92,32[9C16%[32;36H[?12l[?25h[?25l[49;81H[K[49;1H[1;48r[1;1H[5M[1;49r[44;1H[38;5;130m104 [m[34m# Installpath subdir for software (def software)[m
[38;5;130m105 [m[34m#subdir-software=[m
[38;5;130m106 [m[34m# Base path of user-specific modules relative to their $HOME[m
[38;5;130m107 [m[34m#subdir-user-modules=[m
[38;5;130m108 [m[34m# Suffix for module files [m[34m[103minstall[m[34m path (def all)[m[49;1H[K[49;81H108,27[8C17%[48;31H[?12l[?25h[?25l
/install[49;81H[K[49;1H[27m[m[H[2J[1;1H[38;5;130m139 [m[34m#check-github=[m
[38;5;130m140 [m[34m# Run a style check on the given easyconfigs (def False)[m
[38;5;130m141 [m[34m#check-style=[m
[38;5;130m142 [m[34m# Clean up easyconfig files for pull request (def True)[m
[38;5;130m143 [m[34m#cleanup-easyconfigs=[m
[38;5;130m144 [m[34m# Close pull request (type <type 'int'>)[m
[38;5;130m145 [m[34m#close-pr=[m
[38;5;130m146 [m[34m# Custom close message for pull request closed with --close-pr;  (type <type 'str'>)[m
[38;5;130m147 [m[34m#close-pr-msg=[m
[38;5;130m148 [m[34m# Close reason for pull request closed with --close-pr; supported values: archived, inactive,  [m[11;1H[38;5;130m    [m[34mobsolete (type <type 'str'>)[m
[38;5;130m149 [m[34m#close-pr-reasons=[m
[38;5;130m150 [m[34m# Dump test report to specified path (def test_report.md)[m
[38;5;130m151 [m[34m#dump-test-report=[m
[38;5;130m152 [m[34m# Obtain easyconfigs from specified PR (type <type 'int'>)[m
[38;5;130m153 [m[34m#from-pr=[m
[38;5;130m154 [m[34m# Path to Git working directories for EasyBuild repositories (type <type 'str'>)[m
[38;5;130m155 [m[34m#git-working-dirs-path=[m
[38;5;130m156 [m[34m# GitHub organization (type <type 'str'>)[m
[38;5;130m157 [m[34m#github-org=[m
[38;5;130m158 [m[34m# GitHub username (type <type 'str'>)[m
[38;5;130m159 [m[34m#github-user=[m
[38;5;130m160 [m[34m# Install GitHub token (requires --github-user) (def False)[m
[38;5;130m161 [m[34m#[m[34m[103minstall[m[34m-github-token=[m
[38;5;130m162 [m[34m# List pull requests (type <type 'str'>; def open,created,desc)[m
[38;5;130m163 [m[34m#list-prs=[m
[38;5;130m164 [m[34m# Merge pull request (type <type 'int'>)[m
[38;5;130m165 [m[34m#merge-pr=[m
[38;5;130m166 [m[34m# Open a new pull request (def False)[m
[38;5;130m167 [m[34m#new-pr=[m
[38;5;130m168 [m[34m# Branch name to use for new PRs; '<timestamp>_new_pr_<name><version>' if unspecified (type <tt[m[32;1H[38;5;130m    [m[34mype 'str'>)[m
[38;5;130m169 [m[34m#pr-branch-name=[m
[38;5;130m170 [m[34m# Commit message for new/updated pull request created with --new-pr (type <type 'str'>)[m
[38;5;130m171 [m[34m#pr-commit-msg=[m
[38;5;130m172 [m[34m# Description for new pull request created with --new-pr (type <type 'str'>)[m
[38;5;130m173 [m[34m#pr-descr=[m
[38;5;130m174 [m[34m# Target account for new PRs (type <type 'str'>; def easybuilders)[m
[38;5;130m175 [m[34m#pr-target-account=[m
[38;5;130m176 [m[34m# Target branch for new PRs (type <type 'str'>; def develop)[m
[38;5;130m177 [m[34m#pr-target-branch=[m
[38;5;130m178 [m[34m# Target repository for new/updating PRs (type <type 'str'>; def easybuild-easyconfigs)[m
[38;5;130m179 [m[34m#pr-target-repo=[m
[38;5;130m180 [m[34m# Title for new pull request created with --new-pr (type <type 'str'>)[m
[38;5;130m181 [m[34m#pr-title=[m
[38;5;130m182 [m[34m# Preview a new pull request (def False)[m
[38;5;130m183 [m[34m#preview-pr=[m
[38;5;130m184 [m[34m# Review specified pull request (type <type 'int'>)[m[49;81H161,2[9C34%[24;6H[?12l[?25h[?25l[49;1H/install[49;81H[K[49;1H[27m[m[H[2J[1;1H[38;5;130m195 [m[34m#avail-cfgfile-constants=[m
[38;5;130m196 [m[34m# Show all constants that can be used in easyconfigs (def False)[m
[38;5;130m197 [m[34m#avail-easyconfig-constants=[m
[38;5;130m198 [m[34m# Show all license constants that can be used in easyconfigs (def False)[m
[38;5;130m199 [m[34m#avail-easyconfig-licenses=[m
[38;5;130m200 [m[34m# Show all easyconfig parameters (include easyblock-specific ones by using -e) (def False)[m
[38;5;130m201 [m[34m#avail-easyconfig-params=[m
[38;5;130m202 [m[34m# Show all template names and template constants that can be used in easyconfigs. (def False)[m
[38;5;130m203 [m[34m#avail-easyconfig-templates=[m
[38;5;130m204 [m[34m# Show list of known hooks (def False)[m
[38;5;130m205 [m[34m#avail-hooks=[m
[38;5;130m206 [m[34m# Show options for toolchain (type str)[m
[38;5;130m207 [m[34m#avail-toolchain-opts=[m
[38;5;130m208 [m[34m# Check for version conflicts in dependency graphs (def False)[m
[38;5;130m209 [m[34m#check-conflicts=[m
[38;5;130m210 [m[34m# Create dependency graph[m
[38;5;130m211 [m[34m#dep-graph=[m
[38;5;130m212 [m[34m# Dump source script to set up build environment based on toolchain/dependencies (def False)[m
[38;5;130m213 [m[34m#dump-env-script=[m
[38;5;130m214 [m[34m# Print location to EasyBuild log file of last (failed) session (def False)[m
[38;5;130m215 [m[34m#last-log=[m
[38;5;130m216 [m[34m# Show list of available easyblocks (type choice; def simple) (choices: simple, detailed)[m
[38;5;130m217 [m[34m#list-easyblocks=[m
[38;5;130m218 [m[34m# Show list of [m[34m[103minstall[m[34med software (type choice; def simple) (choices: simple, detailed)[m
[38;5;130m219 [m[34m#list-[m[34m[103minstall[m[34med-software=[m
[38;5;130m220 [m[34m# Show list of supported software (type choice; def simple) (choices: simple, detailed)[m
[38;5;130m221 [m[34m#list-software=[m
[38;5;130m222 [m[34m# Show list of known toolchains (def False)[m
[38;5;130m223 [m[34m#list-toolchains=[m
[38;5;130m224 [m[34m# Search for easyconfig files in the robot search path, print full paths[m
[38;5;130m225 [m[34m#search=[m
[38;5;130m226 [m[34m# Search for easyconfig files in the robot search path, print only filenames[m
[38;5;130m227 [m[34m#search-filename=[m
[38;5;130m228 [m[34m# Search for easyconfig files in the robot search path, print short paths[m
[38;5;130m229 [m[34m#search-short=[m
[38;5;130m230 [m[34m# Show current EasyBuild configuration (only non-default + selected settings) (def False)[m
[38;5;130m231 [m[34m#show-config=[m
[38;5;130m232 [m[34m# Show list of default config files (def False)[m
[38;5;130m233 [m[34m#show-default-configfiles=[m
[38;5;130m234 [m[34m# Show default module classes with description (def False)[m
[38;5;130m235 [m[34m#show-default-moduleclasses=[m
[38;5;130m236 [m[34m# Show current EasyBuild configuration (all settings) (def False)[m
[38;5;130m237 [m[34m#show-full-config=[m
[38;5;130m238 [m[34m# Show system information relevant to EasyBuild (def False)[m
[38;5;130m239 [m[34m#show-system-info=[m
[38;5;130m240 [m[34m# Terse output (machine-readable) (def False)[m
[38;5;130m241 [m[34m#terse=[m
[38;5;130m242 [m[49;81H218,16[8C48%[24;20H[?12l[?25h[?25l[49;1H/install[49;81H[K[49;1H[80C219,7[9C48%[25;11H[?12l[?25h[?25l[49;81H[K[49;1H[27m[m[H[2J[1;1H[38;5;130m253 [m[34m#job-max-walltime=[m
[38;5;130m254 [m[34m# Output directory for jobs (default: current directory) (def /home/romain.pereira)[m
[38;5;130m255 [m[34m#job-output-dir=[m
[38;5;130m256 [m[34m# Interval between polls for status of jobs (in seconds) (type <type 'float'>; def 30.0)[m
[38;5;130m257 [m[34m#job-polling-interval=[m
[38;5;130m258 [m[34m# Target resource for jobs[m
[38;5;130m259 [m[34m#job-target-resource=[m
[38;5;130m260 
261 [m[32m[override][m
[38;5;130m262 [m[34m# Include dummy in minimal toolchain searches (def False)[m
[38;5;130m263 [m[34m#add-dummy-to-minimal-toolchains=[m
[38;5;130m264 [m[34m# List of software names for which to allow loaded modules in initial environment (type comma--[m[13;1H[38;5;130m    [m[34mseparated list; def EasyBuild)[m
[38;5;130m265 [m[34m#allow-loaded-modules=[m
[38;5;130m266 [m[34m# Allow mismatch of modules tool and definition of 'module' function (def False)[m
[38;5;130m267 [m[34m#allow-modules-tool-mismatch=[m
[38;5;130m268 [m[34m# Allow using of EasyBuild as root (NOT RECOMMENDED!) (def False)[m
[38;5;130m269 [m[34m#allow-use-as-root-and-accept-consequences=[m
[38;5;130m270 [m[34m# Back up an existing module file, if any. Only works when using --module-only[m
[38;5;130m271 [m[34m#backup-modules=[m
[38;5;130m272 [m[34m# Action to take when defined $EBROOT* environment variables are found for which there is no mm[m[22;1H[38;5;130m    [m[34matching loaded module; supported values: error, ignore, unset, warn (def warn)[m
[38;5;130m273 [m[34m#check-ebroot-env-vars=[m
[38;5;130m274 [m[34m# Cleanup build dir after successful [m[34m[103minstall[m[34mation. (def True)[m
[38;5;130m275 [m[34m#cleanup-builddir=[m
[38;5;130m276 [m[34m# Cleanup tmp dir after successful run. (def True)[m
[38;5;130m277 [m[34m#cleanup-tmpdir=[m
[38;5;130m278 [m[34m# Colorize output (type choice; def auto) (choices: auto, always, never)[m
[38;5;130m279 [m[34m#color=[m
[38;5;130m280 [m[34m# Also consider archived easyconfigs (def False)[m
[38;5;130m281 [m[34m#consider-archived-easyconfigs=[m
[38;5;130m282 [m[34m# Generate container recipe/image (def False)[m
[38;5;130m283 [m[34m#containerize=[m
[38;5;130m284 [m[34m# Run Lmod modules tool commands in debug module (def False)[m
[38;5;130m285 [m[34m#debug-lmod=[m
[38;5;130m286 [m[34m# Specify default optimisation level (type choice; def defaultopt) (choices: noopt, lowopt, dee[m[37;1H[38;5;130m    [m[34mfaultopt, opt)[m
[38;5;130m287 [m[34m#default-opt-level=[m
[38;5;130m288 [m[34m# Run pretending to be (future) version, to test removal of deprecated code.[m
[38;5;130m289 [m[34m#deprecated=[m
[38;5;130m290 [m[34m# Detect loaded EasyBuild-generated modules, act accordingly; supported values: error, ignore,,[m[42;1H[38;5;130m    [m[34m purge, unload, warn (def warn)[m
[38;5;130m291 [m[34m#detect-loaded-modules=[m
[38;5;130m292 [m[34m# Enable including of development log messages (def False)[m
[38;5;130m293 [m[34m#devel=[m
[38;5;130m294 [m[34m# Timeout for initiating downloads (in seconds) (type <type 'float'>)[m
[38;5;130m295 [m[34m#download-timeout=[m
[38;5;130m296 [m[34m# Reformat easyconfigs using autopep8 when dumping them (def False)[m[49;81H274,38[8C63%[24;42H[?12l[?25h[?25l[49;1H/install[49;81H[K[49;1H[1;48r[1;1H[17M[1;49r[32;1H[38;5;130m297 [m[34m#dump-autopep8=[m
[38;5;130m298 [m[34m# easyblock to use for processing the spec file or dumping the options[m
[38;5;130m299 [m[34m#easyblock=[m
[38;5;130m300 [m[34m# Enforce availability of checksums for all sources/patches, so they can be verified (def Falss[m[36;1H[38;5;130m    [m[34me)[m
[38;5;130m301 [m[34m#enforce-checksums=[m
[38;5;130m302 [m[34m# Allow experimental code (with behaviour that can be changed/removed at any given time). (deff[m[39;1H[38;5;130m    [m[34m False)[m
[38;5;130m303 [m[34m#experimental=[m
[38;5;130m304 [m[34m# List of extra modules to load after setting up the build environment (type comma-separated ll[m[42;1H[38;5;130m    [m[34mist)[m
[38;5;130m305 [m[34m#extra-modules=[m
[38;5;130m306 [m[34m# Allow downloading sources ignoring OS and modules tool dependencies, implies --stop=fetch, --[m[45;1H[38;5;130m    [m[34m-ignore-osdeps and ignore modules tool (def False)[m
[38;5;130m307 [m[34m#fetch=[m
[38;5;130m308 [m[34m# List of dependencies that you do *not* want to [m[34m[103minstall[m[34m with EasyBuild, because equivalent OSS[m[48;1H[38;5;130m    [m[34m packages are [m[34m[103minstall[m[34med. (e.g. --filter-deps=zlib,ncurses) (type comma-separated list)[m[49;1H[K[49;81H308,50[8C66%[47;54H[?12l[?25h[?25l

/install[49;81H[K[49;1H[80C308,109[7C66%[48;19H[?12l[?25h[?25l[49;81H[K[49;1H[1;48r[1;1H[5M[1;49r[44;1H[38;5;130m309 [m[34m#filter-deps=[m
[38;5;130m310 [m[34m# List of names of environment variables that should *not* be defined/updated by module files  [m[46;1H[38;5;130m    [m[34mgenerated by EasyBuild (type comma-separated list)[m
[38;5;130m311 [m[34m#filter-env-vars=[m
[38;5;130m312 [m[34m# Use fixed naming scheme for [m[34m[103minstall[m[34mation directories (def False)[m[49;1H[K[49;81H312,31[8C67%[48;35H[?12l[?25h[?25l
/install[49;81H[K[49;1H[1;48r[48;1H
[1;49r[48;1H[38;5;130m313 [m[34m#fixed-[m[34m[103minstall[m[34mdir-naming-scheme=[m[49;1H[K[49;81H313,8[9C67%[48;12H[?12l[?25h[?25l
/install[49;81H[K[49;1H[1;48r[1;1H[4M[1;49r[45;1H[38;5;130m314 [m[34m# Force re-downloading of sources and/or patches, even if they are available already in sourcee[m[46;1H[38;5;130m    [m[34m path (type choice; def sources) (choices: all, patches, sources)[m
[38;5;130m315 [m[34m#force-download=[m
[38;5;130m316 [m[34m# Group to be used for software [m[34m[103minstall[m[34mations (only verified, not set)[m[49;1H[K[49;81H316,33[8C68%[48;37H[?12l[?25h[?25l
/install[49;81H[K[49;1H[1;48r[1;1H[2M[1;49r[47;1H[38;5;130m317 [m[34m#group=[m
[38;5;130m318 [m[34m# Enable group write permissions on [m[34m[103minstall[m[34mation directory after [m[34m[103minstall[m[34mation (def False)[m[49;1H[K[49;81H318,37[8C68%[48;41H[?12l[?25h[?25l
/install[49;81H[K[49;1H[80C318,66[8C68%[48;70H[?12l[?25h[?25l[49;81H[K[49;1H[1;48r[48;1H
[1;49r[48;1H[38;5;130m319 [m[34m#group-writable-[m[34m[103minstall[m[34mdir=[m[49;1H[K[49;81H319,17[8C69%[48;21H[?12l[?25h[?25l
/install[49;81H[K[49;1H[1;48r[1;1H[14M[1;49r[35;1H[38;5;130m320 [m[34m# Install 'hidden' module file(s) by prefixing their version with '.' (def False)[m
[38;5;130m321 [m[34m#hidden=[m
[38;5;130m322 [m[34m# Comma separated list of dependencies that you want automatically hidden, (e.g. --hide-deps=zz[m[38;1H[38;5;130m    [m[34mlib,ncurses) (type comma-separated list)[m
[38;5;130m323 [m[34m#hide-deps=[m
[38;5;130m324 [m[34m# Comma separated list of toolchains that you want automatically hidden, (e.g. --hide-toolchaii[m[41;1H[38;5;130m    [m[34mns=GCCcore) (type comma-separated list)[m
[38;5;130m325 [m[34m#hide-toolchains=[m
[38;5;130m326 [m[34m# Ignore failing checksum verification (def False)[m
[38;5;130m327 [m[34m#ignore-checksums=[m
[38;5;130m328 [m[34m# Ignore any listed OS dependencies (def False)[m
[38;5;130m329 [m[34m#ignore-osdeps=[m
[38;5;130m330 [m[34m# Install latest known version of easybuild (def False)[m
[38;5;130m331 [m[34m#[m[34m[103minstall[m[34m-latest-eb-release=[m[49;1H[K[49;81H331,2[9C72%[48;6H[?12l[?25h[?25l
/install[49;81H[K[49;1H[1;48r[1;1H[22M[1;49r[27;1H[38;5;130m332 [m[34m# Fallback in sanity check to lib64/ equivalent for missing libraries (def True)[m
[38;5;130m333 [m[34m#lib64-fallback-sanity-check=[m
[38;5;130m334 [m[34m# Maximum ratio for failures to allow when adjusting permissions (type float; def 0.5)[m
[38;5;130m335 [m[34m#max-fail-ratio-adjust-permissions=[m
[38;5;130m336 [m[34m# Use minimal toolchain when resolving dependencies (def False)[m
[38;5;130m337 [m[34m#minimal-toolchains=[m
[38;5;130m338 [m[34m# Only generate module file(s); skip all steps except for module, prepare, ready, sanitycheck  [m[34;1H[38;5;130m    [m[34m(def False)[m
[38;5;130m339 [m[34m#module-only=[m
[38;5;130m340 [m[34m# Check version of modules tool being used (def True)[m
[38;5;130m341 [m[34m#modules-tool-version-check=[m
[38;5;130m342 [m[34m# Template for MPI commands (template keys: %(nr_ranks)s, %(cmd)s)[m
[38;5;130m343 [m[34m#mpi-cmd-template=[m
[38;5;130m344 [m[34m# Run MPI tests (when relevant) (def True)[m
[38;5;130m345 [m[34m#mpi-tests=[m
[38;5;130m346 [m[34m# Set architecture optimization, overriding native architecture optimizations[m
[38;5;130m347 [m[34m#optarch=[m
[38;5;130m348 [m[34m# Set output format (type choice; def txt) (choices: txt, rst)[m
[38;5;130m349 [m[34m#output-format=[m
[38;5;130m350 [m[34m# Specify (maximum) level of parallellism used during build procedure (type int)[m
[38;5;130m351 [m[34m#parallel=[m
[38;5;130m352 [m[34m# Create [m[34m[103minstall[m[34mation directory before submitting build jobs (def True)[m[49;1H[K[49;81H352,10[8C77%[48;14H[?12l[?25h[?25l
/install[49;81H[K[49;1H[1;48r[1;1H[2M[1;49r[47;1H[38;5;130m353 [m[34m#pre-create-[m[34m[103minstall[m[34mdir=[m
[38;5;130m354 [m[34m# Does the build/[m[34m[103minstall[m[34mation in a test directory located in $HOME/easybuild[m[34m[103minstall[m[34m (def False[m[48;1H[94m@                                                                                                 [m[49;1H[K[49;81H353,13[8C77%[47;17H[?12l[?25h[?25l

/install[49;81H[K[49;1H[1;48r[48;1H
[1;49r[47;1H[38;5;130m354 [m[34m# Does the build/[m[34m[103minstall[m[34mation in a test directory located in $HOME/easybuild[m[34m[103minstall[m[34m (def Falsee[m[48;1H[38;5;130m    [m[34m)[m[49;1H[K[49;81H354,18[8C77%[47;22H[?12l[?25h[?25l

/install[49;81H[K[49;1H[80C354,77[8C77%[47;81H[?12l[?25h[?25l[49;81H[K[49;1H[1;48r[1;1H[2M[1;49r[47;1H[38;5;130m355 [m[34m#pretend=[m
[38;5;130m356 [m[34m# Set read-only permissions on [m[34m[103minstall[m[34mation directory after [m[34m[103minstall[m[34mation (def False)[m[49;1H[K[49;81H356,32[8C78%[48;36H[?12l[?25h[?25l
/install[49;81H[K[49;1H[80C356,61[8C78%[48;65H[?12l[?25h[?25l[34mi#nstallation (def False)[m[49;86H2[48;66H[?12l[?25h[?25l[1C[34m#nstallation (def False)[m[49;86H3[48;67H[?12l[?25h[?25l[1C[34m#nstallation (def False)[m[49;86H4[48;68H[?12l[?25h[?25l[1C[34m#nstallation (def False)[m[49;86H5[48;69H[?12l[?25h[?25l[1C[34m#nstallation (def False)[m[49;86H6[48;70H[?12l[?25h[?25l[1C[34m#nstallation (def False)[m[49;86H7[48;71H[?12l[?25h[?25l[1C[34m#nstallation (def False)[m[49;86H8[48;72H[?12l[?25h[?25l[1C[34m#nstallation (def False)[m[49;86H9[48;73H[?12l[?25h[?25l[1C[34m#nstallation (def False)[m[49;85H70[48;74H[?12l[?25h[?25l[1C[34m#nstallation (def False)[m[49;86H1[48;75H[?12l[?25h[?25l[1C[34m#nstallation (def False[m[48;1H[94m@                                                                                                 [1;48r[m[1;1H[2M[1;49r[46;1H[38;5;130m356 [m[34m# Set read-only permissions on [m[34m[103minstall[m[34mation directory after i###########nstallation (def Falsee[m[47;1H[38;5;130m    [m[34m)[m
[38;5;130m357 [m[34m#read-only-[m[34m[103minstall[m[34mdir=[m[49;1H[K[49;81H356,72[8C78%[46;76H[?12l[?25h[?25l[1C[34m#nstallation (def Falss[m[47;1H[38;5;130m [m[3C[34me)[m[49;86H3[46;77H[?12l[?25h[?25l[1C[34m#nstallation (def Fall[m[47;1H[38;5;130m [m[3C[34mse)[m[49;86H4[46;78H[?12l[?25h[?25l[1C[34m#nstallation (def Faa[m[47;1H[38;5;130m [m[3C[34mlse)[m[49;86H5[46;79H[?12l[?25h[?25l[1C[34m#nstallation (def FF[m[47;1H[38;5;130m [m[3C[34malse)[m[49;86H6[46;80H[?12l[?25h[?25l[1C[34m#nstallation (def  [m[47;1H[38;5;130m [m[3C[34mFalse)[m[49;86H7[46;81H[?12l[?25h[?25l[1C[34m#nstallation (deff[m[47;1H[38;5;130m [m[3C[34m False)[m[49;86H8[46;82H[?12l[?25h[?25l[1C[34m#nstallation (dee[m[47;1H[38;5;130m [m[3C[34mf False)[m[49;86H9[46;83H[?12l[?25h[?25l[1C[34m#nstallation (dd[m[47;1H[38;5;130m [m[3C[34mef False)[m[49;85H80[46;84H[?12l[?25h[?25l[1C[34m#nstallation (([m[47;1H[38;5;130m [m[3C[34mdef False)[m[49;86H1[46;85H[?12l[?25h[?25l[1C[34m#nstallation  [m[47;1H[38;5;130m [m[3C[34m(def False)[m[49;86H2[46;86H[?12l[?25h[?25l[1C[34m#nstallationn[m[47;1H[38;5;130m [m[3C[34m (def False)[m[49;86H3[46;87H[?12l[?25h[?25l[1C[34m#nstallatioo[m[47;1H[38;5;130m [m[3C[34mn (def False)[m[49;86H4[46;88H[?12l[?25h[?25l[1C[34m#nstallatii[m[47;1H[38;5;130m [m[3C[34mon (def False)[m[49;86H5[46;89H[?12l[?25h[?25l


1 modification ; avant #26 ; il y a 1 secondes[49;81H[K[46;89H[34mnstallatioo[m[47;1H[38;5;130m [m[3C[34mn (def False)[m[47;18H[K[49;81H356,84[8C78%[46;88H[?12l[?25h[?25l[49;26H5[49;81H[K[46;88H[34mnstallationn[m[47;1H[38;5;130m [m[3C[34m (def False)[m[47;17H[K[49;81H356,83[8C78%[46;87H[?12l[?25h[?25l[49;26H4[10C2[49;81H[K[46;87H[34mnstallation  [m[47;1H[38;5;130m [m[3C[34m(def False)[m[47;16H[K[49;81H356,82[8C78%[46;86H[?12l[?25h[?25l[49;26H3[49;81H[K[46;86H[34mnstallation (([m[47;1H[38;5;130m [m[3C[34mdef False)[m[47;15H[K[49;81H356,81[8C78%[46;85H[?12l[?25h[?25l[49;26H2[49;81H[K[46;85H[34mnstallation (dd[m[47;1H[38;5;130m [m[3C[34mef False)[m[47;14H[K[49;81H356,80[8C78%[46;84H[?12l[?25h[?25l[49;26H1[10C4[49;81H[K[46;84H[34mnstallation (dee[m[47;1H[38;5;130m [m[3C[34mf False)[m[47;13H[K[49;81H356,79[8C78%[46;83H[?12l[?25h[?25l[49;26H0[49;81H[K[46;83H[34mnstallation (deff[m[47;1H[38;5;130m [m[3C[34m False)[m[47;12H[K[49;81H356,78[8C78%[46;82H[?12l[?25h[?25l[49;25H19[49;81H[K[46;82H[34mnstallation (def  [m[47;1H[38;5;130m [m[3C[34mFalse)[m[47;11H[K[49;81H356,77[8C78%[46;81H[?12l[?25h[?25l[49;26H8[49;81H[K[46;81H[34mnstallation (def FF[m[47;1H[38;5;130m [m[3C[34malse)[m[47;10H[K[49;81H356,76[8C78%[46;80H[?12l[?25h[?25l[49;26H7[49;81H[K[46;80H[34mnstallation (def Faa[m[47;1H[38;5;130m [m[3C[34mlse)[m[47;9H[K[49;81H356,75[8C78%[46;79H[?12l[?25h[?25l[49;26H6[49;81H[K[46;79H[34mnstallation (def Fall[m[47;1H[38;5;130m [m[3C[34mse)[m[47;8H[K[49;81H356,74[8C78%[46;78H[?12l[?25h[?25l[49;26H5[49;81H[K[46;78H[34mnstallation (def Falss[m[47;1H[38;5;130m [m[3C[34me)[m[47;7H[K[49;81H356,73[8C78%[46;77H[?12l[?25h[?25l[49;26H4[49;81H[K[46;77H[34mnstallation (def Falsee[m[47;1H[38;5;130m [m[3C[34m)[m[47;6H[K[49;81H356,72[8C78%[46;76H[?12l[?25h[?25l[49;26H3[49;81H[K[46;76H[34mnstallation (def False)[m[47;1H[38;5;130m357[m[1C[34m#read-only-[m[34m[103minstall[m[34mdir=[m[48;3H[38;5;130m8[m[2C[34m Enable use of RPATH for linking with libraries (def False)[m[49;81H356,71[8C78%[46;75H[?12l[?25h[?25l[49;26H2[49;81H[K[46;75H[34mnstallation (def False)[m[46;98H[K[49;81H356,70[8C78%[46;74H[?12l[?25h[?25l[49;26H1[49;81H[K[46;74H[34mnstallation (def False)[m[46;97H[K[49;81H356,69[8C78%[46;73H[?12l[?25h[?25l[49;26H0[49;81H[K[46;73H[34mnstallation (def False)[m[46;96H[K[49;81H356,68[8C78%[46;72H[?12l[?25h[?25l[49;25H9 ; il y a 4 secondes[49;46H[K[46;72H[34mnstallation (def False)[m[46;95H[K[49;81H356,67[8C78%[46;71H[?12l[?25h[?25l[49;25H8[49;81H[K[46;71H[34mnstallation (def False)[m[46;94H[K[49;81H356,66[8C78%[46;70H[?12l[?25h[?25l[49;25H7[49;81H[K[46;70H[34mnstallation (def False)[m[46;93H[K[49;81H356,65[8C78%[46;69H[?12l[?25h[?25l[49;25H6[49;81H[K[46;69H[34mnstallation (def False)[m[46;92H[K[49;81H356,64[8C78%[46;68H[?12l[?25h[?25l[49;25H5[49;81H[K[46;68H[34mnstallation (def False)[m[46;91H[K[49;81H356,63[8C78%[46;67H[?12l[?25h[?25l[49;25H4[49;81H[K[46;67H[34mnstallation (def False)[m[46;90H[K[49;81H356,62[8C78%[46;66H[?12l[?25h[?25l[49;25H3[49;81H[K[46;65H[34m[103minstall[m[34mation (def False)[m[46;89H[K[49;81H356,61[8C78%[46;65H[?12l[?25h[?25l[49;25H2[11C0 secondes[49;81H[K[27m[m[H[2J[1;1H[38;5;130m 70 [m[34m# Backend to use for submitting jobs (type choice; def GC3Pie) (choices: GC3Pie, PbsPython, Sll[m[2;1H[38;5;130m    [m[34murm)[m
[38;5;130m 71 [m[34m#job-backend=[m
[38;5;130m 72 [m[34m# Directory name and format of the log file (type comma-separated tuple; def easybuild,easybuii[m[5;1H[38;5;130m    [m[34mld-%(name)s-%(version)s-%(date)s.%(time)s.log)[m
[38;5;130m 73 [m[34m#logfile-format=[m
[38;5;130m 74 [m[34m# Use depends_on (Lmod 7.6.1+) for dependencies in all generated modules (implies recursive unn[m[8;1H[38;5;130m    [m[34mloading of modules). (def False)[m
[38;5;130m 75 [m[34m#module-depends-on=[m
[38;5;130m 76 [m[34m# Module naming scheme to use (def EasyBuildMNS)[m
[38;5;130m 77 [m[34m#module-naming-scheme=[m
[38;5;130m 78 [m[34m# Syntax to be used for module files (type choice; def Lua) (choices: Lua, Tcl)[m
[38;5;130m 79 [mmodule-syntax=[31mTcl[m
[38;5;130m 80 [m[34m# Extend supported module classes (For more info on the default classes, use --show-default-moo[m[15;1H[38;5;130m    [m[34mduleclasses) (type comma-separated list; def base,astro,bio,cae,chem,compiler,data,debugger,dee[m[16;1H[38;5;130m    [m[34mvel,geo,ide,lang,lib,math,mpi,numlib,perf,quantum,phys,system,toolchain,tools,vis)[m
[38;5;130m 81 [m[34m#moduleclasses=[m
[38;5;130m 82 [m[34m# Path to file containing footer to be added to all generated module files[m
[38;5;130m 83 [m[34m#modules-footer=[m
[38;5;130m 84 [m[34m# Path to file containing header to be added to all generated module files[m
[38;5;130m 85 [m[34m#modules-header=[m
[38;5;130m 86 [m[34m# Modules tool to use (type choice; def Lmod) (choices: EnvironmentModules, EnvironmentModuless[m[23;1H[38;5;130m    [m[34mC, EnvironmentModulesTcl, Lmod)[m
[38;5;130m 87 [m[34m#modules-tool=EnvironmentModulesC[m
[38;5;130m 88 [m[34m# Packaging naming scheme choice (type choice; def EasyBuildPNS) (choices: EasyBuildPNS)[m
[38;5;130m 89 [m[34m#package-naming-scheme=[m
[38;5;130m 90 [m[34m# The destination path for the packages built by package-tool (def /home/romain.pereira/.locall[m[28;1H[38;5;130m    [m[34m/easybuild/packages)[m
[38;5;130m 91 [m[34m#packagepath=[m
[38;5;130m 92 [m[34m# Change prefix for buildpath, [m[34m[103minstall[m[34mpath, sourcepath and repositorypath (used prefix for deff[m[31;1H[38;5;130m    [m[34maults /home/romain.pereira/.local/easybuild)[m
[38;5;130m 93 [m[34m#prefix=[m
[38;5;130m 94 [m[34m# Enable generating of modules that unload recursively. (def False)[m
[38;5;130m 95 [m[34m#recursive-module-unload=[m
[38;5;130m 96 [m[34m# Repository type, using repositorypath (type choice; def FileRepository) (choices: FileReposii[m[36;1H[38;5;130m    [m[34mtory)[m
[38;5;130m 97 [m[34m#repository=[m
[38;5;130m 98 [m[34m# Repository path, used by repository (is passed as list of arguments to create the repositoryy[m[39;1H[38;5;130m    [m[34m instance). For more info, use --avail-repositories. (type comma-separated list; def /home/romm[m[40;1H[38;5;130m    [m[34main.pereira/.local/easybuild/ebfiles_repo)[m
[38;5;130m 99 [m[34m#repositorypath=[m
[38;5;130m100 [m[34m# Path(s) to where sources should be downloaded (string, colon-separated) (def /home/romain.pee[m[43;1H[38;5;130m    [m[34mreira/.local/easybuild/sources)[m
[38;5;130m101 [m[34m#sourcepath=[m
[38;5;130m102 [m[34m# Installpath subdir for modules (def modules)[m
[38;5;130m103 [m[34m#subdir-modules=[m
[38;5;130m104 [m[34m# Installpath subdir for software (def software)[m
[38;5;130m105 [m[34m#subdir-software=[m[49;81H87,1[10C16%[24;5H[?12l[?25h[?25l[49;1H[1m-- INSERTION --[m[49;81H[K[49;81H87,1[10C16%[24;5H[?12l[?25h[?25lmodules-tool=[31mEnvironmentModulesC[m[24;37H[K[24;5H[?12l[?25h[49;1H[K[24;5H[?25l[49;81H87,1[10C16%[24;5H[?12l[?25h[?25l[49;82H6[22;5H[?12l[?25h[?25l[49;82H5[21;5H[?12l[?25h[?25l[49;82H4[20;5H[?12l[?25h[?25l[49;82H3[19;5H[?12l[?25h[?25l[49;82H2[18;5H[?12l[?25h[?25l[49;82H1[17;5H[?12l[?25h[?25l[49;82H0[14;5H[?12l[?25h[?25l[49;81H79[13;5H[?12l[?25h[?25l[49;82H8[12;5H[?12l[?25h[?25l[49;82H7[11;5H[?12l[?25h[?25l[49;82H6[10;5H[?12l[?25h[?25l[49;82H5[9;5H[?12l[?25h[?25l[49;82H4[7;5H[?12l[?25h[?25l[49;82H3[6;5H[?12l[?25h[?25l[49;82H2[4;5H[?12l[?25h[?25l[49;82H1[3;5H[?12l[?25h[?25l[49;82H0[1;5H[?12l[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[38;5;130m 69 [m[34m#[m[34m[103minstall[m[34mpath-software=[m[49;81H[K[49;81H69,1[10C16%[1;5H[?12l[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[38;5;130m 68 [m[34m# Install path for software (if None, combine --[m[34m[103minstall[m[34mpath and --subdir-software)[m[49;81H[K[49;81H68,1[10C16%[1;5H[?12l[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[38;5;130m 67 [m[34m#[m[34m[103minstall[m[34mpath-modules=[m[49;81H[K[49;81H67,1[10C16%[1;5H[?12l[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[38;5;130m 66 [m[34m# Install path for modules (if None, combine --[m[34m[103minstall[m[34mpath and --subdir-modules)[m[49;81H[K[49;81H66,1[10C15%[1;5H[?12l[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[38;5;130m 65 [m[34m#[m[34m[103minstall[m[34mpath=[m[49;81H[K[49;81H65,1[10C15%[1;5H[?12l[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[38;5;130m 64 [m[34m# Install path for software and modules (def /home/romain.pereira/.local/easybuild)[m[48;1H[94m@                                                                                                 [m[49;81H[K[49;81H64,1[10C15%[1;5H[?12l[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[38;5;130m 63 [m[34m#include-toolchains=[m[49;81H[K[49;81H63,1[10C15%[1;5H[?12l[?25h[?25l[1;48r[1;1H[2L[1;49r[1;1H[38;5;130m 62 [m[34m# Location(s) of extra or customized toolchains or toolchain components (type comma-separated  [m[2;1H[38;5;130m    [m[34mlist; def )[m[47;1H[94m@                                                                                                 [48;1H@                                                                                                 [m[49;81H[K[49;81H62,1[10C14%[1;5H[?12l[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[38;5;130m 61 [m[34m#include-module-naming-schemes=[m[49;81H[K[49;81H61,1[10C14%[1;5H[?12l[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[38;5;130m 60 [m[34m# Location(s) of extra or customized module naming schemes (type comma-separated list; def )[m[49;81H[K[49;81H60,1[10C14%[1;5H[?12l[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[38;5;130m 59 [m[34m#include-easyblocks=[m[49;81H[K[49;81H59,1[10C14%[1;5H[?12l[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[38;5;130m 58 [m[34m# Location(s) of extra or customized easyblocks (type comma-separated list; def )[m[48;1H[94m@                                                                                                 [m[49;81H[K[49;81H58,1[10C14%[1;5H[?12l[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[38;5;130m 57 [m[34m#ignore-dirs=[m[49;81H[K[49;81H57,1[10C13%[1;5H[?12l[?25h[?25l[1;48r[1;1H[2L[1;49r[1;1H[38;5;130m 56 [m[34m# Directory names to ignore when searching for files/dirs (type comma-separated list; def .gitt[m[2;1H[38;5;130m    [m[34m,.svn)[m[49;81H[K[49;81H56,1[10C13%[1;5H[?12l[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[38;5;130m 55 [m[34m#hooks=[m[49;81H[K[49;81H55,1[10C13%[1;5H[?12l[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[38;5;130m 54 [m[34m# Location of Python module with hook implementations (type str)[m[48;1H[94m@                                                                                                 [m[49;81H[K[49;81H54,1[10C13%[1;5H[?12l[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[38;5;130m 53 [m[34m#external-modules-metadata=[m[49;81H[K[49;81H53,1[10C12%[1;5H[?12l[?25h[?25l[1;48r[1;1H[2L[1;49r[1;1H[38;5;130m 52 [m[34m# List of files specifying metadata for external modules (INI format) (type comma-separated lii[m[2;1H[38;5;130m    [m[34mst)[m[48;1H[94m@                                                                                                 [m[49;81H[K[49;81H52,1[10C12%[1;5H[?12l[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[38;5;130m 51 [m[34m#containerpath=[m[49;81H[K[49;81H51,1[10C12%[1;5H[?12l[?25h[?25l[49;82H2[2;5H[?12l[?25h[?25l[49;82H3[4;5H[?12l[?25h[?25l[49;82H4[5;5H[?12l[?25h[?25l[49;82H5[6;5H[?12l[?25h[?25l[49;82H6[7;5H[?12l[?25h[?25l[49;82H7[9;5H[?12l[?25h[?25l[49;82H8[10;5H[?12l[?25h[?25l[49;82H9[11;5H[?12l[?25h[?25l[49;81H60[12;5H[?12l[?25h[?25l[49;82H1[13;5H[?12l[?25h[?25l[49;82H2[14;5H[?12l[?25h[?25l[49;81H[K[49;1H:[?12l[?25hw[?25l[?12l[?25h[?25l".config/easybuild/config.cfg" 444L, 20574C Ã©crit(s)[28C62,1[10C12%[49;81H[K[49;81H62,1[10C12%[14;5H[?12l[?25h[?25l[49;82H3[16;5H[?12l[?25h[?25l[49;82H4[17;5H[?12l[?25h[?25l[49;82H5[18;5H[?12l[?25h[?25l[49;82H6[19;5H[?12l[?25h[?25l[49;82H5[18;5H[?12l[?25h[?25l[103minstall[mpath=[18;17H[K[18;5H[?12l[?25h[?25l[49;85H2[18;16H[?12l[?25h[?25l[49;1H[1m-- INSERTION --[m[49;16H[K[49;81H65,12[9C12%[18;16H[?12l[?25h[?25l[49;85H3[18;17H[?12l[?25h[?25l[31m/[m[49;85H4[18;18H[?12l[?25h[?25l[31mh[m[49;85H5[18;19H[?12l[?25h[?25l[31mo[m[49;85H6[18;20H[?12l[?25h[?25l[31mm[m[49;85H7[18;21H[?12l[?25h[?25l[31me[m[49;85H8[18;22H[?12l[?25h[?25l[31m/[m[49;85H9[18;23H[?12l[?25h[?25l[31mr[m[49;84H20[18;24H[?12l[?25h[?25l[31mo[m[49;85H1[18;25H[?12l[?25h[?25l[31mm[m[49;85H2[18;26H[?12l[?25h[?25l[31ma[m[49;85H3[18;27H[?12l[?25h[?25l[31mi[m[49;85H4[18;28H[?12l[?25h[?25l[31mn[m[49;85H5[18;29H[?12l[?25h[?25l[31m.[m[49;85H6[18;30H[?12l[?25h[?25l[31mp[m[49;85H7[18;31H[?12l[?25h[?25l[31me[m[49;85H8[18;32H[?12l[?25h[?25l[31mr[m[49;85H9[18;33H[?12l[?25h[?25l[31me[m[49;84H30[18;34H[?12l[?25h[?25l[31mi[m[49;85H1[18;35H[?12l[?25h[?25l[31mr[m[49;85H2[18;36H[?12l[?25h[?25l[31ma[m[49;85H3[18;37H[?12l[?25h[?25l[31m/[m[49;85H4[18;38H[?12l[?25h[?25l[31ml[m[49;85H5[18;39H[?12l[?25h[?25l[31mo[m[49;85H6[18;40H[?12l[?25h[?25l[31mc[m[49;85H7[18;41H[?12l[?25h[?25l[31ma[m[49;85H8[18;42H[?12l[?25h[?25l[31ml[m[49;85H9[18;43H[?12l[?25h[27m[m[H[2J[?25l[1;1H[38;5;130m 58 [m[34m# Location(s) of extra or customized easyblocks (type comma-separated list; def )[m
[38;5;130m 59 [m[34m#include-easyblocks=[m
[38;5;130m 60 [m[34m# Location(s) of extra or customized module naming schemes (type comma-separated list; def )[m
[38;5;130m 61 [m[34m#include-module-naming-schemes=[m
[38;5;130m 62 [m[34m# Location(s) of extra or customized toolchains or toolchain components (type comma-separated  [m[6;1H[38;5;130m    [m[34mlist; def )[m
[38;5;130m 63 [m[34m#include-toolchains=[m
[38;5;130m 64 [m[34m# Install path for software and modules (def /home/romain.pereira/.local/easybuild)[m
[38;5;130m 65 [m[103minstall[mpath=[31m/home/romain.pereira/local[m
[38;5;130m 66 [m[34m# Install path for modules (if None, combine --[m[34m[103minstall[m[34mpath and --subdir-modules)[m
[38;5;130m 67 [m[34m#[m[34m[103minstall[m[34mpath-modules=[m
[38;5;130m 68 [m[34m# Install path for software (if None, combine --[m[34m[103minstall[m[34mpath and --subdir-software)[m
[38;5;130m 69 [m[34m#[m[34m[103minstall[m[34mpath-software=[m
[38;5;130m 70 [m[34m# Backend to use for submitting jobs (type choice; def GC3Pie) (choices: GC3Pie, PbsPython, Sll[m[15;1H[38;5;130m    [m[34murm)[m
[38;5;130m 71 [m[34m#job-backend=[m
[38;5;130m 72 [m[34m# Directory name and format of the log file (type comma-separated tuple; def easybuild,easybuii[m[18;1H[38;5;130m    [m[34mld-%(name)s-%(version)s-%(date)s.%(time)s.log)[m
[38;5;130m 73 [m[34m#logfile-format=[m
[38;5;130m 74 [m[34m# Use depends_on (Lmod 7.6.1+) for dependencies in all generated modules (implies recursive unn[m[21;1H[38;5;130m    [m[34mloading of modules). (def False)[m
[38;5;130m 75 [m[34m#module-depends-on=[m
[38;5;130m 76 [m[34m# Module naming scheme to use (def EasyBuildMNS)[m
[1m-- INSERTION --[m[65C65,39[9C13%[9;43H[?12l[?25h[27m[m[H[2J[?25l[1;1H[38;5;130m 51 [m[34m#containerpath=[m
[38;5;130m 52 [m[34m# List of files specifying metadata for external modules (INI format) (type comma-separated lii[m[3;1H[38;5;130m    [m[34mst)[m
[38;5;130m 53 [m[34m#external-modules-metadata=[m
[38;5;130m 54 [m[34m# Location of Python module with hook implementations (type str)[m
[38;5;130m 55 [m[34m#hooks=[m
[38;5;130m 56 [m[34m# Directory names to ignore when searching for files/dirs (type comma-separated list; def .gitt[m[8;1H[38;5;130m    [m[34m,.svn)[m
[38;5;130m 57 [m[34m#ignore-dirs=[m
[38;5;130m 58 [m[34m# Location(s) of extra or customized easyblocks (type comma-separated list; def )[m
[38;5;130m 59 [m[34m#include-easyblocks=[m
[38;5;130m 60 [m[34m# Location(s) of extra or customized module naming schemes (type comma-separated list; def )[m
[38;5;130m 61 [m[34m#include-module-naming-schemes=[m
[38;5;130m 62 [m[34m# Location(s) of extra or customized toolchains or toolchain components (type comma-separated  [m[15;1H[38;5;130m    [m[34mlist; def )[m
[38;5;130m 63 [m[34m#include-toolchains=[m
[38;5;130m 64 [m[34m# Install path for software and modules (def /home/romain.pereira/.local/easybuild)[m
[38;5;130m 65 [m[103minstall[mpath=[31m/home/romain.pereira/local[m
[38;5;130m 66 [m[34m# Install path for modules (if None, combine --[m[34m[103minstall[m[34mpath and --subdir-modules)[m
[38;5;130m 67 [m[34m#[m[34m[103minstall[m[34mpath-modules=[m
[38;5;130m 68 [m[34m# Install path for software (if None, combine --[m[34m[103minstall[m[34mpath and --subdir-software)[m
[38;5;130m 69 [m[34m#[m[34m[103minstall[m[34mpath-software=[m
[38;5;130m 70 [m[34m# Backend to use for submitting jobs (type choice; def GC3Pie) (choices: GC3Pie, PbsPython, Sll[m[24;1H[38;5;130m    [m[34murm)[m
[38;5;130m 71 [m[34m#job-backend=[m
[38;5;130m 72 [m[34m# Directory name and format of the log file (type comma-separated tuple; def easybuild,easybuii[m[27;1H[38;5;130m    [m[34mld-%(name)s-%(version)s-%(date)s.%(time)s.log)[m
[38;5;130m 73 [m[34m#logfile-format=[m
[38;5;130m 74 [m[34m# Use depends_on (Lmod 7.6.1+) for dependencies in all generated modules (implies recursive unn[m[30;1H[38;5;130m    [m[34mloading of modules). (def False)[m
[38;5;130m 75 [m[34m#module-depends-on=[m
[38;5;130m 76 [m[34m# Module naming scheme to use (def EasyBuildMNS)[m
[38;5;130m 77 [m[34m#module-naming-scheme=[m
[38;5;130m 78 [m[34m# Syntax to be used for module files (type choice; def Lua) (choices: Lua, Tcl)[m
[38;5;130m 79 [mmodule-syntax=[31mTcl[m
[38;5;130m 80 [m[34m# Extend supported module classes (For more info on the default classes, use --show-default-moo[m[37;1H[38;5;130m    [m[34mduleclasses) (type comma-separated list; def base,astro,bio,cae,chem,compiler,data,debugger,dee[m[38;1H[38;5;130m    [m[34mvel,geo,ide,lang,lib,math,mpi,numlib,perf,quantum,phys,system,toolchain,tools,vis)[m
[38;5;130m 81 [m[34m#moduleclasses=[m
[38;5;130m 82 [m[34m# Path to file containing footer to be added to all generated module files[m
[38;5;130m 83 [m[34m#modules-footer=[m
[38;5;130m 84 [m[34m# Path to file containing header to be added to all generated module files[m
[38;5;130m 85 [m[34m#modules-header=[m
[38;5;130m 86 [m[34m# Modules tool to use (type choice; def Lmod) (choices: EnvironmentModules, EnvironmentModuless[m[45;1H[38;5;130m    [m[34mC, EnvironmentModulesTcl, Lmod)[m
[38;5;130m 87 [mmodules-tool=[31mEnvironmentModulesC[m
[38;5;130m 88 [m[34m# Packaging naming scheme choice (type choice; def EasyBuildPNS) (choices: EasyBuildPNS)[m
[38;5;130m 89 [m[34m#package-naming-scheme=[m
[1m-- INSERTION --[m[65C65,39[9C12%[18;43H[?12l[?25h[49;1H[K[18;42H[?25l[49;81H65,38[9C12%[18;42H[?12l[?25h[49;1H
[?1l>[?1049l
[1]+  StoppÃ©                 vim .config/easybuild/config.cfg
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ echo H[K$HOME
/home/romain.pereira
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ fg
vim .config/easybuild/config.cfg
[?1049h[?1h=[?12;25h[?12l[?25h[27m[m[H[2J[?25l[1;1H[38;5;130m 51 [m[34m#containerpath=[m
[38;5;130m 52 [m[34m# List of files specifying metadata for external modules (INI format) (type comma-separated lii[m[3;1H[38;5;130m    [m[34mst)[m
[38;5;130m 53 [m[34m#external-modules-metadata=[m
[38;5;130m 54 [m[34m# Location of Python module with hook implementations (type str)[m
[38;5;130m 55 [m[34m#hooks=[m
[38;5;130m 56 [m[34m# Directory names to ignore when searching for files/dirs (type comma-separated list; def .gitt[m[8;1H[38;5;130m    [m[34m,.svn)[m
[38;5;130m 57 [m[34m#ignore-dirs=[m
[38;5;130m 58 [m[34m# Location(s) of extra or customized easyblocks (type comma-separated list; def )[m
[38;5;130m 59 [m[34m#include-easyblocks=[m
[38;5;130m 60 [m[34m# Location(s) of extra or customized module naming schemes (type comma-separated list; def )[m
[38;5;130m 61 [m[34m#include-module-naming-schemes=[m
[38;5;130m 62 [m[34m# Location(s) of extra or customized toolchains or toolchain components (type comma-separated  [m[15;1H[38;5;130m    [m[34mlist; def )[m
[38;5;130m 63 [m[34m#include-toolchains=[m
[38;5;130m 64 [m[34m# Install path for software and modules (def /home/romain.pereira/.local/easybuild)[m
[38;5;130m 65 [m[103minstall[mpath=[31m/home/romain.pereira/local[m
[38;5;130m 66 [m[34m# Install path for modules (if None, combine --[m[34m[103minstall[m[34mpath and --subdir-modules)[m
[38;5;130m 67 [m[34m#[m[34m[103minstall[m[34mpath-modules=[m
[38;5;130m 68 [m[34m# Install path for software (if None, combine --[m[34m[103minstall[m[34mpath and --subdir-software)[m
[38;5;130m 69 [m[34m#[m[34m[103minstall[m[34mpath-software=[m
[38;5;130m 70 [m[34m# Backend to use for submitting jobs (type choice; def GC3Pie) (choices: GC3Pie, PbsPython, Sll[m[24;1H[38;5;130m    [m[34murm)[m
[38;5;130m 71 [m[34m#job-backend=[m
[38;5;130m 72 [m[34m# Directory name and format of the log file (type comma-separated tuple; def easybuild,easybuii[m[27;1H[38;5;130m    [m[34mld-%(name)s-%(version)s-%(date)s.%(time)s.log)[m
[38;5;130m 73 [m[34m#logfile-format=[m
[38;5;130m 74 [m[34m# Use depends_on (Lmod 7.6.1+) for dependencies in all generated modules (implies recursive unn[m[30;1H[38;5;130m    [m[34mloading of modules). (def False)[m
[38;5;130m 75 [m[34m#module-depends-on=[m
[38;5;130m 76 [m[34m# Module naming scheme to use (def EasyBuildMNS)[m
[38;5;130m 77 [m[34m#module-naming-scheme=[m
[38;5;130m 78 [m[34m# Syntax to be used for module files (type choice; def Lua) (choices: Lua, Tcl)[m
[38;5;130m 79 [mmodule-syntax=[31mTcl[m
[38;5;130m 80 [m[34m# Extend supported module classes (For more info on the default classes, use --show-default-moo[m[37;1H[38;5;130m    [m[34mduleclasses) (type comma-separated list; def base,astro,bio,cae,chem,compiler,data,debugger,dee[m[38;1H[38;5;130m    [m[34mvel,geo,ide,lang,lib,math,mpi,numlib,perf,quantum,phys,system,toolchain,tools,vis)[m
[38;5;130m 81 [m[34m#moduleclasses=[m
[38;5;130m 82 [m[34m# Path to file containing footer to be added to all generated module files[m
[38;5;130m 83 [m[34m#modules-footer=[m
[38;5;130m 84 [m[34m# Path to file containing header to be added to all generated module files[m
[38;5;130m 85 [m[34m#modules-header=[m
[38;5;130m 86 [m[34m# Modules tool to use (type choice; def Lmod) (choices: EnvironmentModules, EnvironmentModuless[m[45;1H[38;5;130m    [m[34mC, EnvironmentModulesTcl, Lmod)[m
[38;5;130m 87 [mmodules-tool=[31mEnvironmentModulesC[m
[38;5;130m 88 [m[34m# Packaging naming scheme choice (type choice; def EasyBuildPNS) (choices: EasyBuildPNS)[m
[38;5;130m 89 [m[34m#package-naming-scheme=[m[49;81H65,38[9C12%[18;42H[?12l[?25h[?25l[49;82H6[19;42H[?12l[?25h[?25l[49;82H7,21[20;25H[?12l[?25h[?25l[49;82H8,38[21;42H[?12l[?25h[?25l[49;82H9,22[22;26H[?12l[?25h[?25l[49;81H[K[49;1H/[?12l[?25hs[?25l[?12l[?25hu[?25l[?12l[?25hb[?25l[?12l[?25hd[?25l[?12l[?25hi[?25l[?12l[?25hr[?25l[?12l[?25h-[?25l[?12l[?25hs[?25l[?12l[?25ho[?25l[?12l[?25hf[?25l[?12l[?25ht[?25l[?12l[?25hw[?25l[?12l[?25ha[?25l[?12l[?25hr[?25l[?12l[?25he[?25l[?12l[?25h[?25l[1;48r[1;1H[22M[1;49r[27;1H[38;5;130m 90 [m[34m# The destination path for the packages built by package-tool (def /home/romain.pereira/.locall[m[28;1H[38;5;130m    [m[34m/easybuild/packages)[m
[38;5;130m 91 [m[34m#packagepath=[m
[38;5;130m 92 [m[34m# Change prefix for buildpath, installpath, sourcepath and repositorypath (used prefix for deff[m[31;1H[38;5;130m    [m[34maults /home/romain.pereira/.local/easybuild)[m
[38;5;130m 93 [m[34m#prefix=[m
[38;5;130m 94 [m[34m# Enable generating of modules that unload recursively. (def False)[m
[38;5;130m 95 [m[34m#recursive-module-unload=[m
[38;5;130m 96 [m[34m# Repository type, using repositorypath (type choice; def FileRepository) (choices: FileReposii[m[36;1H[38;5;130m    [m[34mtory)[m
[38;5;130m 97 [m[34m#repository=[m
[38;5;130m 98 [m[34m# Repository path, used by repository (is passed as list of arguments to create the repositoryy[m[39;1H[38;5;130m    [m[34m instance). For more info, use --avail-repositories. (type comma-separated list; def /home/romm[m[40;1H[38;5;130m    [m[34main.pereira/.local/easybuild/ebfiles_repo)[m
[38;5;130m 99 [m[34m#repositorypath=[m
[38;5;130m100 [m[34m# Path(s) to where sources should be downloaded (string, colon-separated) (def /home/romain.pee[m[43;1H[38;5;130m    [m[34mreira/.local/easybuild/sources)[m
[38;5;130m101 [m[34m#sourcepath=[m
[38;5;130m102 [m[34m# Installpath subdir for modules (def modules)[m
[38;5;130m103 [m[34m#subdir-modules=[m
[38;5;130m104 [m[34m# Installpath subdir for software (def software)[m
[38;5;130m105 [m[34m#[m[34m[103msubdir-software[m[34m=[m[49;1H[K[49;81H105,2[9C16%[48;6H[?12l[?25h[?25l
/subdir-software[49;81H[K[49;1H[31mLa recherche a atteint le BAS, et continue en HAUT[1;48r[m[1;1H[2L[1;49r[1;1H[38;5;130m 68 [m[34m# Install path for software (if None, combine --installpath and --[m[34m[103msubdir-software[m[34m)[m
[38;5;130m 69 [m[34m#installpath-software=[m[49;1H[K[49;81H68,67[9C16%[31mLa recherche a atteint le BAS, et continue en HAUT[m[49;81H[K[49;81H68,67[9C16%[1;71H[?12l[?25h[?25l[?12l[?25h[?25l[49;1H[K[49;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l".config/easybuild/config.cfg" 444L, 20599C Ã©crit(s)
[?1l>[?12l[?25h[?1049l]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --show-config
#
# Current EasyBuild configuration
# (C: command line argument, D: default value, E: environment variable, F: configuration file)
#
buildpath      (D) = /home/romain.pereira/.local/easybuild/build
containerpath  (D) = /home/romain.pereira/.local/easybuild/containers
installpath    (F) = /home/romain.pereira/local
module-syntax  (F) = Tcl
modules-tool   (F) = EnvironmentModulesC
repositorypath (D) = /home/romain.pereira/.local/easybuild/ebfiles_repo
robot-paths    (D) = /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs
sourcepath     (D) = /home/romain.pereira/.local/easybuild/sources
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --show-default-configfiles
Default list of configuration files:

[with $XDG_CONFIG_HOME: (not set), $XDG_CONFIG_DIRS: (not set)]

* user-level: ${XDG_CONFIG_HOME:-$HOME/.config}/easybuild/config.cfg
  -> /home/romain.pereira/.config/easybuild/config.cfg => found
* system-level: ${XDG_CONFIG_DIRS:-/etc}/easybuild.d/*.cfg
  -> {/etc}/easybuild.d/*.cfg => (no matches)

Default list of existing configuration files (1): /home/romain.pereira/.config/easybuild/config.cfg
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --show-default-configfiles^C
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --show-config | sed "s:$HOME:\$HOME:"
#
# Current EasyBuild configuration
# (C: command line argument, D: default value, E: environment variable, F: configuration file)
#
buildpath      (D) = $HOME/.local/easybuild/build
containerpath  (D) = $HOME/.local/easybuild/containers
installpath    (F) = $HOME/local
module-syntax  (F) = Tcl
modules-tool   (F) = EnvironmentModulesC
repositorypath (D) = $HOME/.local/easybuild/ebfiles_repo
robot-paths    (D) = $HOME/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs
sourcepath     (D) = $HOME/.local/easybuild/sources
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --helpp[K
Usage: eb [options] easyconfig [...]

Builds software based on easyconfig (or parse a directory). Provide one or more easyconfigs or
directories, use -H or --help more information.

Options:
  --version             show program's version number and exit
  -h, --shorthelp       show short help message and exit
  -H OUTPUT_FORMAT, --help=OUTPUT_FORMAT
                        show full help message and exit
  --confighelp          show help as annotated configfile

  Debug and logging options (configfile section MAIN):
    -d, --debug         Enable debug log mode (def False)
    --info              Enable info log mode (def False)
    --quiet             Enable quiet/warning log mode (def False)

  Configfile options:
    --configfiles=CONFIGFILES
                        Parse (additional) configfiles (type comma-separated list; def
                        /home/romain.pereira/.config/easybuild/config.cfg)
    --ignoreconfigfiles=IGNORECONFIGFILES
                        Ignore configfiles (type comma-separated list)

  Basic options:
    Basic runtime options for EasyBuild. (configfile section basic)

    --dry-run           Print build overview incl. dependencies (full paths) (def False)
    -D, --dry-run-short
                        Print build overview incl. dependencies (short paths) (def False)
    -x, --extended-dry-run
                        Print build environment and (expected) build procedure that will be
                        performed (def False)
    --extended-dry-run-ignore-errors
                        Ignore errors that occur during dry run (def True)
    -f, --force         Force to rebuild software even if it's already installed (i.e. if it can
                        be found as module), and skipping check for OS dependencies (def False)
    --job               Submit the build as a job (def False)
    -l, --logtostdout   Redirect main log to stdout (def False)
    -b BLOCKS, --only-blocks=BLOCKS
                        Only build listed blocks (type comma-separated list)
    --rebuild           Rebuild software, even if module already exists (don't skip OS
                        dependencies checks) (def False)
    -r PATH[:PATH], --robot=PATH[:PATH]
                        Enable dependency resolution, using easyconfigs in specified paths (type
                        pathsep-separated list; def )
    --robot-paths=PATH[:PATH]
                        Additional paths to consider by robot for easyconfigs (--robot paths get
                        priority) (type pathsep-separated list; def /home/romain.pereira/local/e
                        asybuild/software/EasyBuild/3.8.1/lib/python2.7/site-
                        packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs)
    --search-paths=PATH[:PATH]
                        Additional locations to consider in --search (next to --robot and
                        --robot-paths paths) (type pathsep-separated list; def )
    -k, --skip          Skip existing software (useful for installing additional packages) (def
                        False)
    -s STOP, --stop=STOP
                        Stop the installation after certain step (type choice; def source)
                        (choices: fetch, ready, source, patch, prepare, configure, build, test,
                        install, extensions, postproc, sanitycheck, cleanup, module,
                        permissions, package, testcases)
    --strict=STRICT     Set strictness level (type choice; def warn) (choices: ignore, warn,
                        error)

  Configuration options:
    Configure EasyBuild behavior. (configfile section config)

    --avail-module-naming-schemes
                        Show all supported module naming schemes (def False)
    --avail-modules-tools
                        Show all supported module tools (def False)
    --avail-repositories
                        Show all repository types (incl. non-usable) (def False)
    --buildpath=BUILDPATH
                        Temporary build path (def /home/romain.pereira/.local/easybuild/build)
    --containerpath=CONTAINERPATH
                        Location where container recipe & image will be stored (def
                        /home/romain.pereira/.local/easybuild/containers)
    --external-modules-metadata=EXTERNAL-MODULES-METADATA
                        List of files specifying metadata for external modules (INI format)
                        (type comma-separated list)
    --hooks=HOOKS       Location of Python module with hook implementations (type str)
    --ignore-dirs=IGNORE-DIRS
                        Directory names to ignore when searching for files/dirs (type comma-
                        separated list; def .git,.svn)
    --include-easyblocks=INCLUDE-EASYBLOCKS
                        Location(s) of extra or customized easyblocks (type comma-separated
                        list; def )
    --include-module-naming-schemes=INCLUDE-MODULE-NAMING-SCHEMES
                        Location(s) of extra or customized module naming schemes (type comma-
                        separated list; def )
    --include-toolchains=INCLUDE-TOOLCHAINS
                        Location(s) of extra or customized toolchains or toolchain components
                        (type comma-separated list; def )
    --installpath=INSTALLPATH
                        Install path for software and modules (def
                        /home/romain.pereira/.local/easybuild)
    --installpath-modules=INSTALLPATH-MODULES
                        Install path for modules (if None, combine --installpath and --subdir-
                        modules)
    --installpath-software=INSTALLPATH-SOFTWARE
                        Install path for software (if None, combine --installpath and --subdir-
                        software)
    --job-backend=JOB-BACKEND
                        Backend to use for submitting jobs (type choice; def GC3Pie) (choices:
                        GC3Pie, PbsPython, Slurm)
    --logfile-format=DIR,FORMAT
                        Directory name and format of the log file (type comma-separated tuple;
                        def easybuild,easybuild-%(name)s-%(version)s-%(date)s.%(time)s.log)
    --module-depends-on
                        Use depends_on (Lmod 7.6.1+) for dependencies in all generated modules
                        (implies recursive unloading of modules). (def False)
    --module-naming-scheme=MODULE-NAMING-SCHEME
                        Module naming scheme to use (def EasyBuildMNS)
    --module-syntax=MODULE-SYNTAX
                        Syntax to be used for module files (type choice; def Lua) (choices: Lua,
                        Tcl)
    --moduleclasses=MODULECLASSES
                        Extend supported module classes (For more info on the default classes,
                        use --show-default-moduleclasses) (type comma-separated list; def base,a
                        stro,bio,cae,chem,compiler,data,debugger,devel,geo,ide,lang,lib,math,mpi
                        ,numlib,perf,quantum,phys,system,toolchain,tools,vis)
    --modules-footer=PATH
                        Path to file containing footer to be added to all generated module files
    --modules-header=PATH
                        Path to file containing header to be added to all generated module files
    --modules-tool=MODULES-TOOL
                        Modules tool to use (type choice; def Lmod) (choices:
                        EnvironmentModules, EnvironmentModulesC, EnvironmentModulesTcl, Lmod)
    --package-naming-scheme=PACKAGE-NAMING-SCHEME
                        Packaging naming scheme choice (type choice; def EasyBuildPNS) (choices:
                        EasyBuildPNS)
    --packagepath=PACKAGEPATH
                        The destination path for the packages built by package-tool (def
                        /home/romain.pereira/.local/easybuild/packages)
    --prefix=PREFIX     Change prefix for buildpath, installpath, sourcepath and repositorypath
                        (used prefix for defaults /home/romain.pereira/.local/easybuild)
    --recursive-module-unload
                        Enable generating of modules that unload recursively. (def False)
    --repository=REPOSITORY
                        Repository type, using repositorypath (type choice; def FileRepository)
                        (choices: FileRepository)
    --repositorypath=REPOSITORYPATH
                        Repository path, used by repository (is passed as list of arguments to
                        create the repository instance). For more info, use --avail-
                        repositories. (type comma-separated list; def
                        /home/romain.pereira/.local/easybuild/ebfiles_repo)
    --sourcepath=SOURCEPATH
                        Path(s) to where sources should be downloaded (string, colon-separated)
                        (def /home/romain.pereira/.local/easybuild/sources)
    --subdir-modules=SUBDIR-MODULES
                        Installpath subdir for modules (def modules)
    --subdir-software=SUBDIR-SOFTWARE
                        Installpath subdir for software (def software)
    --subdir-user-modules=SUBDIR-USER-MODULES
                        Base path of user-specific modules relative to their $HOME
    --suffix-modules-path=SUFFIX-MODULES-PATH
                        Suffix for module files install path (def all)
    --testoutput=TESTOUTPUT
                        Path to where a job should place the output (to be set within jobscript)
    --tmp-logdir=TMP-LOGDIR
                        Log directory where temporary log files are stored
    --tmpdir=TMPDIR     Directory to use for temporary storage

  Container options:
    Options related to generating container recipes & images (configfile section container)

    --container-base=BASE
                        Base for container image. Examples (for Singularity): --container-base
                        localimage:/path/to/image.img, --container-base shub:<image>:<tag>,
                        --container-base docker:<image>:<tag>  (type <type 'str'>)
    --container-build-image
                        Build container image (requires sudo privileges!) (def False)
    --container-image-format=IMAGE-FORMAT
                        Container image format (type choice) (choices: ext3, sandbox, squashfs)
    --container-image-name=IMAGE-NAME
                        Custom name for container image (defaults to name of easyconfig)
    --container-tmpdir=TMPDIR
                        Temporary directory where container image is built
    --container-type=TYPE
                        Type of container recipe/image to create (type choice; def singularity)
                        (choices: docker, singularity)

  Options for Easyconfigs:
    Options to be passed to all Easyconfig. (configfile section easyconfig)

    --inject-checksums=INJECT-CHECKSUMS
                        Inject checksums of specified type for sources/patches into easyconfig
                        file(s) (type choice; def sha256) (choices: adler32, crc32, md5, sha1,
                        sha256, sha512, size)

  GitHub integration options:
    Integration with GitHub (configfile section github)

    --check-contrib     Runs checks to see whether the given easyconfigs are ready to be
                        contributed back (def False)
    --check-github      Check status of GitHub integration, and report back (def False)
    --check-style       Run a style check on the given easyconfigs (def False)
    --cleanup-easyconfigs
                        Clean up easyconfig files for pull request (def True)
    --close-pr=PR#      Close pull request (type <type 'int'>)
    --close-pr-msg=CLOSE-PR-MSG
                        Custom close message for pull request closed with --close-pr;  (type
                        <type 'str'>)
    --close-pr-reasons=CLOSE-PR-REASONS
                        Close reason for pull request closed with --close-pr; supported values:
                        archived, inactive, obsolete (type <type 'str'>)
    --dump-test-report=DUMP-TEST-REPORT
                        Dump test report to specified path (def test_report.md)
    --from-pr=PR#       Obtain easyconfigs from specified PR (type <type 'int'>)
    --git-working-dirs-path=GIT-WORKING-DIRS-PATH
                        Path to Git working directories for EasyBuild repositories (type <type
                        'str'>)
    --github-org=GITHUB-ORG
                        GitHub organization (type <type 'str'>)
    --github-user=GITHUB-USER
                        GitHub username (type <type 'str'>)
    --install-github-token
                        Install GitHub token (requires --github-user) (def False)
    --list-prs=STATE,ORDER,DIRECTION
                        List pull requests (type <type 'str'>; def open,created,desc)
    --merge-pr=PR#      Merge pull request (type <type 'int'>)
    --new-pr            Open a new pull request (def False)
    --pr-branch-name=PR-BRANCH-NAME
                        Branch name to use for new PRs; '<timestamp>_new_pr_<name><version>' if
                        unspecified (type <type 'str'>)
    --pr-commit-msg=PR-COMMIT-MSG
                        Commit message for new/updated pull request created with --new-pr (type
                        <type 'str'>)
    --pr-descr=PR-DESCR
                        Description for new pull request created with --new-pr (type <type
                        'str'>)
    --pr-target-account=PR-TARGET-ACCOUNT
                        Target account for new PRs (type <type 'str'>; def easybuilders)
    --pr-target-branch=PR-TARGET-BRANCH
                        Target branch for new PRs (type <type 'str'>; def develop)
    --pr-target-repo=PR-TARGET-REPO
                        Target repository for new/updating PRs (type <type 'str'>; def
                        easybuild-easyconfigs)
    --pr-title=PR-TITLE
                        Title for new pull request created with --new-pr (type <type 'str'>)
    --preview-pr        Preview a new pull request (def False)
    --review-pr=PR#     Review specified pull request (type <type 'int'>)
    --test-report-env-filter=TEST-REPORT-ENV-FILTER
                        Regex used to filter out variables in environment dump of test report
    --update-pr=PR#     Update an existing pull request (type <type 'int'>)
    -u, --upload-test-report
                        Upload full test report as a gist on GitHub (def False)

  Informative options:
    Obtain information about EasyBuild. (configfile section informative)

    --avail-cfgfile-constants
                        Show all constants that can be used in configuration files (def False)
    --avail-easyconfig-constants
                        Show all constants that can be used in easyconfigs (def False)
    --avail-easyconfig-licenses
                        Show all license constants that can be used in easyconfigs (def False)
    -a, --avail-easyconfig-params
                        Show all easyconfig parameters (include easyblock-specific ones by using
                        -e) (def False)
    --avail-easyconfig-templates
                        Show all template names and template constants that can be used in
                        easyconfigs. (def False)
    --avail-hooks       Show list of known hooks (def False)
    --avail-toolchain-opts=AVAIL-TOOLCHAIN-OPTS
                        Show options for toolchain (type str)
    --check-conflicts   Check for version conflicts in dependency graphs (def False)
    --dep-graph=depgraph.<ext>
                        Create dependency graph
    --dump-env-script   Dump source script to set up build environment based on
                        toolchain/dependencies (def False)
    --last-log          Print location to EasyBuild log file of last (failed) session (def
                        False)
    --list-easyblocks=LIST-EASYBLOCKS
                        Show list of available easyblocks (type choice; def simple) (choices:
                        simple, detailed)
    --list-installed-software=LIST-INSTALLED-SOFTWARE
                        Show list of installed software (type choice; def simple) (choices:
                        simple, detailed)
    --list-software=LIST-SOFTWARE
                        Show list of supported software (type choice; def simple) (choices:
                        simple, detailed)
    --list-toolchains   Show list of known toolchains (def False)
    --search=REGEX      Search for easyconfig files in the robot search path, print full paths
    --search-filename=REGEX
                        Search for easyconfig files in the robot search path, print only
                        filenames
    -S REGEX, --search-short=REGEX
                        Search for easyconfig files in the robot search path, print short paths
    --show-config       Show current EasyBuild configuration (only non-default + selected
                        settings) (def False)
    --show-default-configfiles
                        Show list of default config files (def False)
    --show-default-moduleclasses
                        Show default module classes with description (def False)
    --show-full-config  Show current EasyBuild configuration (all settings) (def False)
    --show-system-info  Show system information relevant to EasyBuild (def False)
    --terse             Terse output (machine-readable) (def False)

  Options for job backend:
    Options for job backend (only relevant when --job is used) (configfile section job)

    --job-backend-config=BACKEND-CONFIG
                        Configuration file for job backend
    --job-cores=CORES   Number of cores to request per job (type int)
    --job-deps-type=DEPS-TYPE
                        Type of dependency to set between jobs (default depends on job backend)
                        (type choice) (choices: abort_on_error, always_run)
    --job-max-jobs=MAX-JOBS
                        Maximum number of concurrent jobs (queued and running, 0 = unlimited)
                        (type int; def 0)
    --job-max-walltime=MAX-WALLTIME
                        Maximum walltime for jobs (in hours) (type int; def 24)
    --job-output-dir=OUTPUT-DIR
                        Output directory for jobs (default: current directory) (def
                        /home/romain.pereira)
    --job-polling-interval=POLLING-INTERVAL
                        Interval between polls for status of jobs (in seconds) (type <type
                        'float'>; def 30.0)
    --job-target-resource=TARGET-RESOURCE
                        Target resource for jobs

  Override options:
    Override default EasyBuild behavior. (configfile section override)

    --add-dummy-to-minimal-toolchains
                        Include dummy in minimal toolchain searches (def False)
    --allow-loaded-modules=ALLOW-LOADED-MODULES
                        List of software names for which to allow loaded modules in initial
                        environment (type comma-separated list; def EasyBuild)
    --allow-modules-tool-mismatch
                        Allow mismatch of modules tool and definition of 'module' function (def
                        False)
    --allow-use-as-root-and-accept-consequences
                        Allow using of EasyBuild as root (NOT RECOMMENDED!) (def False)
    --backup-modules    Back up an existing module file, if any. Only works when using --module-
                        only
    --check-ebroot-env-vars=CHECK-EBROOT-ENV-VARS
                        Action to take when defined $EBROOT* environment variables are found for
                        which there is no matching loaded module; supported values: error,
                        ignore, unset, warn (def warn)
    --cleanup-builddir  Cleanup build dir after successful installation. (def True)
    --cleanup-tmpdir    Cleanup tmp dir after successful run. (def True)
    --color=WHEN        Colorize output (type choice; def auto) (choices: auto, always, never)
    --consider-archived-easyconfigs
                        Also consider archived easyconfigs (def False)
    -C, --containerize  Generate container recipe/image (def False)
    --debug-lmod        Run Lmod modules tool commands in debug module (def False)
    --default-opt-level=DEFAULT-OPT-LEVEL
                        Specify default optimisation level (type choice; def defaultopt)
                        (choices: noopt, lowopt, defaultopt, opt)
    --deprecated=DEPRECATED
                        Run pretending to be (future) version, to test removal of deprecated
                        code.
    --detect-loaded-modules=DETECT-LOADED-MODULES
                        Detect loaded EasyBuild-generated modules, act accordingly; supported
                        values: error, ignore, purge, unload, warn (def warn)
    --devel             Enable including of development log messages (def False)
    --download-timeout=DOWNLOAD-TIMEOUT
                        Timeout for initiating downloads (in seconds) (type <type 'float'>)
    --dump-autopep8     Reformat easyconfigs using autopep8 when dumping them (def False)
    -e CLASS, --easyblock=CLASS
                        easyblock to use for processing the spec file or dumping the options
    --enforce-checksums
                        Enforce availability of checksums for all sources/patches, so they can
                        be verified (def False)
    --experimental      Allow experimental code (with behaviour that can be changed/removed at
                        any given time). (def False)
    --extra-modules=EXTRA-MODULES
                        List of extra modules to load after setting up the build environment
                        (type comma-separated list)
    --fetch             Allow downloading sources ignoring OS and modules tool dependencies,
                        implies --stop=fetch, --ignore-osdeps and ignore modules tool (def
                        False)
    --filter-deps=FILTER-DEPS
                        List of dependencies that you do *not* want to install with EasyBuild,
                        because equivalent OS packages are installed. (e.g. --filter-
                        deps=zlib,ncurses) (type comma-separated list)
    --filter-env-vars=FILTER-ENV-VARS
                        List of names of environment variables that should *not* be
                        defined/updated by module files generated by EasyBuild (type comma-
                        separated list)
    --fixed-installdir-naming-scheme
                        Use fixed naming scheme for installation directories (def False)
    --force-download=FORCE-DOWNLOAD
                        Force re-downloading of sources and/or patches, even if they are
                        available already in source path (type choice; def sources) (choices:
                        all, patches, sources)
    --group=GROUP       Group to be used for software installations (only verified, not set)
    --group-writable-installdir
                        Enable group write permissions on installation directory after
                        installation (def False)
    --hidden            Install 'hidden' module file(s) by prefixing their version with '.' (def
                        False)
    --hide-deps=HIDE-DEPS
                        Comma separated list of dependencies that you want automatically hidden,
                        (e.g. --hide-deps=zlib,ncurses) (type comma-separated list)
    --hide-toolchains=HIDE-TOOLCHAINS
                        Comma separated list of toolchains that you want automatically hidden,
                        (e.g. --hide-toolchains=GCCcore) (type comma-separated list)
    --ignore-checksums  Ignore failing checksum verification (def False)
    --ignore-osdeps     Ignore any listed OS dependencies (def False)
    --install-latest-eb-release
                        Install latest known version of easybuild (def False)
    --lib64-fallback-sanity-check
                        Fallback in sanity check to lib64/ equivalent for missing libraries (def
                        True)
    --max-fail-ratio-adjust-permissions=MAX-FAIL-RATIO-ADJUST-PERMISSIONS
                        Maximum ratio for failures to allow when adjusting permissions (type
                        float; def 0.5)
    --minimal-toolchains
                        Use minimal toolchain when resolving dependencies (def False)
    --module-only       Only generate module file(s); skip all steps except for module, prepare,
                        ready, sanitycheck (def False)
    --modules-tool-version-check
                        Check version of modules tool being used (def True)
    --mpi-cmd-template=MPI-CMD-TEMPLATE
                        Template for MPI commands (template keys: %(nr_ranks)s, %(cmd)s)
    --mpi-tests         Run MPI tests (when relevant) (def True)
    --optarch=OPTARCH   Set architecture optimization, overriding native architecture
                        optimizations
    --output-format=OUTPUT-FORMAT
                        Set output format (type choice; def txt) (choices: txt, rst)
    --parallel=PARALLEL
                        Specify (maximum) level of parallellism used during build procedure
                        (type int)
    --pre-create-installdir
                        Create installation directory before submitting build jobs (def True)
    -p, --pretend       Does the build/installation in a test directory located in
                        $HOME/easybuildinstall (def False)
    --read-only-installdir
                        Set read-only permissions on installation directory after installation
                        (def False)
    --rpath             Enable use of RPATH for linking with libraries (def False)
    --rpath-filter=RPATH-FILTER
                        List of regex patterns to use for filtering out RPATH paths (type comma-
                        separated list)
    --set-default-module
                        Set the generated module as default (def False)
    --set-gid-bit       Set group ID bit on newly created directories (def False)
    -t, --skip-test-cases
                        Skip running test cases (def False)
    --sticky-bit        Set sticky bit on newly created directories (def False)
    -T, --trace         Provide more information in output to stdout on progress (def False)
    --umask=UMASK       umask to use (e.g. '022'); non-user write permissions on install
                        directories are removed
    --update-modules-tool-cache
                        Update modules tool cache file(s) after generating module file (def
                        False)
    --use-ccache=PATH   Enable use of ccache to speed up compilation, with specified cache dir
                        (type <type 'str'>; def False)
    --use-existing-modules
                        Use existing modules when resolving dependencies with minimal toolchains
                        (def False)
    --use-f90cache=PATH
                        Enable use of f90cache to speed up compilation, with specified cache dir
                        (type <type 'str'>; def False)
    --verify-easyconfig-filenames
                        Verify whether filename of specified easyconfigs matches with contents
                        (def False)
    --zip-logs=ZIP-LOGS
                        Zip logs that are copied to install directory, using specified command
                        (def gzip)

  Package options:
    Control packaging performed by EasyBuild. (configfile section package)

    --package           Enabling packaging (def False)
    --package-release=PACKAGE-RELEASE
                        Package release iteration number (def 1)
    --package-tool=PACKAGE-TOOL
                        Packaging tool to use (def fpm)
    --package-tool-options=PACKAGE-TOOL-OPTIONS
                        Extra options for packaging tool (def '')
    --package-type=PACKAGE-TYPE
                        Type of package to generate (def rpm)

  Regression test options:
    Run and control an EasyBuild regression test. (configfile section regtest)

    --aggregate-regtest=DIR
                        Collect all the xmls inside the given directory and generate a single
                        file
    --regtest           Enable regression test mode (def False)
    --regtest-output-dir=DIR
                        Set output directory for test-run
    --sequential        Specify this option if you want to prevent parallel build (def False)

  Software search and build options:
    Specify software search and build options: EasyBuild will search for a matching
    easyconfig and build it. When called with the try prefix (i.e. --try-X ), EasyBuild will
    search for a matching easyconfig and if none are found, try to generate one based on a
    close matching one (NOTE: --try-X is best effort, it might produce wrong builds!)
    (configfile section software)

    --amend=VAR=VALUE[,VALUE]
                        Specify additional search and build parameters (can be used multiple
                        times); for example: versionprefix=foo or patches=one.patch,two.patch)
    --map-toolchains    Enable mapping of (sub)toolchains when --try-toolchain(-version) is used
                        (def True)
    --software=NAME,VERSION
                        Search and build software with given name and version (type comma-
                        separated list)
    --software-name=NAME
                        Search and build software with given name
    --software-version=VERSION
                        Search and build software with given version
    --toolchain=NAME,VERSION
                        Search and build with given toolchain (name and version) (type comma-
                        separated list)
    --toolchain-name=NAME
                        Search and build with given toolchain name
    --toolchain-version=VERSION
                        Search and build with given toolchain version
    --try-amend=VAR=VALUE[,VALUE]
                        Try to specify additional search and build parameters (can be used
                        multiple times); for example: versionprefix=foo or
                        patches=one.patch,two.patch) (USE WITH CARE!)
    --try-software=NAME,VERSION
                        Try to search and build software with given name and version (USE WITH
                        CARE!) (type comma-separated list)
    --try-software-name=NAME
                        Try to search and build software with given name (USE WITH CARE!)
    --try-software-version=VERSION
                        Try to search and build software with given version (USE WITH CARE!)
    --try-toolchain=NAME,VERSION
                        Try to search and build with given toolchain (name and version) (USE
                        WITH CARE!) (type comma-separated list)
    --try-toolchain-name=NAME
                        Try to search and build with given toolchain name (USE WITH CARE!)
    --try-toolchain-version=VERSION
                        Try to search and build with given toolchain version (USE WITH CARE!)

  Unittest options:
    Options dedicated to unittesting (experts only). (configfile section unittest)

    --unittest-file=FILE
                        Log to this file in unittest mode

Boolean options support disable prefix to do the inverse of the action, e.g. option --someopt
also supports --disable-someopt.

All long option names can be passed as environment variables. Variable name is
EASYBUILD_<LONGNAME> eg. --some-opt is same as setting EASYBUILD_SOME_OPT in the environment.
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --help | less
[?1049h[?1h=Usage: eb [options] easyconfig [...]

Builds software based on easyconfig (or parse a directory). Provide one or more easyconfigs or
directories, use -H or --help more information.

Options:
  --version             show program's version number and exit
  -h, --shorthelp       show short help message and exit
  -H OUTPUT_FORMAT, --help=OUTPUT_FORMAT
                        show full help message and exit
  --confighelp          show help as annotated configfile

  Debug and logging options (configfile section MAIN):
    -d, --debug         Enable debug log mode (def False)
    --info              Enable info log mode (def False)
    --quiet             Enable quiet/warning log mode (def False)

  Configfile options:
    --configfiles=CONFIGFILES
                        Parse (additional) configfiles (type comma-separated list; def
                        /home/romain.pereira/.config/easybuild/config.cfg)
    --ignoreconfigfiles=IGNORECONFIGFILES
                        Ignore configfiles (type comma-separated list)

  Basic options:
    Basic runtime options for EasyBuild. (configfile section basic)

    --dry-run           Print build overview incl. dependencies (full paths) (def False)
    -D, --dry-run-short
                        Print build overview incl. dependencies (short paths) (def False)
    -x, --extended-dry-run
                        Print build environment and (expected) build procedure that will be
                        performed (def False)
    --extended-dry-run-ignore-errors
                        Ignore errors that occur during dry run (def True)
    -f, --force         Force to rebuild software even if it's already installed (i.e. if it can
                        be found as module), and skipping check for OS dependencies (def False)
    --job               Submit the build as a job (def False)
    -l, --logtostdout   Redirect main log to stdout (def False)
    -b BLOCKS, --only-blocks=BLOCKS
                        Only build listed blocks (type comma-separated list)
    --rebuild           Rebuild software, even if module already exists (don't skip OS
                        dependencies checks) (def False)
    -r PATH[:PATH], --robot=PATH[:PATH]
                        Enable dependency resolution, using easyconfigs in specified paths (type
                        pathsep-separated list; def )
    --robot-paths=PATH[:PATH]
                        Additional paths to consider by robot for easyconfigs (--robot paths get
:[K[K/[Ktt[Koo[Koo[Kll[Kcc[Khh[Kaa[Kii[Knn[K[1;1HUsage: eb [options] easyconfig [...]
[2;1H
[3;1HBuilds software based on easyconfig (or parse a directory). Provide one or more easyconfigs or
[4;1Hdirectories, use -H or --help more information.
[5;1H
[6;1HOptions:
[7;1H  --version             show program's version number and exit
[8;1H  -h, --shorthelp       show short help message and exit
[9;1H  -H OUTPUT_FORMAT, --help=OUTPUT_FORMAT
[10;1H                        show full help message and exit
[11;1H  --confighelp          show help as annotated configfile
[12;1H
[13;1H  Debug and logging options (configfile section MAIN):
[14;1H    -d, --debug         Enable debug log mode (def False)
[15;1H    --info              Enable info log mode (def False)
[16;1H    --quiet             Enable quiet/warning log mode (def False)
[17;1H
[18;1H  Configfile options:
[19;1H    --configfiles=CONFIGFILES
[20;1H                        Parse (additional) configfiles (type comma-separated list; def
[21;1H                        /home/romain.pereira/.config/easybuild/config.cfg)
[22;1H    --ignoreconfigfiles=IGNORECONFIGFILES
[23;1H                        Ignore configfiles (type comma-separated list)
[24;1H
[25;1H  Basic options:
[26;1H    Basic runtime options for EasyBuild. (configfile section basic)
[27;1H
[28;1H    --dry-run           Print build overview incl. dependencies (full paths) (def False)
[29;1H    -D, --dry-run-short
[30;1H                        Print build overview incl. dependencies (short paths) (def False)
[31;1H    -x, --extended-dry-run
[32;1H                        Print build environment and (expected) build procedure that will be
[33;1H                        performed (def False)
[34;1H    --extended-dry-run-ignore-errors
[35;1H                        Ignore errors that occur during dry run (def True)
[36;1H    -f, --force         Force to rebuild software even if it's already installed (i.e. if it can
[37;1H                        be found as module), and skipping check for OS dependencies (def False)
[38;1H    --job               Submit the build as a job (def False)
[39;1H    -l, --logtostdout   Redirect main log to stdout (def False)
[40;1H    -b BLOCKS, --only-blocks=BLOCKS
[41;1H                        Only build listed blocks (type comma-separated list)
[42;1H    --rebuild           Rebuild software, even if module already exists (don't skip OS
[43;1H                        dependencies checks) (def False)
[44;1H    -r PATH[:PATH], --robot=PATH[:PATH]
[45;1H                        Enable dependency resolution, using easyconfigs in specified paths (type
[46;1H                        pathsep-separated list; def )
[47;1H    --robot-paths=PATH[:PATH]
[48;1H                        Additional paths to consider by robot for easyconfigs (--robot paths get
[49;1H[1;1HUsage: eb [options] easyconfig [...]
[2;1H
[3;1HBuilds software based on easyconfig (or parse a directory). Provide one or more easyconfigs or
[4;1Hdirectories, use -H or --help more information.
[5;1H
[6;1HOptions:
[7;1H  --version             show program's version number and exit
[8;1H  -h, --shorthelp       show short help message and exit
[9;1H  -H OUTPUT_FORMAT, --help=OUTPUT_FORMAT
[10;1H                        show full help message and exit
[11;1H  --confighelp          show help as annotated configfile
[12;1H
[13;1H  Debug and logging options (configfile section MAIN):
[14;1H    -d, --debug         Enable debug log mode (def False)
[15;1H    --info              Enable info log mode (def False)
[16;1H    --quiet             Enable quiet/warning log mode (def False)
[17;1H
[18;1H  Configfile options:
[19;1H    --configfiles=CONFIGFILES
[20;1H                        Parse (additional) configfiles (type comma-separated list; def
[21;1H                        /home/romain.pereira/.config/easybuild/config.cfg)
[22;1H    --ignoreconfigfiles=IGNORECONFIGFILES
[23;1H                        Ignore configfiles (type comma-separated list)
[24;1H
[25;1H  Basic options:
[26;1H    Basic runtime options for EasyBuild. (configfile section basic)
[27;1H
[28;1H    --dry-run           Print build overview incl. dependencies (full paths) (def False)
[29;1H    -D, --dry-run-short
[30;1H                        Print build overview incl. dependencies (short paths) (def False)
[31;1H    -x, --extended-dry-run
[32;1H                        Print build environment and (expected) build procedure that will be
[33;1H                        performed (def False)
[34;1H    --extended-dry-run-ignore-errors
[35;1H                        Ignore errors that occur during dry run (def True)
[36;1H    -f, --force         Force to rebuild software even if it's already installed (i.e. if it can
[37;1H                        be found as module), and skipping check for OS dependencies (def False)
[38;1H    --job               Submit the build as a job (def False)
[39;1H    -l, --logtostdout   Redirect main log to stdout (def False)
[40;1H    -b BLOCKS, --only-blocks=BLOCKS
[41;1H                        Only build listed blocks (type comma-separated list)
[42;1H    --rebuild           Rebuild software, even if module already exists (don't skip OS
[43;1H                        dependencies checks) (def False)
[44;1H    -r PATH[:PATH], --robot=PATH[:PATH]
[45;1H                        Enable dependency resolution, using easyconfigs in specified paths (type
[46;1H                        pathsep-separated list; def )
[47;1H    --robot-paths=PATH[:PATH]
[48;1H                        Additional paths to consider by robot for easyconfigs (--robot paths get
[49;1H...skipping...
    --include-[7mtoolchain[27ms=INCLUDE-TOOLCHAINS
                        Location(s) of extra or customized [7mtoolchain[27ms or [7mtoolchain[27m components
                        (type comma-separated list; def )
    --installpath=INSTALLPATH
                        Install path for software and modules (def
                        /home/romain.pereira/.local/easybuild)
    --installpath-modules=INSTALLPATH-MODULES
                        Install path for modules (if None, combine --installpath and --subdir-
                        modules)
    --installpath-software=INSTALLPATH-SOFTWARE
                        Install path for software (if None, combine --installpath and --subdir-
                        software)
    --job-backend=JOB-BACKEND
                        Backend to use for submitting jobs (type choice; def GC3Pie) (choices:
                        GC3Pie, PbsPython, Slurm)
    --logfile-format=DIR,FORMAT
                        Directory name and format of the log file (type comma-separated tuple;
                        def easybuild,easybuild-%(name)s-%(version)s-%(date)s.%(time)s.log)
    --module-depends-on
                        Use depends_on (Lmod 7.6.1+) for dependencies in all generated modules
                        (implies recursive unloading of modules). (def False)
    --module-naming-scheme=MODULE-NAMING-SCHEME
                        Module naming scheme to use (def EasyBuildMNS)
    --module-syntax=MODULE-SYNTAX
                        Syntax to be used for module files (type choice; def Lua) (choices: Lua,
                        Tcl)
    --moduleclasses=MODULECLASSES
                        Extend supported module classes (For more info on the default classes,
                        use --show-default-moduleclasses) (type comma-separated list; def base,a
                        stro,bio,cae,chem,compiler,data,debugger,devel,geo,ide,lang,lib,math,mpi
                        ,numlib,perf,quantum,phys,system,[7mtoolchain[27m,tools,vis)
    --modules-footer=PATH
                        Path to file containing footer to be added to all generated module files
    --modules-header=PATH
                        Path to file containing header to be added to all generated module files
    --modules-tool=MODULES-TOOL
                        Modules tool to use (type choice; def Lmod) (choices:
                        EnvironmentModules, EnvironmentModulesC, EnvironmentModulesTcl, Lmod)
    --package-naming-scheme=PACKAGE-NAMING-SCHEME
                        Packaging naming scheme choice (type choice; def EasyBuildPNS) (choices:
                        EasyBuildPNS)
    --packagepath=PACKAGEPATH
                        The destination path for the packages built by package-tool (def
                        /home/romain.pereira/.local/easybuild/packages)
    --prefix=PREFIX     Change prefix for buildpath, installpath, sourcepath and repositorypath
                        (used prefix for defaults /home/romain.pereira/.local/easybuild)
    --recursive-module-unload
                        Enable generating of modules that unload recursively. (def False)
:[K[K/[K    --repository=REPOSITORY
:[K[K/[K                        Repository type, using repositorypath (type choice; def FileRepository)
                        (choices: FileRepository)
    --repositorypath=REPOSITORYPATH
                        Repository path, used by repository (is passed as list of arguments to
                        create the repository instance). For more info, use --avail-
                        repositories. (type comma-separated list; def
                        /home/romain.pereira/.local/easybuild/ebfiles_repo)
    --sourcepath=SOURCEPATH
                        Path(s) to where sources should be downloaded (string, colon-separated)
                        (def /home/romain.pereira/.local/easybuild/sources)
    --subdir-modules=SUBDIR-MODULES
                        Installpath subdir for modules (def modules)
    --subdir-software=SUBDIR-SOFTWARE
                        Installpath subdir for software (def software)
    --subdir-user-modules=SUBDIR-USER-MODULES
                        Base path of user-specific modules relative to their $HOME
    --suffix-modules-path=SUFFIX-MODULES-PATH
                        Suffix for module files install path (def all)
    --testoutput=TESTOUTPUT
                        Path to where a job should place the output (to be set within jobscript)
    --tmp-logdir=TMP-LOGDIR
                        Log directory where temporary log files are stored
    --tmpdir=TMPDIR     Directory to use for temporary storage

  Container options:
    Options related to generating container recipes & images (configfile section container)

    --container-base=BASE
                        Base for container image. Examples (for Singularity): --container-base
:[K[K [KESCESC[KOO[KAA[K[HM                        stro,bio,cae,chem,compiler,data,debugger,devel,geo,ide,lang,lib,math,mpi
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM                        use --show-default-moduleclasses) (type comma-separated list; def base,a
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM                        Extend supported module classes (For more info on the default classes,
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM    --moduleclasses=MODULECLASSES
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM                        Tcl)
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM                        Syntax to be used for module files (type choice; def Lua) (choices: Lua,
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM    --module-syntax=MODULE-SYNTAX
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM                        Module naming scheme to use (def EasyBuildMNS)
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM    --module-naming-scheme=MODULE-NAMING-SCHEME
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM                        (implies recursive unloading of modules). (def False)
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM                        Use depends_on (Lmod 7.6.1+) for dependencies in all generated modules
[49;1H[K:[K[K/[K    --testoutput=TESTOUTPUT
                        Path to where a job should place the output (to be set within jobscript)
    --tmp-logdir=TMP-LOGDIR
                        Log directory where temporary log files are stored
    --tmpdir=TMPDIR     Directory to use for temporary storage

  Container options:
    Options related to generating container recipes & images (configfile section container)

    --container-base=BASE
                        Base for container image. Examples (for Singularity): --container-base
:[K[K/[K...skipping...
    --avail-[7mtoolchain[27m-opts=AVAIL-TOOLCHAIN-OPTS
                        Show options for [7mtoolchain[27m (type str)
    --check-conflicts   Check for version conflicts in dependency graphs (def False)
    --dep-graph=depgraph.<ext>
                        Create dependency graph
    --dump-env-script   Dump source script to set up build environment based on
                        [7mtoolchain[27m/dependencies (def False)
    --last-log          Print location to EasyBuild log file of last (failed) session (def
                        False)
    --list-easyblocks=LIST-EASYBLOCKS
                        Show list of available easyblocks (type choice; def simple) (choices:
                        simple, detailed)
    --list-installed-software=LIST-INSTALLED-SOFTWARE
                        Show list of installed software (type choice; def simple) (choices:
                        simple, detailed)
    --list-software=LIST-SOFTWARE
                        Show list of supported software (type choice; def simple) (choices:
                        simple, detailed)
    --list-[7mtoolchain[27ms   Show list of known [7mtoolchain[27ms (def False)
    --search=REGEX      Search for easyconfig files in the robot search path, print full paths
    --search-filename=REGEX
                        Search for easyconfig files in the robot search path, print only
                        filenames
    -S REGEX, --search-short=REGEX
                        Search for easyconfig files in the robot search path, print short paths
    --show-config       Show current EasyBuild configuration (only non-default + selected
                        settings) (def False)
    --show-default-configfiles
                        Show list of default config files (def False)
    --show-default-moduleclasses
                        Show default module classes with description (def False)
    --show-full-config  Show current EasyBuild configuration (all settings) (def False)
    --show-system-info  Show system information relevant to EasyBuild (def False)
    --terse             Terse output (machine-readable) (def False)

  Options for job backend:
    Options for job backend (only relevant when --job is used) (configfile section job)

    --job-backend-config=BACKEND-CONFIG
                        Configuration file for job backend
    --job-cores=CORES   Number of cores to request per job (type int)
    --job-deps-type=DEPS-TYPE
                        Type of dependency to set between jobs (default depends on job backend)
                        (type choice) (choices: abort_on_error, always_run)
    --job-max-jobs=MAX-JOBS
                        Maximum number of concurrent jobs (queued and running, 0 = unlimited)
                        (type int; def 0)
    --job-max-walltime=MAX-WALLTIME
:[K[K[?1l>[?1049l]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --help | less[K[K[K[K[K[K[K[K[K[K[Klist-tol[Kolchains
List of known toolchains (toolchainname: module[,module...]):
	ClangGCC: Clang, GCC
	CrayCCE: PrgEnv-cray
	CrayGNU: PrgEnv-gnu
	CrayIntel: PrgEnv-intel
	CrayPGI: PrgEnv-pgi
	GCC: GCC
	GCCcore: GCCcore
	GNU: GCC
	PGI: PGI
	cgmpich: Clang, GCC, MPICH
	cgmpolf: BLACS, Clang, FFTW, GCC, MPICH, OpenBLAS, ScaLAPACK
	cgmvapich2: Clang, GCC, MVAPICH2
	cgmvolf: BLACS, Clang, FFTW, GCC, MVAPICH2, OpenBLAS, ScaLAPACK
	cgompi: Clang, GCC, OpenMPI
	cgoolf: BLACS, Clang, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
	dummy: 
	foss: BLACS, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
	fosscuda: BLACS, CUDA, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
	gcccuda: CUDA, GCC
	gimkl: GCC, imkl, impi
	gimpi: GCC, impi
	gimpic: CUDA, GCC, impi
	giolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, impi
	giolfc: BLACS, CUDA, FFTW, GCC, OpenBLAS, ScaLAPACK, impi
	gmacml: ACML, BLACS, FFTW, GCC, MVAPICH2, ScaLAPACK
	gmkl: GCC, imkl
	gmklc: CUDA, GCC, imkl
	gmpich: GCC, MPICH
	gmpich2: GCC, MPICH2
	gmpolf: BLACS, FFTW, GCC, MPICH, OpenBLAS, ScaLAPACK
	gmvapich2: GCC, MVAPICH2
	gmvolf: BLACS, FFTW, GCC, MVAPICH2, OpenBLAS, ScaLAPACK
	goalf: ATLAS, BLACS, FFTW, GCC, OpenMPI, ScaLAPACK
	goblf: BLACS, BLIS, FFTW, GCC, LAPACK, OpenMPI, ScaLAPACK
	golf: FFTW, GCC, OpenBLAS
	golfc: CUDA, FFTW, GCC, OpenBLAS
	gomkl: GCC, OpenMPI, imkl
	gomklc: CUDA, GCC, OpenMPI, imkl
	gompi: GCC, OpenMPI
	gompic: CUDA, GCC, OpenMPI
	goolf: BLACS, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
	goolfc: BLACS, CUDA, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
	gpsmpi: GCC, psmpi
	gpsolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, psmpi
	gqacml: ACML, BLACS, FFTW, GCC, QLogicMPI, ScaLAPACK
	gsmpi: GCC, SpectrumMPI
	gsolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, SpectrumMPI
	iccifort: icc, ifort
	iccifortcuda: CUDA, icc, ifort
	ictce: icc, ifort, imkl, impi
	iimkl: icc, ifort, imkl
	iimklc: CUDA, icc, ifort, imkl
	iimpi: icc, ifort, impi
	iimpic: CUDA, icc, ifort, impi
	iiqmpi: QLogicMPI, icc, ifort
	impich: MPICH, icc, ifort
	impmkl: MPICH, icc, ifort, imkl
	intel: icc, ifort, imkl, impi
	intel-para: icc, ifort, imkl, psmpi
	intelcuda: CUDA, icc, ifort, imkl, impi
	iomkl: OpenMPI, icc, ifort, imkl
	iomklc: CUDA, OpenMPI, icc, ifort, imkl
	iompi: OpenMPI, icc, ifort
	iompic: CUDA, OpenMPI, icc, ifort
	ipsmpi: icc, ifort, psmpi
	iqacml: ACML, BLACS, FFTW, QLogicMPI, ScaLAPACK, icc, ifort
	ismkl: MPICH2, icc, ifort, imkl
	pmkl: PGI, imkl
	pomkl: OpenMPI, PGI, imkl
	pompi: OpenMPI, PGI
	xlcxlf: xlc, xlf
	xlmpich: MPICH, xlc, xlf
	xlmpich2: MPICH2, xlc, xlf
	xlmvapich2: MVAPICH2, xlc, xlf
	xlompi: OpenMPI, xlc, xlf
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --list-toolchains | less
[?1049h[?1h=List of known toolchains (toolchainname: module[,module...]):
        ClangGCC: Clang, GCC
        CrayCCE: PrgEnv-cray
        CrayGNU: PrgEnv-gnu
        CrayIntel: PrgEnv-intel
        CrayPGI: PrgEnv-pgi
        GCC: GCC
        GCCcore: GCCcore
        GNU: GCC
        PGI: PGI
        cgmpich: Clang, GCC, MPICH
        cgmpolf: BLACS, Clang, FFTW, GCC, MPICH, OpenBLAS, ScaLAPACK
        cgmvapich2: Clang, GCC, MVAPICH2
        cgmvolf: BLACS, Clang, FFTW, GCC, MVAPICH2, OpenBLAS, ScaLAPACK
        cgompi: Clang, GCC, OpenMPI
        cgoolf: BLACS, Clang, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
        dummy: 
        foss: BLACS, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
        fosscuda: BLACS, CUDA, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
        gcccuda: CUDA, GCC
        gimkl: GCC, imkl, impi
        gimpi: GCC, impi
        gimpic: CUDA, GCC, impi
        giolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, impi
        giolfc: BLACS, CUDA, FFTW, GCC, OpenBLAS, ScaLAPACK, impi
        gmacml: ACML, BLACS, FFTW, GCC, MVAPICH2, ScaLAPACK
        gmkl: GCC, imkl
        gmklc: CUDA, GCC, imkl
        gmpich: GCC, MPICH
        gmpich2: GCC, MPICH2
        gmpolf: BLACS, FFTW, GCC, MPICH, OpenBLAS, ScaLAPACK
        gmvapich2: GCC, MVAPICH2
        gmvolf: BLACS, FFTW, GCC, MVAPICH2, OpenBLAS, ScaLAPACK
        goalf: ATLAS, BLACS, FFTW, GCC, OpenMPI, ScaLAPACK
        goblf: BLACS, BLIS, FFTW, GCC, LAPACK, OpenMPI, ScaLAPACK
        golf: FFTW, GCC, OpenBLAS
        golfc: CUDA, FFTW, GCC, OpenBLAS
        gomkl: GCC, OpenMPI, imkl
        gomklc: CUDA, GCC, OpenMPI, imkl
        gompi: GCC, OpenMPI
        gompic: CUDA, GCC, OpenMPI
        goolf: BLACS, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
        goolfc: BLACS, CUDA, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
        gpsmpi: GCC, psmpi
        gpsolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, psmpi
        gqacml: ACML, BLACS, FFTW, GCC, QLogicMPI, ScaLAPACK
        gsmpi: GCC, SpectrumMPI
        gsolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, SpectrumMPI
:[K[K/[Kii[Kcc[Kee[K[Ktt[K[1;1HList of known toolchains (toolchainname: module[,module...]):
[2;1H        ClangGCC: Clang, GCC
[3;1H        CrayCCE: PrgEnv-cray
[4;1H        CrayGNU: PrgEnv-gnu
[5;1H        CrayIntel: PrgEnv-intel
[6;1H        CrayPGI: PrgEnv-pgi
[7;1H        GCC: GCC
[8;1H        GCCcore: GCCcore
[9;1H        GNU: GCC
[10;1H        PGI: PGI
[11;1H        cgmpich: Clang, GCC, MPICH
[12;1H        cgmpolf: BLACS, Clang, FFTW, GCC, MPICH, OpenBLAS, ScaLAPACK
[13;1H        cgmvapich2: Clang, GCC, MVAPICH2
[14;1H        cgmvolf: BLACS, Clang, FFTW, GCC, MVAPICH2, OpenBLAS, ScaLAPACK
[15;1H        cgompi: Clang, GCC, OpenMPI
[16;1H        cgoolf: BLACS, Clang, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[17;1H        dummy: 
[18;1H        foss: BLACS, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[19;1H        fosscuda: BLACS, CUDA, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[20;1H        gcccuda: CUDA, GCC
[21;1H        gimkl: GCC, imkl, impi
[22;1H        gimpi: GCC, impi
[23;1H        gimpic: CUDA, GCC, impi
[24;1H        giolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, impi
[25;1H        giolfc: BLACS, CUDA, FFTW, GCC, OpenBLAS, ScaLAPACK, impi
[26;1H        gmacml: ACML, BLACS, FFTW, GCC, MVAPICH2, ScaLAPACK
[27;1H        gmkl: GCC, imkl
[28;1H        gmklc: CUDA, GCC, imkl
[29;1H        gmpich: GCC, MPICH
[30;1H        gmpich2: GCC, MPICH2
[31;1H        gmpolf: BLACS, FFTW, GCC, MPICH, OpenBLAS, ScaLAPACK
[32;1H        gmvapich2: GCC, MVAPICH2
[33;1H        gmvolf: BLACS, FFTW, GCC, MVAPICH2, OpenBLAS, ScaLAPACK
[34;1H        goalf: ATLAS, BLACS, FFTW, GCC, OpenMPI, ScaLAPACK
[35;1H        goblf: BLACS, BLIS, FFTW, GCC, LAPACK, OpenMPI, ScaLAPACK
[36;1H        golf: FFTW, GCC, OpenBLAS
[37;1H        golfc: CUDA, FFTW, GCC, OpenBLAS
[38;1H        gomkl: GCC, OpenMPI, imkl
[39;1H        gomklc: CUDA, GCC, OpenMPI, imkl
[40;1H        gompi: GCC, OpenMPI
[41;1H        gompic: CUDA, GCC, OpenMPI
[42;1H        goolf: BLACS, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[43;1H        goolfc: BLACS, CUDA, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[44;1H        gpsmpi: GCC, psmpi
[45;1H        gpsolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, psmpi
[46;1H        gqacml: ACML, BLACS, FFTW, GCC, QLogicMPI, ScaLAPACK
[47;1H        gsmpi: GCC, SpectrumMPI
[48;1H        gsolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, SpectrumMPI
[49;1H[1;1HList of known toolchains (toolchainname: module[,module...]):
[2;1H        ClangGCC: Clang, GCC
[3;1H        CrayCCE: PrgEnv-cray
[4;1H        CrayGNU: PrgEnv-gnu
[5;1H        CrayIntel: PrgEnv-intel
[6;1H        CrayPGI: PrgEnv-pgi
[7;1H        GCC: GCC
[8;1H        GCCcore: GCCcore
[9;1H        GNU: GCC
[10;1H        PGI: PGI
[11;1H        cgmpich: Clang, GCC, MPICH
[12;1H        cgmpolf: BLACS, Clang, FFTW, GCC, MPICH, OpenBLAS, ScaLAPACK
[13;1H        cgmvapich2: Clang, GCC, MVAPICH2
[14;1H        cgmvolf: BLACS, Clang, FFTW, GCC, MVAPICH2, OpenBLAS, ScaLAPACK
[15;1H        cgompi: Clang, GCC, OpenMPI
[16;1H        cgoolf: BLACS, Clang, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[17;1H        dummy: 
[18;1H        foss: BLACS, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[19;1H        fosscuda: BLACS, CUDA, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[20;1H        gcccuda: CUDA, GCC
[21;1H        gimkl: GCC, imkl, impi
[22;1H        gimpi: GCC, impi
[23;1H        gimpic: CUDA, GCC, impi
[24;1H        giolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, impi
[25;1H        giolfc: BLACS, CUDA, FFTW, GCC, OpenBLAS, ScaLAPACK, impi
[26;1H        gmacml: ACML, BLACS, FFTW, GCC, MVAPICH2, ScaLAPACK
[27;1H        gmkl: GCC, imkl
[28;1H        gmklc: CUDA, GCC, imkl
[29;1H        gmpich: GCC, MPICH
[30;1H        gmpich2: GCC, MPICH2
[31;1H        gmpolf: BLACS, FFTW, GCC, MPICH, OpenBLAS, ScaLAPACK
[32;1H        gmvapich2: GCC, MVAPICH2
[33;1H        gmvolf: BLACS, FFTW, GCC, MVAPICH2, OpenBLAS, ScaLAPACK
[34;1H        goalf: ATLAS, BLACS, FFTW, GCC, OpenMPI, ScaLAPACK
[35;1H        goblf: BLACS, BLIS, FFTW, GCC, LAPACK, OpenMPI, ScaLAPACK
[36;1H        golf: FFTW, GCC, OpenBLAS
[37;1H        golfc: CUDA, FFTW, GCC, OpenBLAS
[38;1H        gomkl: GCC, OpenMPI, imkl
[39;1H        gomklc: CUDA, GCC, OpenMPI, imkl
[40;1H        gompi: GCC, OpenMPI
[41;1H        gompic: CUDA, GCC, OpenMPI
[42;1H        goolf: BLACS, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[43;1H        goolfc: BLACS, CUDA, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[44;1H        gpsmpi: GCC, psmpi
[45;1H        gpsolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, psmpi
[46;1H        gqacml: ACML, BLACS, FFTW, GCC, QLogicMPI, ScaLAPACK
[47;1H        gsmpi: GCC, SpectrumMPI
[48;1H        gsolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, SpectrumMPI
[49;1H...skipping...
        [7mict[27mce: icc, ifort, imkl, impi
        iimkl: icc, ifort, imkl
        iimklc: CUDA, icc, ifort, imkl
        iimpi: icc, ifort, impi
        iimpic: CUDA, icc, ifort, impi
        iiqmpi: QLogicMPI, icc, ifort
        impich: MPICH, icc, ifort
        impmkl: MPICH, icc, ifort, imkl
        intel: icc, ifort, imkl, impi
        intel-para: icc, ifort, imkl, psmpi
        intelcuda: CUDA, icc, ifort, imkl, impi
        iomkl: OpenMPI, icc, ifort, imkl
        iomklc: CUDA, OpenMPI, icc, ifort, imkl
        iompi: OpenMPI, icc, ifort
        iompic: CUDA, OpenMPI, icc, ifort
        ipsmpi: icc, ifort, psmpi
        iqacml: ACML, BLACS, FFTW, QLogicMPI, ScaLAPACK, icc, ifort
        ismkl: MPICH2, icc, ifort, imkl
        pmkl: PGI, imkl
        pomkl: OpenMPI, PGI, imkl
        pompi: OpenMPI, PGI
        xlcxlf: xlc, xlf
        xlmpich: MPICH, xlc, xlf
        xlmpich2: MPICH2, xlc, xlf
        xlmvapich2: MVAPICH2, xlc, xlf
        xlompi: OpenMPI, xlc, xlf
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[7m(END)[27m[K[K/[Kii[Koo[Kmm[K[1;1H        ictce: icc, ifort, imkl, impi
[2;1H        iimkl: icc, ifort, imkl
[3;1H        iimklc: CUDA, icc, ifort, imkl
[4;1H        iimpi: icc, ifort, impi
[5;1H        iimpic: CUDA, icc, ifort, impi
[6;1H        iiqmpi: QLogicMPI, icc, ifort
[7;1H        impich: MPICH, icc, ifort
[8;1H        impmkl: MPICH, icc, ifort, imkl
[9;1H        intel: icc, ifort, imkl, impi
[10;1H        intel-para: icc, ifort, imkl, psmpi
[11;1H        intelcuda: CUDA, icc, ifort, imkl, impi
[12;1H        iomkl: OpenMPI, icc, ifort, imkl
[13;1H        iomklc: CUDA, OpenMPI, icc, ifort, imkl
[14;1H        iompi: OpenMPI, icc, ifort
[15;1H        iompic: CUDA, OpenMPI, icc, ifort
[16;1H        ipsmpi: icc, ifort, psmpi
[17;1H        iqacml: ACML, BLACS, FFTW, QLogicMPI, ScaLAPACK, icc, ifort
[18;1H        ismkl: MPICH2, icc, ifort, imkl
[19;1H        pmkl: PGI, imkl
[20;1H        pomkl: OpenMPI, PGI, imkl
[21;1H        pompi: OpenMPI, PGI
[22;1H        xlcxlf: xlc, xlf
[23;1H        xlmpich: MPICH, xlc, xlf
[24;1H        xlmpich2: MPICH2, xlc, xlf
[25;1H        xlmvapich2: MVAPICH2, xlc, xlf
[26;1H        xlompi: OpenMPI, xlc, xlf
[27;1H[1m~[0m
[49;1H[1;1H        ictce: icc, ifort, imkl, impi
[2;1H        iimkl: icc, ifort, imkl
[3;1H        iimklc: CUDA, icc, ifort, imkl
[4;1H        iimpi: icc, ifort, impi
[5;1H        iimpic: CUDA, icc, ifort, impi
[6;1H        iiqmpi: QLogicMPI, icc, ifort
[7;1H        impich: MPICH, icc, ifort
[8;1H        impmkl: MPICH, icc, ifort, imkl
[9;1H        intel: icc, ifort, imkl, impi
[10;1H        intel-para: icc, ifort, imkl, psmpi
[11;1H        intelcuda: CUDA, icc, ifort, imkl, impi
[12;1H        [7miom[27mkl: OpenMPI, icc, ifort, imkl
[13;1H        [7miom[27mklc: CUDA, OpenMPI, icc, ifort, imkl
[14;1H        [7miom[27mpi: OpenMPI, icc, ifort
[15;1H        [7miom[27mpic: CUDA, OpenMPI, icc, ifort
[16;1H        ipsmpi: icc, ifort, psmpi
[17;1H        iqacml: ACML, BLACS, FFTW, QLogicMPI, ScaLAPACK, icc, ifort
[18;1H        ismkl: MPICH2, icc, ifort, imkl
[19;1H        pmkl: PGI, imkl
[20;1H        pomkl: OpenMPI, PGI, imkl
[21;1H        pompi: OpenMPI, PGI
[22;1H        xlcxlf: xlc, xlf
[23;1H        xlmpich: MPICH, xlc, xlf
[24;1H        xlmpich2: MPICH2, xlc, xlf
[25;1H        xlmvapich2: MVAPICH2, xlc, xlf
[26;1H        xlompi: OpenMPI, xlc, xlf
[27;1H[1m~[0m
[49;1H[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[7m(END)[27m[K[K [KESCESC[KOO[KAA[K[HM        intelcuda: CUDA, icc, ifort, imkl, impi
[49;1H[K[7m(END)[27m[K[K [KESCESC[KOO[KAA[K[HM        intel-para: icc, ifort, imkl, psmpi
[49;1H[K[7m(END)[27m[K[K [KESCESC[KOO[KAA[K[HM        intel: icc, ifort, imkl, impi
[49;1H[K[7m(END)[27m[K[K [KESCESC[KOO[KAA[K[HM        impmkl: MPICH, icc, ifort, imkl
[49;1H[K[7m(END)[27m[K[K [KESCESC[KOO[KAA[K[HM        impich: MPICH, icc, ifort
[49;1H[K[7m(END)[27m[K[K [KESCESC[KOO[KAA[K[HM        iiqmpi: QLogicMPI, icc, ifort
[49;1H[K[7m(END)[27m[K[K [KESCESC[KOO[KAA[K[HM        iimpic: CUDA, icc, ifort, impi
[49;1H[K[7m(END)[27m[K[K [KESCESC[KOO[KAA[K[HM        iimpi: icc, ifort, impi
[49;1H[K[7m(END)[27m[K[K [KESCESC[KOO[KAA[K[HM        iimklc: CUDA, icc, ifort, imkl
[49;1H[K[7m(END)[27m[K[K [KESCESC[KOO[KAA[K[HM        iimkl: icc, ifort, imkl
[49;1H[K[7m(END)[27m[K[K [KESCESC[KOO[KAA[K[HM        ictce: icc, ifort, imkl, impi
[49;1H[K[7m(END)[27m[K[K [KESCESC[KOO[KAA[K[HM        iccifortcuda: CUDA, icc, ifort
[49;1H[K[7m(END)[27m[K[K [KESCESC[KOO[KAA[K[HM        iccifort: icc, ifort
[49;1H[K[7m(END)[27m[K[K [KESCESC[KOO[KAA[K[HM        gsolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, SpectrumMPI
[49;1H[K[7m(END)[27m[K[K [KESCESC[KOO[KAA[K[HM        gsmpi: GCC, SpectrumMPI
[49;1H[K[7m(END)[27m[K[K [KESCESC[KOO[KAA[K[HM        gqacml: ACML, BLACS, FFTW, GCC, QLogicMPI, ScaLAPACK
[49;1H[K[7m(END)[27m[K[K [KESCESC[KOO[KAA[K[HM        gpsolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, psmpi
[49;1H[K[7m(END)[27m[K[K/[Kgg[Koo[Kmm[Kpp[Kii[K[1;1H        gpsolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, psmpi
[2;1H        gqacml: ACML, BLACS, FFTW, GCC, QLogicMPI, ScaLAPACK
[3;1H        gsmpi: GCC, SpectrumMPI
[4;1H        gsolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, SpectrumMPI
[5;1H        iccifort: icc, ifort
[6;1H        iccifortcuda: CUDA, icc, ifort
[7;1H        ictce: icc, ifort, imkl, impi
[8;1H        iimkl: icc, ifort, imkl
[9;1H        iimklc: CUDA, icc, ifort, imkl
[10;1H        iimpi: icc, ifort, impi
[11;1H        iimpic: CUDA, icc, ifort, impi
[12;1H        iiqmpi: QLogicMPI, icc, ifort
[13;1H        impich: MPICH, icc, ifort
[14;1H        impmkl: MPICH, icc, ifort, imkl
[15;1H        intel: icc, ifort, imkl, impi
[16;1H        intel-para: icc, ifort, imkl, psmpi
[17;1H        intelcuda: CUDA, icc, ifort, imkl, impi
[18;1H        iomkl: OpenMPI, icc, ifort, imkl
[19;1H        iomklc: CUDA, OpenMPI, icc, ifort, imkl
[20;1H        iompi: OpenMPI, icc, ifort
[21;1H        iompic: CUDA, OpenMPI, icc, ifort
[22;1H        ipsmpi: icc, ifort, psmpi
[23;1H        iqacml: ACML, BLACS, FFTW, QLogicMPI, ScaLAPACK, icc, ifort
[24;1H        ismkl: MPICH2, icc, ifort, imkl
[25;1H        pmkl: PGI, imkl
[26;1H        pomkl: OpenMPI, PGI, imkl
[27;1H        pompi: OpenMPI, PGI
[28;1H        xlcxlf: xlc, xlf
[29;1H        xlmpich: MPICH, xlc, xlf
[30;1H        xlmpich2: MPICH2, xlc, xlf
[31;1H        xlmvapich2: MVAPICH2, xlc, xlf
[32;1H        xlompi: OpenMPI, xlc, xlf
[33;1H[1m~[0m
[49;1H[1;1H        gpsolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, psmpi
[2;1H        gqacml: ACML, BLACS, FFTW, GCC, QLogicMPI, ScaLAPACK
[3;1H        gsmpi: GCC, SpectrumMPI
[4;1H        gsolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, SpectrumMPI
[5;1H        iccifort: icc, ifort
[6;1H        iccifortcuda: CUDA, icc, ifort
[7;1H        ictce: icc, ifort, imkl, impi
[8;1H        iimkl: icc, ifort, imkl
[9;1H        iimklc: CUDA, icc, ifort, imkl
[10;1H        iimpi: icc, ifort, impi
[11;1H        iimpic: CUDA, icc, ifort, impi
[12;1H        iiqmpi: QLogicMPI, icc, ifort
[13;1H        impich: MPICH, icc, ifort
[14;1H        impmkl: MPICH, icc, ifort, imkl
[15;1H        intel: icc, ifort, imkl, impi
[16;1H        intel-para: icc, ifort, imkl, psmpi
[17;1H        intelcuda: CUDA, icc, ifort, imkl, impi
[18;1H        iomkl: OpenMPI, icc, ifort, imkl
[19;1H        iomklc: CUDA, OpenMPI, icc, ifort, imkl
[20;1H        iompi: OpenMPI, icc, ifort
[21;1H        iompic: CUDA, OpenMPI, icc, ifort
[22;1H        ipsmpi: icc, ifort, psmpi
[23;1H        iqacml: ACML, BLACS, FFTW, QLogicMPI, ScaLAPACK, icc, ifort
[24;1H        ismkl: MPICH2, icc, ifort, imkl
[25;1H        pmkl: PGI, imkl
[26;1H        pomkl: OpenMPI, PGI, imkl
[27;1H        pompi: OpenMPI, PGI
[28;1H        xlcxlf: xlc, xlf
[29;1H        xlmpich: MPICH, xlc, xlf
[30;1H        xlmpich2: MPICH2, xlc, xlf
[31;1H        xlmvapich2: MVAPICH2, xlc, xlf
[32;1H        xlompi: OpenMPI, xlc, xlf
[33;1H[1m~[0m
[49;1H[K[7mPattern not found  (press RETURN)[27m[49;1H[K[K[HM        gpsmpi: GCC, psmpi
[HM        goolfc: BLACS, CUDA, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[HM        goolf: BLACS, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[HM        [7mgompi[27mc: CUDA, GCC, OpenMPI
[HM        [7mgompi[27m: GCC, OpenMPI
[HM        gomklc: CUDA, GCC, OpenMPI, imkl
[HM        gomkl: GCC, OpenMPI, imkl
[HM        golfc: CUDA, FFTW, GCC, OpenBLAS
[HM        golf: FFTW, GCC, OpenBLAS
[HM        goblf: BLACS, BLIS, FFTW, GCC, LAPACK, OpenMPI, ScaLAPACK
[HM        goalf: ATLAS, BLACS, FFTW, GCC, OpenMPI, ScaLAPACK
[HM        gmvolf: BLACS, FFTW, GCC, MVAPICH2, OpenBLAS, ScaLAPACK
[HM        gmvapich2: GCC, MVAPICH2
[HM        gmpolf: BLACS, FFTW, GCC, MPICH, OpenBLAS, ScaLAPACK
[HM        gmpich2: GCC, MPICH2
[HM        gmpich: GCC, MPICH
[HM        gmklc: CUDA, GCC, imkl
[HM        gmkl: GCC, imkl
[HM        gmacml: ACML, BLACS, FFTW, GCC, MVAPICH2, ScaLAPACK
[HM        giolfc: BLACS, CUDA, FFTW, GCC, OpenBLAS, ScaLAPACK, impi
[HM        giolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, impi
[HM        gimpic: CUDA, GCC, impi
[HM        gimpi: GCC, impi
[HM        gimkl: GCC, imkl, impi
[HM        gcccuda: CUDA, GCC
[HM        fosscuda: BLACS, CUDA, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[HM        foss: BLACS, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[HM        dummy: 
[HM        cgoolf: BLACS, Clang, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[HM        c[7mgompi[27m: Clang, GCC, OpenMPI
[HM        cgmvolf: BLACS, Clang, FFTW, GCC, MVAPICH2, OpenBLAS, ScaLAPACK
[HM        cgmvapich2: Clang, GCC, MVAPICH2
[HM        cgmpolf: BLACS, Clang, FFTW, GCC, MPICH, OpenBLAS, ScaLAPACK
[HM        cgmpich: Clang, GCC, MPICH
[HM        PGI: PGI
[HM        GNU: GCC
[HM        GCCcore: GCCcore
[HM        GCC: GCC
[HM        CrayPGI: PrgEnv-pgi
[HM        CrayIntel: PrgEnv-intel
[HM        CrayGNU: PrgEnv-gnu
[HM        CrayCCE: PrgEnv-cray
[HM        ClangGCC: Clang, GCC
[HMList of known toolchains (toolchainname: module[,module...]):
[49;1H[K:[K[K/[Kii[Kcc[Kee[Ktt[K[K[Ktt[Kcc[K[1;1HList of known toolchains (toolchainname: module[,module...]):
[2;1H        ClangGCC: Clang, GCC
[3;1H        CrayCCE: PrgEnv-cray
[4;1H        CrayGNU: PrgEnv-gnu
[5;1H        CrayIntel: PrgEnv-intel
[6;1H        CrayPGI: PrgEnv-pgi
[7;1H        GCC: GCC
[8;1H        GCCcore: GCCcore
[9;1H        GNU: GCC
[10;1H        PGI: PGI
[11;1H        cgmpich: Clang, GCC, MPICH
[12;1H        cgmpolf: BLACS, Clang, FFTW, GCC, MPICH, OpenBLAS, ScaLAPACK
[13;1H        cgmvapich2: Clang, GCC, MVAPICH2
[14;1H        cgmvolf: BLACS, Clang, FFTW, GCC, MVAPICH2, OpenBLAS, ScaLAPACK
[15;1H        cgompi: Clang, GCC, OpenMPI
[16;1H        cgoolf: BLACS, Clang, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[17;1H        dummy: 
[18;1H        foss: BLACS, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[19;1H        fosscuda: BLACS, CUDA, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[20;1H        gcccuda: CUDA, GCC
[21;1H        gimkl: GCC, imkl, impi
[22;1H        gimpi: GCC, impi
[23;1H        gimpic: CUDA, GCC, impi
[24;1H        giolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, impi
[25;1H        giolfc: BLACS, CUDA, FFTW, GCC, OpenBLAS, ScaLAPACK, impi
[26;1H        gmacml: ACML, BLACS, FFTW, GCC, MVAPICH2, ScaLAPACK
[27;1H        gmkl: GCC, imkl
[28;1H        gmklc: CUDA, GCC, imkl
[29;1H        gmpich: GCC, MPICH
[30;1H        gmpich2: GCC, MPICH2
[31;1H        gmpolf: BLACS, FFTW, GCC, MPICH, OpenBLAS, ScaLAPACK
[32;1H        gmvapich2: GCC, MVAPICH2
[33;1H        gmvolf: BLACS, FFTW, GCC, MVAPICH2, OpenBLAS, ScaLAPACK
[34;1H        goalf: ATLAS, BLACS, FFTW, GCC, OpenMPI, ScaLAPACK
[35;1H        goblf: BLACS, BLIS, FFTW, GCC, LAPACK, OpenMPI, ScaLAPACK
[36;1H        golf: FFTW, GCC, OpenBLAS
[37;1H        golfc: CUDA, FFTW, GCC, OpenBLAS
[38;1H        gomkl: GCC, OpenMPI, imkl
[39;1H        gomklc: CUDA, GCC, OpenMPI, imkl
[40;1H        gompi: GCC, OpenMPI
[41;1H        gompic: CUDA, GCC, OpenMPI
[42;1H        goolf: BLACS, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[43;1H        goolfc: BLACS, CUDA, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[44;1H        gpsmpi: GCC, psmpi
[45;1H        gpsolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, psmpi
[46;1H        gqacml: ACML, BLACS, FFTW, GCC, QLogicMPI, ScaLAPACK
[47;1H        gsmpi: GCC, SpectrumMPI
[48;1H        gsolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, SpectrumMPI
[49;1H[1;1HList of known toolchains (toolchainname: module[,module...]):
[2;1H        ClangGCC: Clang, GCC
[3;1H        CrayCCE: PrgEnv-cray
[4;1H        CrayGNU: PrgEnv-gnu
[5;1H        CrayIntel: PrgEnv-intel
[6;1H        CrayPGI: PrgEnv-pgi
[7;1H        GCC: GCC
[8;1H        GCCcore: GCCcore
[9;1H        GNU: GCC
[10;1H        PGI: PGI
[11;1H        cgmpich: Clang, GCC, MPICH
[12;1H        cgmpolf: BLACS, Clang, FFTW, GCC, MPICH, OpenBLAS, ScaLAPACK
[13;1H        cgmvapich2: Clang, GCC, MVAPICH2
[14;1H        cgmvolf: BLACS, Clang, FFTW, GCC, MVAPICH2, OpenBLAS, ScaLAPACK
[15;1H        cgompi: Clang, GCC, OpenMPI
[16;1H        cgoolf: BLACS, Clang, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[17;1H        dummy: 
[18;1H        foss: BLACS, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[19;1H        fosscuda: BLACS, CUDA, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[20;1H        gcccuda: CUDA, GCC
[21;1H        gimkl: GCC, imkl, impi
[22;1H        gimpi: GCC, impi
[23;1H        gimpic: CUDA, GCC, impi
[24;1H        giolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, impi
[25;1H        giolfc: BLACS, CUDA, FFTW, GCC, OpenBLAS, ScaLAPACK, impi
[26;1H        gmacml: ACML, BLACS, FFTW, GCC, MVAPICH2, ScaLAPACK
[27;1H        gmkl: GCC, imkl
[28;1H        gmklc: CUDA, GCC, imkl
[29;1H        gmpich: GCC, MPICH
[30;1H        gmpich2: GCC, MPICH2
[31;1H        gmpolf: BLACS, FFTW, GCC, MPICH, OpenBLAS, ScaLAPACK
[32;1H        gmvapich2: GCC, MVAPICH2
[33;1H        gmvolf: BLACS, FFTW, GCC, MVAPICH2, OpenBLAS, ScaLAPACK
[34;1H        goalf: ATLAS, BLACS, FFTW, GCC, OpenMPI, ScaLAPACK
[35;1H        goblf: BLACS, BLIS, FFTW, GCC, LAPACK, OpenMPI, ScaLAPACK
[36;1H        golf: FFTW, GCC, OpenBLAS
[37;1H        golfc: CUDA, FFTW, GCC, OpenBLAS
[38;1H        gomkl: GCC, OpenMPI, imkl
[39;1H        gomklc: CUDA, GCC, OpenMPI, imkl
[40;1H        gompi: GCC, OpenMPI
[41;1H        gompic: CUDA, GCC, OpenMPI
[42;1H        goolf: BLACS, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[43;1H        goolfc: BLACS, CUDA, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[44;1H        gpsmpi: GCC, psmpi
[45;1H        gpsolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, psmpi
[46;1H        gqacml: ACML, BLACS, FFTW, GCC, QLogicMPI, ScaLAPACK
[47;1H        gsmpi: GCC, SpectrumMPI
[48;1H        gsolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, SpectrumMPI
[49;1H...skipping...
        [7mictc[27me: icc, ifort, imkl, impi
        iimkl: icc, ifort, imkl
        iimklc: CUDA, icc, ifort, imkl
        iimpi: icc, ifort, impi
        iimpic: CUDA, icc, ifort, impi
        iiqmpi: QLogicMPI, icc, ifort
        impich: MPICH, icc, ifort
        impmkl: MPICH, icc, ifort, imkl
        intel: icc, ifort, imkl, impi
        intel-para: icc, ifort, imkl, psmpi
        intelcuda: CUDA, icc, ifort, imkl, impi
        iomkl: OpenMPI, icc, ifort, imkl
        iomklc: CUDA, OpenMPI, icc, ifort, imkl
        iompi: OpenMPI, icc, ifort
        iompic: CUDA, OpenMPI, icc, ifort
        ipsmpi: icc, ifort, psmpi
        iqacml: ACML, BLACS, FFTW, QLogicMPI, ScaLAPACK, icc, ifort
        ismkl: MPICH2, icc, ifort, imkl
        pmkl: PGI, imkl
        pomkl: OpenMPI, PGI, imkl
        pompi: OpenMPI, PGI
        xlcxlf: xlc, xlf
        xlmpich: MPICH, xlc, xlf
        xlmpich2: MPICH2, xlc, xlf
        xlmvapich2: MVAPICH2, xlc, xlf
        xlompi: OpenMPI, xlc, xlf
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[7m(END)[27m[K[K/[Kii[Koo[Kmm[K[1;1H        ictce: icc, ifort, imkl, impi
[2;1H        iimkl: icc, ifort, imkl
[3;1H        iimklc: CUDA, icc, ifort, imkl
[4;1H        iimpi: icc, ifort, impi
[5;1H        iimpic: CUDA, icc, ifort, impi
[6;1H        iiqmpi: QLogicMPI, icc, ifort
[7;1H        impich: MPICH, icc, ifort
[8;1H        impmkl: MPICH, icc, ifort, imkl
[9;1H        intel: icc, ifort, imkl, impi
[10;1H        intel-para: icc, ifort, imkl, psmpi
[11;1H        intelcuda: CUDA, icc, ifort, imkl, impi
[12;1H        iomkl: OpenMPI, icc, ifort, imkl
[13;1H        iomklc: CUDA, OpenMPI, icc, ifort, imkl
[14;1H        iompi: OpenMPI, icc, ifort
[15;1H        iompic: CUDA, OpenMPI, icc, ifort
[16;1H        ipsmpi: icc, ifort, psmpi
[17;1H        iqacml: ACML, BLACS, FFTW, QLogicMPI, ScaLAPACK, icc, ifort
[18;1H        ismkl: MPICH2, icc, ifort, imkl
[19;1H        pmkl: PGI, imkl
[20;1H        pomkl: OpenMPI, PGI, imkl
[21;1H        pompi: OpenMPI, PGI
[22;1H        xlcxlf: xlc, xlf
[23;1H        xlmpich: MPICH, xlc, xlf
[24;1H        xlmpich2: MPICH2, xlc, xlf
[25;1H        xlmvapich2: MVAPICH2, xlc, xlf
[26;1H        xlompi: OpenMPI, xlc, xlf
[27;1H[1m~[0m
[49;1H[1;1H        ictce: icc, ifort, imkl, impi
[2;1H        iimkl: icc, ifort, imkl
[3;1H        iimklc: CUDA, icc, ifort, imkl
[4;1H        iimpi: icc, ifort, impi
[5;1H        iimpic: CUDA, icc, ifort, impi
[6;1H        iiqmpi: QLogicMPI, icc, ifort
[7;1H        impich: MPICH, icc, ifort
[8;1H        impmkl: MPICH, icc, ifort, imkl
[9;1H        intel: icc, ifort, imkl, impi
[10;1H        intel-para: icc, ifort, imkl, psmpi
[11;1H        intelcuda: CUDA, icc, ifort, imkl, impi
[12;1H        [7miom[27mkl: OpenMPI, icc, ifort, imkl
[13;1H        [7miom[27mklc: CUDA, OpenMPI, icc, ifort, imkl
[14;1H        [7miom[27mpi: OpenMPI, icc, ifort
[15;1H        [7miom[27mpic: CUDA, OpenMPI, icc, ifort
[16;1H        ipsmpi: icc, ifort, psmpi
[17;1H        iqacml: ACML, BLACS, FFTW, QLogicMPI, ScaLAPACK, icc, ifort
[18;1H        ismkl: MPICH2, icc, ifort, imkl
[19;1H        pmkl: PGI, imkl
[20;1H        pomkl: OpenMPI, PGI, imkl
[21;1H        pompi: OpenMPI, PGI
[22;1H        xlcxlf: xlc, xlf
[23;1H        xlmpich: MPICH, xlc, xlf
[24;1H        xlmpich2: MPICH2, xlc, xlf
[25;1H        xlmvapich2: MVAPICH2, xlc, xlf
[26;1H        xlompi: OpenMPI, xlc, xlf
[27;1H[1m~[0m
[49;1H[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[7m(END)[27m[K[K[?1l>[?1049l]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb[Kb-^C
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --list-toolchains | less[K[4Phelp | less
[?1049h[?1h=Usage: eb [options] easyconfig [...]

Builds software based on easyconfig (or parse a directory). Provide one or more easyconfigs or
directories, use -H or --help more information.

Options:
  --version             show program's version number and exit
  -h, --shorthelp       show short help message and exit
  -H OUTPUT_FORMAT, --help=OUTPUT_FORMAT
                        show full help message and exit
  --confighelp          show help as annotated configfile

  Debug and logging options (configfile section MAIN):
    -d, --debug         Enable debug log mode (def False)
    --info              Enable info log mode (def False)
    --quiet             Enable quiet/warning log mode (def False)

  Configfile options:
    --configfiles=CONFIGFILES
                        Parse (additional) configfiles (type comma-separated list; def
                        /home/romain.pereira/.config/easybuild/config.cfg)
    --ignoreconfigfiles=IGNORECONFIGFILES
                        Ignore configfiles (type comma-separated list)

  Basic options:
    Basic runtime options for EasyBuild. (configfile section basic)

    --dry-run           Print build overview incl. dependencies (full paths) (def False)
    -D, --dry-run-short
                        Print build overview incl. dependencies (short paths) (def False)
    -x, --extended-dry-run
                        Print build environment and (expected) build procedure that will be
                        performed (def False)
    --extended-dry-run-ignore-errors
                        Ignore errors that occur during dry run (def True)
    -f, --force         Force to rebuild software even if it's already installed (i.e. if it can
                        be found as module), and skipping check for OS dependencies (def False)
    --job               Submit the build as a job (def False)
    -l, --logtostdout   Redirect main log to stdout (def False)
    -b BLOCKS, --only-blocks=BLOCKS
                        Only build listed blocks (type comma-separated list)
    --rebuild           Rebuild software, even if module already exists (don't skip OS
                        dependencies checks) (def False)
    -r PATH[:PATH], --robot=PATH[:PATH]
                        Enable dependency resolution, using easyconfigs in specified paths (type
                        pathsep-separated list; def )
    --robot-paths=PATH[:PATH]
                        Additional paths to consider by robot for easyconfigs (--robot paths get
:[K[K/[Kee[Kaa[Kss[Kyy[Kbb[Kll[Koo[Kcc[Kkk[K[1;1HUsage: eb [options] easyconfig [...]
[2;1H
[3;1HBuilds software based on easyconfig (or parse a directory). Provide one or more easyconfigs or
[4;1Hdirectories, use -H or --help more information.
[5;1H
[6;1HOptions:
[7;1H  --version             show program's version number and exit
[8;1H  -h, --shorthelp       show short help message and exit
[9;1H  -H OUTPUT_FORMAT, --help=OUTPUT_FORMAT
[10;1H                        show full help message and exit
[11;1H  --confighelp          show help as annotated configfile
[12;1H
[13;1H  Debug and logging options (configfile section MAIN):
[14;1H    -d, --debug         Enable debug log mode (def False)
[15;1H    --info              Enable info log mode (def False)
[16;1H    --quiet             Enable quiet/warning log mode (def False)
[17;1H
[18;1H  Configfile options:
[19;1H    --configfiles=CONFIGFILES
[20;1H                        Parse (additional) configfiles (type comma-separated list; def
[21;1H                        /home/romain.pereira/.config/easybuild/config.cfg)
[22;1H    --ignoreconfigfiles=IGNORECONFIGFILES
[23;1H                        Ignore configfiles (type comma-separated list)
[24;1H
[25;1H  Basic options:
[26;1H    Basic runtime options for EasyBuild. (configfile section basic)
[27;1H
[28;1H    --dry-run           Print build overview incl. dependencies (full paths) (def False)
[29;1H    -D, --dry-run-short
[30;1H                        Print build overview incl. dependencies (short paths) (def False)
[31;1H    -x, --extended-dry-run
[32;1H                        Print build environment and (expected) build procedure that will be
[33;1H                        performed (def False)
[34;1H    --extended-dry-run-ignore-errors
[35;1H                        Ignore errors that occur during dry run (def True)
[36;1H    -f, --force         Force to rebuild software even if it's already installed (i.e. if it can
[37;1H                        be found as module), and skipping check for OS dependencies (def False)
[38;1H    --job               Submit the build as a job (def False)
[39;1H    -l, --logtostdout   Redirect main log to stdout (def False)
[40;1H    -b BLOCKS, --only-blocks=BLOCKS
[41;1H                        Only build listed blocks (type comma-separated list)
[42;1H    --rebuild           Rebuild software, even if module already exists (don't skip OS
[43;1H                        dependencies checks) (def False)
[44;1H    -r PATH[:PATH], --robot=PATH[:PATH]
[45;1H                        Enable dependency resolution, using easyconfigs in specified paths (type
[46;1H                        pathsep-separated list; def )
[47;1H    --robot-paths=PATH[:PATH]
[48;1H                        Additional paths to consider by robot for easyconfigs (--robot paths get
[49;1H[1;1HUsage: eb [options] easyconfig [...]
[2;1H
[3;1HBuilds software based on easyconfig (or parse a directory). Provide one or more easyconfigs or
[4;1Hdirectories, use -H or --help more information.
[5;1H
[6;1HOptions:
[7;1H  --version             show program's version number and exit
[8;1H  -h, --shorthelp       show short help message and exit
[9;1H  -H OUTPUT_FORMAT, --help=OUTPUT_FORMAT
[10;1H                        show full help message and exit
[11;1H  --confighelp          show help as annotated configfile
[12;1H
[13;1H  Debug and logging options (configfile section MAIN):
[14;1H    -d, --debug         Enable debug log mode (def False)
[15;1H    --info              Enable info log mode (def False)
[16;1H    --quiet             Enable quiet/warning log mode (def False)
[17;1H
[18;1H  Configfile options:
[19;1H    --configfiles=CONFIGFILES
[20;1H                        Parse (additional) configfiles (type comma-separated list; def
[21;1H                        /home/romain.pereira/.config/easybuild/config.cfg)
[22;1H    --ignoreconfigfiles=IGNORECONFIGFILES
[23;1H                        Ignore configfiles (type comma-separated list)
[24;1H
[25;1H  Basic options:
[26;1H    Basic runtime options for EasyBuild. (configfile section basic)
[27;1H
[28;1H    --dry-run           Print build overview incl. dependencies (full paths) (def False)
[29;1H    -D, --dry-run-short
[30;1H                        Print build overview incl. dependencies (short paths) (def False)
[31;1H    -x, --extended-dry-run
[32;1H                        Print build environment and (expected) build procedure that will be
[33;1H                        performed (def False)
[34;1H    --extended-dry-run-ignore-errors
[35;1H                        Ignore errors that occur during dry run (def True)
[36;1H    -f, --force         Force to rebuild software even if it's already installed (i.e. if it can
[37;1H                        be found as module), and skipping check for OS dependencies (def False)
[38;1H    --job               Submit the build as a job (def False)
[39;1H    -l, --logtostdout   Redirect main log to stdout (def False)
[40;1H    -b BLOCKS, --only-blocks=BLOCKS
[41;1H                        Only build listed blocks (type comma-separated list)
[42;1H    --rebuild           Rebuild software, even if module already exists (don't skip OS
[43;1H                        dependencies checks) (def False)
[44;1H    -r PATH[:PATH], --robot=PATH[:PATH]
[45;1H                        Enable dependency resolution, using easyconfigs in specified paths (type
[46;1H                        pathsep-separated list; def )
[47;1H    --robot-paths=PATH[:PATH]
[48;1H                        Additional paths to consider by robot for easyconfigs (--robot paths get
[49;1H...skipping...
    --include-[7measyblock[27ms=INCLUDE-EASYBLOCKS
                        Location(s) of extra or customized [7measyblock[27ms (type comma-separated
                        list; def )
    --include-module-naming-schemes=INCLUDE-MODULE-NAMING-SCHEMES
                        Location(s) of extra or customized module naming schemes (type comma-
                        separated list; def )
    --include-toolchains=INCLUDE-TOOLCHAINS
                        Location(s) of extra or customized toolchains or toolchain components
                        (type comma-separated list; def )
    --installpath=INSTALLPATH
                        Install path for software and modules (def
                        /home/romain.pereira/.local/easybuild)
    --installpath-modules=INSTALLPATH-MODULES
                        Install path for modules (if None, combine --installpath and --subdir-
                        modules)
    --installpath-software=INSTALLPATH-SOFTWARE
                        Install path for software (if None, combine --installpath and --subdir-
                        software)
    --job-backend=JOB-BACKEND
                        Backend to use for submitting jobs (type choice; def GC3Pie) (choices:
                        GC3Pie, PbsPython, Slurm)
    --logfile-format=DIR,FORMAT
                        Directory name and format of the log file (type comma-separated tuple;
                        def easybuild,easybuild-%(name)s-%(version)s-%(date)s.%(time)s.log)
    --module-depends-on
                        Use depends_on (Lmod 7.6.1+) for dependencies in all generated modules
                        (implies recursive unloading of modules). (def False)
    --module-naming-scheme=MODULE-NAMING-SCHEME
                        Module naming scheme to use (def EasyBuildMNS)
    --module-syntax=MODULE-SYNTAX
                        Syntax to be used for module files (type choice; def Lua) (choices: Lua,
                        Tcl)
    --moduleclasses=MODULECLASSES
                        Extend supported module classes (For more info on the default classes,
                        use --show-default-moduleclasses) (type comma-separated list; def base,a
                        stro,bio,cae,chem,compiler,data,debugger,devel,geo,ide,lang,lib,math,mpi
                        ,numlib,perf,quantum,phys,system,toolchain,tools,vis)
    --modules-footer=PATH
                        Path to file containing footer to be added to all generated module files
    --modules-header=PATH
                        Path to file containing header to be added to all generated module files
    --modules-tool=MODULES-TOOL
                        Modules tool to use (type choice; def Lmod) (choices:
                        EnvironmentModules, EnvironmentModulesC, EnvironmentModulesTcl, Lmod)
    --package-naming-scheme=PACKAGE-NAMING-SCHEME
                        Packaging naming scheme choice (type choice; def EasyBuildPNS) (choices:
                        EasyBuildPNS)
    --packagepath=PACKAGEPATH
:[K[K/[K                        The destination path for the packages built by package-tool (def
:[K[K/[K...skipping...
                        Show all easyconfig parameters (include [7measyblock[27m-specific ones by using
                        -e) (def False)
    --avail-easyconfig-templates
                        Show all template names and template constants that can be used in
                        easyconfigs. (def False)
    --avail-hooks       Show list of known hooks (def False)
    --avail-toolchain-opts=AVAIL-TOOLCHAIN-OPTS
                        Show options for toolchain (type str)
    --check-conflicts   Check for version conflicts in dependency graphs (def False)
    --dep-graph=depgraph.<ext>
                        Create dependency graph
    --dump-env-script   Dump source script to set up build environment based on
                        toolchain/dependencies (def False)
    --last-log          Print location to EasyBuild log file of last (failed) session (def
                        False)
    --list-[7measyblock[27ms=LIST-EASYBLOCKS
                        Show list of available [7measyblock[27ms (type choice; def simple) (choices:
                        simple, detailed)
    --list-installed-software=LIST-INSTALLED-SOFTWARE
                        Show list of installed software (type choice; def simple) (choices:
                        simple, detailed)
    --list-software=LIST-SOFTWARE
                        Show list of supported software (type choice; def simple) (choices:
                        simple, detailed)
    --list-toolchains   Show list of known toolchains (def False)
    --search=REGEX      Search for easyconfig files in the robot search path, print full paths
    --search-filename=REGEX
                        Search for easyconfig files in the robot search path, print only
                        filenames
    -S REGEX, --search-short=REGEX
                        Search for easyconfig files in the robot search path, print short paths
    --show-config       Show current EasyBuild configuration (only non-default + selected
                        settings) (def False)
    --show-default-configfiles
                        Show list of default config files (def False)
    --show-default-moduleclasses
                        Show default module classes with description (def False)
    --show-full-config  Show current EasyBuild configuration (all settings) (def False)
    --show-system-info  Show system information relevant to EasyBuild (def False)
    --terse             Terse output (machine-readable) (def False)

  Options for job backend:
    Options for job backend (only relevant when --job is used) (configfile section job)

    --job-backend-config=BACKEND-CONFIG
                        Configuration file for job backend
    --job-cores=CORES   Number of cores to request per job (type int)
    --job-deps-type=DEPS-TYPE
:[K[K[?1l>[?1049l]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --help | less[11@list-toolchains[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kea[K[K-easyblocks
EasyBlock
|-- Binary
|   |-- Conda
|   |-- EB_ABAQUS
|   |-- EB_Allinea
|   |-- EB_Anaconda
|   |-- EB_CPLEX
|   |-- EB_CUDA
|   |-- EB_EPD
|   |-- EB_IMOD
|   |-- EB_Maple
|   |-- EB_Mathematica
|   |-- EB_Molpro
|   |-- JAR
|   |-- PackedBinary
|   |   |-- EB_ANSYS
|   |   |-- EB_ant
|   |   |-- EB_BiSearch
|   |   |-- EB_Chimera
|   |   |-- EB_COMSOL
|   |   |-- EB_FDTD_underscore_Solutions
|   |   |-- EB_FLUENT
|   |   |-- EB_IronPython
|   |   |-- EB_Java
|   |   |-- EB_MATLAB
|   |   |-- EB_MCR
|   |   |-- EB_PGI
|   |   |-- EB_Samcef
|   |   |-- EB_Stata
|   |   |-- EB_Tornado
|   |   |-- EB_TotalView
|   |-- Rpm
|   |   |-- EB_Mono
|-- Bundle
|   |-- BuildEnv
|   |-- CrayToolchain
|   |-- PythonBundle
|   |-- SystemCompiler
|   |-- SystemMPI
|   |-- Toolchain
|-- ConfigureMake
|   |-- CMakeMake
|   |   |-- CMakePythonPackage
|   |   |   |-- EB_DOLFIN
|   |   |   |-- EB_UFC
|   |   |-- EB_Armadillo
|   |   |-- EB_BamTools
|   |   |-- EB_CGAL
|   |   |-- EB_Clang
|   |   |-- EB_DIRAC
|   |   |-- EB_Doxygen
|   |   |-- EB_Eigen
|   |   |-- EB_GATE
|   |   |-- EB_Geant4
|   |   |-- EB_GROMACS
|   |   |-- EB_netCDF
|   |   |-- EB_OpenBabel
|   |   |-- EB_OpenCV
|   |   |-- EB_PSI
|   |   |-- EB_ROOT
|   |   |-- EB_SuperLU
|   |   |-- EB_Trilinos
|   |-- ConfigureMakePythonPackage
|   |-- EB_Amber
|   |-- EB_ARB
|   |-- EB_ATLAS
|   |-- EB_binutils
|   |-- EB_BLACS
|   |-- EB_Bowtie
|   |-- EB_BWA
|   |-- EB_bzip2
|   |-- EB_CBLAS
|   |-- EB_Chapel
|   |-- EB_cppcheck
|   |-- EB_Cufflinks
|   |-- EB_DB
|   |-- EB_DL_underscore_POLY_underscore_Classic
|   |-- EB_Doris
|   |-- EB_EggLib
|   |-- EB_ESMF
|   |-- EB_ESPResSo
|   |-- EB_Extrae
|   |-- EB_Ferret
|   |-- EB_FFTW
|   |-- EB_flex
|   |-- EB_freetype
|   |-- EB_g2clib
|   |-- EB_g2lib
|   |-- EB_GCC
|   |   |-- SystemCompiler
|   |-- EB_GHC
|   |-- EB_Go
|   |-- EB_HDF5
|   |-- EB_HEALPix
|   |-- EB_HPCG
|   |-- EB_HPL
|   |-- EB_Hypre
|   |-- EB_LAPACK
|   |-- EB_Libint
|   |-- EB_libQGLViewer
|   |-- EB_libxml2
|   |-- EB_MetaVelvet
|   |-- EB_METIS
|   |-- EB_Molpro
|   |-- EB_Mono
|   |-- EB_Mothur
|   |-- EB_MPICH
|   |   |-- EB_MVAPICH2
|   |   |-- EB_psmpi
|   |-- EB_MrBayes
|   |-- EB_MUMmer
|   |-- EB_MUMPS
|   |-- EB_MyMediaLite
|   |-- EB_ncurses
|   |-- EB_netCDF_minus_Fortran
|   |-- EB_NEURON
|   |-- EB_NWChem
|   |-- EB_OCaml
|   |-- EB_Octave
|   |-- EB_OpenSSL
|   |-- EB_Paraver
|   |-- EB_Pasha
|   |-- EB_PDT
|   |-- EB_Perl
|   |-- EB_PETSc
|   |-- EB_pplacer
|   |-- EB_Primer3
|   |-- EB_Python
|   |   |-- EB_Tkinter
|   |-- EB_QScintilla
|   |-- EB_Qt
|   |-- EB_QuantumESPRESSO
|   |-- EB_R
|   |-- EB_Ruby
|   |-- EB_SAMtools
|   |-- EB_ScaLAPACK
|   |-- EB_Scalasca1
|   |-- EB_Score_minus_P
|   |-- EB_SHRiMP
|   |-- EB_Siesta
|   |-- EB_SLEPc
|   |-- EB_SOAPdenovo
|   |-- EB_SuiteSparse
|   |-- EB_SWIG
|   |-- EB_TAU
|   |-- EB_tbb
|   |-- EB_tbb
|   |-- EB_Velvet
|   |-- EB_VMD
|   |-- EB_XCrySDen
|   |-- MakeCp
|   |   |-- CmdCp
|   |   |   |-- EB_fastStructure
|   |   |-- EB_BamTools
|   |   |-- EB_BLAT
|   |   |-- EB_Bowtie2
|   |   |-- EB_BWISE
|   |   |-- EB_mutil
|   |   |-- EB_MXNet
|   |   |-- EB_NAMD
|   |-- PerlModule
|   |-- SystemMPI
|-- EB_ACML
|-- EB_ADF
|-- EB_ALADIN
|-- EB_Bazel
|-- EB_Boost
|-- EB_CHARMM
|-- EB_CP2K
|-- EB_FSL
|-- EB_GAMESS_minus_US
|-- EB_libsmm
|-- EB_Modeller
|-- EB_MRtrix
|-- EB_NCL
|-- EB_NEMO
|-- EB_Nim
|-- EB_OpenFOAM
|-- EB_OpenIFS
|-- EB_ParMETIS
|-- EB_Rosetta
|-- EB_SAS
|-- EB_SCOTCH
|-- EB_SNPhylo
|-- EB_TINKER
|-- EB_Trinity
|-- EB_VEP
|-- EB_WIEN2k
|-- EB_WPS
|-- EB_WRF
|-- EB_WRF_minus_Fire
|-- EB_Xmipp
|-- ExtensionEasyBlock
|   |-- OCamlPackage
|   |-- OctavePackage
|   |-- PerlModule
|   |-- PythonPackage
|   |   |-- CMakePythonPackage
|   |   |   |-- EB_DOLFIN
|   |   |   |-- EB_UFC
|   |   |-- ConfigureMakePythonPackage
|   |   |-- EB_EasyBuildMeta
|   |   |-- EB_EggLib
|   |   |-- EB_libxml2
|   |   |-- EB_netcdf4_minus_python
|   |   |-- EB_nose
|   |   |-- EB_PyQuante
|   |   |-- EB_python_minus_meep
|   |   |-- EB_PyZMQ
|   |   |-- EB_TensorFlow
|   |   |-- EB_VSC_minus_tools
|   |   |-- EB_wxPython
|   |   |-- FortranPythonPackage
|   |   |   |-- EB_numpy
|   |   |   |-- EB_scipy
|   |   |-- VersionIndependentPythonPackage
|   |   |   |-- VSCPythonPackage
|   |-- RPackage
|   |   |-- EB_Bioconductor
|   |   |-- EB_pbdMPI
|   |   |-- EB_pbdSLAP
|   |   |-- EB_Rmpi
|   |   |-- EB_Rserve
|   |   |-- EB_XML
|   |-- RubyGem
|-- IntelBase
|   |-- EB_Advisor
|   |-- EB_icc
|   |   |-- EB_ifort
|   |   |   |-- SystemCompiler
|   |-- EB_ifort
|   |   |-- SystemCompiler
|   |-- EB_imkl
|   |-- EB_impi
|   |   |-- SystemMPI
|   |-- EB_Inspector
|   |-- EB_ipp
|   |-- EB_itac
|   |-- EB_tbb
|   |-- EB_tbb
|   |-- EB_VTune
|-- MesonNinja
|-- ModuleRC
|-- PackedBinary
|   |-- EB_ANSYS
|   |-- EB_ant
|   |-- EB_BiSearch
|   |-- EB_Chimera
|   |-- EB_COMSOL
|   |-- EB_FDTD_underscore_Solutions
|   |-- EB_FLUENT
|   |-- EB_IronPython
|   |-- EB_Java
|   |-- EB_MATLAB
|   |-- EB_MCR
|   |-- EB_PGI
|   |-- EB_Samcef
|   |-- EB_Stata
|   |-- EB_Tornado
|   |-- EB_TotalView
|-- SCons
|-- Tarball
|   |-- BinariesTarball
|   |-- EB_FoldX
|   |-- EB_FreeSurfer
|   |-- EB_Gurobi
|   |-- EB_Hadoop
|   |-- EB_MTL4
|   |-- EB_picard
|   |-- EB_RepeatMasker
|-- Waf
Extension
|-- ExtensionEasyBlock
|   |-- OCamlPackage
|   |-- OctavePackage
|   |-- PerlModule
|   |-- PythonPackage
|   |   |-- CMakePythonPackage
|   |   |   |-- EB_DOLFIN
|   |   |   |-- EB_UFC
|   |   |-- ConfigureMakePythonPackage
|   |   |-- EB_EasyBuildMeta
|   |   |-- EB_EggLib
|   |   |-- EB_libxml2
|   |   |-- EB_netcdf4_minus_python
|   |   |-- EB_nose
|   |   |-- EB_PyQuante
|   |   |-- EB_python_minus_meep
|   |   |-- EB_PyZMQ
|   |   |-- EB_TensorFlow
|   |   |-- EB_VSC_minus_tools
|   |   |-- EB_wxPython
|   |   |-- FortranPythonPackage
|   |   |   |-- EB_numpy
|   |   |   |-- EB_scipy
|   |   |-- VersionIndependentPythonPackage
|   |   |   |-- VSCPythonPackage
|   |-- RPackage
|   |   |-- EB_Bioconductor
|   |   |-- EB_pbdMPI
|   |   |-- EB_pbdSLAP
|   |   |-- EB_Rmpi
|   |   |-- EB_Rserve
|   |   |-- EB_XML
|   |-- RubyGem
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --list-easyblocks | less
[?1049h[?1h=EasyBlock
|-- Binary
|   |-- Conda
|   |-- EB_ABAQUS
|   |-- EB_Allinea
|   |-- EB_Anaconda
|   |-- EB_CPLEX
|   |-- EB_CUDA
|   |-- EB_EPD
|   |-- EB_IMOD
|   |-- EB_Maple
|   |-- EB_Mathematica
|   |-- EB_Molpro
|   |-- JAR
|   |-- PackedBinary
|   |   |-- EB_ANSYS
|   |   |-- EB_ant
|   |   |-- EB_BiSearch
|   |   |-- EB_Chimera
|   |   |-- EB_COMSOL
|   |   |-- EB_FDTD_underscore_Solutions
|   |   |-- EB_FLUENT
|   |   |-- EB_IronPython
|   |   |-- EB_Java
|   |   |-- EB_MATLAB
|   |   |-- EB_MCR
|   |   |-- EB_PGI
|   |   |-- EB_Samcef
|   |   |-- EB_Stata
|   |   |-- EB_Tornado
|   |   |-- EB_TotalView
|   |-- Rpm
|   |   |-- EB_Mono
|-- Bundle
|   |-- BuildEnv
|   |-- CrayToolchain
|   |-- PythonBundle
|   |-- SystemCompiler
|   |-- SystemMPI
|   |-- Toolchain
|-- ConfigureMake
|   |-- CMakeMake
|   |   |-- CMakePythonPackage
|   |   |   |-- EB_DOLFIN
|   |   |   |-- EB_UFC
|   |   |-- EB_Armadillo
|   |   |-- EB_BamTools
|   |   |-- EB_CGAL
:[K[K/[Kff[Kll[Kee[Kxx[K--[K22[K..[K66[K..[K44[K[1;1HEasyBlock
[2;1H|-- Binary
[3;1H|   |-- Conda
[4;1H|   |-- EB_ABAQUS
[5;1H|   |-- EB_Allinea
[6;1H|   |-- EB_Anaconda
[7;1H|   |-- EB_CPLEX
[8;1H|   |-- EB_CUDA
[9;1H|   |-- EB_EPD
[10;1H|   |-- EB_IMOD
[11;1H|   |-- EB_Maple
[12;1H|   |-- EB_Mathematica
[13;1H|   |-- EB_Molpro
[14;1H|   |-- JAR
[15;1H|   |-- PackedBinary
[16;1H|   |   |-- EB_ANSYS
[17;1H|   |   |-- EB_ant
[18;1H|   |   |-- EB_BiSearch
[19;1H|   |   |-- EB_Chimera
[20;1H|   |   |-- EB_COMSOL
[21;1H|   |   |-- EB_FDTD_underscore_Solutions
[22;1H|   |   |-- EB_FLUENT
[23;1H|   |   |-- EB_IronPython
[24;1H|   |   |-- EB_Java
[25;1H|   |   |-- EB_MATLAB
[26;1H|   |   |-- EB_MCR
[27;1H|   |   |-- EB_PGI
[28;1H|   |   |-- EB_Samcef
[29;1H|   |   |-- EB_Stata
[30;1H|   |   |-- EB_Tornado
[31;1H|   |   |-- EB_TotalView
[32;1H|   |-- Rpm
[33;1H|   |   |-- EB_Mono
[34;1H|-- Bundle
[35;1H|   |-- BuildEnv
[36;1H|   |-- CrayToolchain
[37;1H|   |-- PythonBundle
[38;1H|   |-- SystemCompiler
[39;1H|   |-- SystemMPI
[40;1H|   |-- Toolchain
[41;1H|-- ConfigureMake
[42;1H|   |-- CMakeMake
[43;1H|   |   |-- CMakePythonPackage
[44;1H|   |   |   |-- EB_DOLFIN
[45;1H|   |   |   |-- EB_UFC
[46;1H|   |   |-- EB_Armadillo
[47;1H|   |   |-- EB_BamTools
[48;1H|   |   |-- EB_CGAL
[49;1H[1;1HEasyBlock
[2;1H|-- Binary
[3;1H|   |-- Conda
[4;1H|   |-- EB_ABAQUS
[5;1H|   |-- EB_Allinea
[6;1H|   |-- EB_Anaconda
[7;1H|   |-- EB_CPLEX
[8;1H|   |-- EB_CUDA
[9;1H|   |-- EB_EPD
[10;1H|   |-- EB_IMOD
[11;1H|   |-- EB_Maple
[12;1H|   |-- EB_Mathematica
[13;1H|   |-- EB_Molpro
[14;1H|   |-- JAR
[15;1H|   |-- PackedBinary
[16;1H|   |   |-- EB_ANSYS
[17;1H|   |   |-- EB_ant
[18;1H|   |   |-- EB_BiSearch
[19;1H|   |   |-- EB_Chimera
[20;1H|   |   |-- EB_COMSOL
[21;1H|   |   |-- EB_FDTD_underscore_Solutions
[22;1H|   |   |-- EB_FLUENT
[23;1H|   |   |-- EB_IronPython
[24;1H|   |   |-- EB_Java
[25;1H|   |   |-- EB_MATLAB
[26;1H|   |   |-- EB_MCR
[27;1H|   |   |-- EB_PGI
[28;1H|   |   |-- EB_Samcef
[29;1H|   |   |-- EB_Stata
[30;1H|   |   |-- EB_Tornado
[31;1H|   |   |-- EB_TotalView
[32;1H|   |-- Rpm
[33;1H|   |   |-- EB_Mono
[34;1H|-- Bundle
[35;1H|   |-- BuildEnv
[36;1H|   |-- CrayToolchain
[37;1H|   |-- PythonBundle
[38;1H|   |-- SystemCompiler
[39;1H|   |-- SystemMPI
[40;1H|   |-- Toolchain
[41;1H|-- ConfigureMake
[42;1H|   |-- CMakeMake
[43;1H|   |   |-- CMakePythonPackage
[44;1H|   |   |   |-- EB_DOLFIN
[45;1H|   |   |   |-- EB_UFC
[46;1H|   |   |-- EB_Armadillo
[47;1H|   |   |-- EB_BamTools
[48;1H|   |   |-- EB_CGAL
[49;1H[K[7mPattern not found  (press RETURN)[27m[49;1H[K[K[?1l>[?1049l]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --list-easyblocks | less
[?1049h[?1h=EasyBlock
|-- Binary
|   |-- Conda
|   |-- EB_ABAQUS
|   |-- EB_Allinea
|   |-- EB_Anaconda
|   |-- EB_CPLEX
|   |-- EB_CUDA
|   |-- EB_EPD
|   |-- EB_IMOD
|   |-- EB_Maple
|   |-- EB_Mathematica
|   |-- EB_Molpro
|   |-- JAR
|   |-- PackedBinary
|   |   |-- EB_ANSYS
|   |   |-- EB_ant
|   |   |-- EB_BiSearch
|   |   |-- EB_Chimera
|   |   |-- EB_COMSOL
|   |   |-- EB_FDTD_underscore_Solutions
|   |   |-- EB_FLUENT
|   |   |-- EB_IronPython
|   |   |-- EB_Java
|   |   |-- EB_MATLAB
|   |   |-- EB_MCR
|   |   |-- EB_PGI
|   |   |-- EB_Samcef
|   |   |-- EB_Stata
|   |   |-- EB_Tornado
|   |   |-- EB_TotalView
|   |-- Rpm
|   |   |-- EB_Mono
|-- Bundle
|   |-- BuildEnv
|   |-- CrayToolchain
|   |-- PythonBundle
|   |-- SystemCompiler
|   |-- SystemMPI
|   |-- Toolchain
|-- ConfigureMake
|   |-- CMakeMake
|   |   |-- CMakePythonPackage
|   |   |   |-- EB_DOLFIN
|   |   |   |-- EB_UFC
|   |   |-- EB_Armadillo
|   |   |-- EB_BamTools
|   |   |-- EB_CGAL
:[K[K/[Kff[Kll[Kee[Kxx[K[1;1HEasyBlock
[2;1H|-- Binary
[3;1H|   |-- Conda
[4;1H|   |-- EB_ABAQUS
[5;1H|   |-- EB_Allinea
[6;1H|   |-- EB_Anaconda
[7;1H|   |-- EB_CPLEX
[8;1H|   |-- EB_CUDA
[9;1H|   |-- EB_EPD
[10;1H|   |-- EB_IMOD
[11;1H|   |-- EB_Maple
[12;1H|   |-- EB_Mathematica
[13;1H|   |-- EB_Molpro
[14;1H|   |-- JAR
[15;1H|   |-- PackedBinary
[16;1H|   |   |-- EB_ANSYS
[17;1H|   |   |-- EB_ant
[18;1H|   |   |-- EB_BiSearch
[19;1H|   |   |-- EB_Chimera
[20;1H|   |   |-- EB_COMSOL
[21;1H|   |   |-- EB_FDTD_underscore_Solutions
[22;1H|   |   |-- EB_FLUENT
[23;1H|   |   |-- EB_IronPython
[24;1H|   |   |-- EB_Java
[25;1H|   |   |-- EB_MATLAB
[26;1H|   |   |-- EB_MCR
[27;1H|   |   |-- EB_PGI
[28;1H|   |   |-- EB_Samcef
[29;1H|   |   |-- EB_Stata
[30;1H|   |   |-- EB_Tornado
[31;1H|   |   |-- EB_TotalView
[32;1H|   |-- Rpm
[33;1H|   |   |-- EB_Mono
[34;1H|-- Bundle
[35;1H|   |-- BuildEnv
[36;1H|   |-- CrayToolchain
[37;1H|   |-- PythonBundle
[38;1H|   |-- SystemCompiler
[39;1H|   |-- SystemMPI
[40;1H|   |-- Toolchain
[41;1H|-- ConfigureMake
[42;1H|   |-- CMakeMake
[43;1H|   |   |-- CMakePythonPackage
[44;1H|   |   |   |-- EB_DOLFIN
[45;1H|   |   |   |-- EB_UFC
[46;1H|   |   |-- EB_Armadillo
[47;1H|   |   |-- EB_BamTools
[48;1H|   |   |-- EB_CGAL
[49;1H[1;1HEasyBlock
[2;1H|-- Binary
[3;1H|   |-- Conda
[4;1H|   |-- EB_ABAQUS
[5;1H|   |-- EB_Allinea
[6;1H|   |-- EB_Anaconda
[7;1H|   |-- EB_CPLEX
[8;1H|   |-- EB_CUDA
[9;1H|   |-- EB_EPD
[10;1H|   |-- EB_IMOD
[11;1H|   |-- EB_Maple
[12;1H|   |-- EB_Mathematica
[13;1H|   |-- EB_Molpro
[14;1H|   |-- JAR
[15;1H|   |-- PackedBinary
[16;1H|   |   |-- EB_ANSYS
[17;1H|   |   |-- EB_ant
[18;1H|   |   |-- EB_BiSearch
[19;1H|   |   |-- EB_Chimera
[20;1H|   |   |-- EB_COMSOL
[21;1H|   |   |-- EB_FDTD_underscore_Solutions
[22;1H|   |   |-- EB_FLUENT
[23;1H|   |   |-- EB_IronPython
[24;1H|   |   |-- EB_Java
[25;1H|   |   |-- EB_MATLAB
[26;1H|   |   |-- EB_MCR
[27;1H|   |   |-- EB_PGI
[28;1H|   |   |-- EB_Samcef
[29;1H|   |   |-- EB_Stata
[30;1H|   |   |-- EB_Tornado
[31;1H|   |   |-- EB_TotalView
[32;1H|   |-- Rpm
[33;1H|   |   |-- EB_Mono
[34;1H|-- Bundle
[35;1H|   |-- BuildEnv
[36;1H|   |-- CrayToolchain
[37;1H|   |-- PythonBundle
[38;1H|   |-- SystemCompiler
[39;1H|   |-- SystemMPI
[40;1H|   |-- Toolchain
[41;1H|-- ConfigureMake
[42;1H|   |-- CMakeMake
[43;1H|   |   |-- CMakePythonPackage
[44;1H|   |   |   |-- EB_DOLFIN
[45;1H|   |   |   |-- EB_UFC
[46;1H|   |   |-- EB_Armadillo
[47;1H|   |   |-- EB_BamTools
[48;1H|   |   |-- EB_CGAL
[49;1H...skipping...
|   |-- EB_[7mflex[27m
|   |-- EB_freetype
|   |-- EB_g2clib
|   |-- EB_g2lib
|   |-- EB_GCC
|   |   |-- SystemCompiler
|   |-- EB_GHC
|   |-- EB_Go
|   |-- EB_HDF5
|   |-- EB_HEALPix
|   |-- EB_HPCG
|   |-- EB_HPL
|   |-- EB_Hypre
|   |-- EB_LAPACK
|   |-- EB_Libint
|   |-- EB_libQGLViewer
|   |-- EB_libxml2
|   |-- EB_MetaVelvet
|   |-- EB_METIS
|   |-- EB_Molpro
|   |-- EB_Mono
|   |-- EB_Mothur
|   |-- EB_MPICH
|   |   |-- EB_MVAPICH2
|   |   |-- EB_psmpi
|   |-- EB_MrBayes
|   |-- EB_MUMmer
|   |-- EB_MUMPS
|   |-- EB_MyMediaLite
|   |-- EB_ncurses
|   |-- EB_netCDF_minus_Fortran
|   |-- EB_NEURON
|   |-- EB_NWChem
|   |-- EB_OCaml
|   |-- EB_Octave
|   |-- EB_OpenSSL
|   |-- EB_Paraver
|   |-- EB_Pasha
|   |-- EB_PDT
|   |-- EB_Perl
|   |-- EB_PETSc
|   |-- EB_pplacer
|   |-- EB_Primer3
|   |-- EB_Python
|   |   |-- EB_Tkinter
|   |-- EB_QScintilla
|   |-- EB_Qt
|   |-- EB_QuantumESPRESSO
:[K[K/[K[K[7mPattern not found  (press RETURN)[27m[49;1H[K[K/[K[K[7mPattern not found  (press RETURN)[27m[49;1H[K[K[?1l>[?1049l]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --list-easyblocks | less[K[4Phelp | less
[?1049h[?1h=Usage: eb [options] easyconfig [...]

Builds software based on easyconfig (or parse a directory). Provide one or more easyconfigs or
directories, use -H or --help more information.

Options:
  --version             show program's version number and exit
  -h, --shorthelp       show short help message and exit
  -H OUTPUT_FORMAT, --help=OUTPUT_FORMAT
                        show full help message and exit
  --confighelp          show help as annotated configfile

  Debug and logging options (configfile section MAIN):
    -d, --debug         Enable debug log mode (def False)
    --info              Enable info log mode (def False)
    --quiet             Enable quiet/warning log mode (def False)

  Configfile options:
    --configfiles=CONFIGFILES
                        Parse (additional) configfiles (type comma-separated list; def
                        /home/romain.pereira/.config/easybuild/config.cfg)
    --ignoreconfigfiles=IGNORECONFIGFILES
                        Ignore configfiles (type comma-separated list)

  Basic options:
    Basic runtime options for EasyBuild. (configfile section basic)

    --dry-run           Print build overview incl. dependencies (full paths) (def False)
    -D, --dry-run-short
                        Print build overview incl. dependencies (short paths) (def False)
    -x, --extended-dry-run
                        Print build environment and (expected) build procedure that will be
                        performed (def False)
    --extended-dry-run-ignore-errors
                        Ignore errors that occur during dry run (def True)
    -f, --force         Force to rebuild software even if it's already installed (i.e. if it can
                        be found as module), and skipping check for OS dependencies (def False)
    --job               Submit the build as a job (def False)
    -l, --logtostdout   Redirect main log to stdout (def False)
    -b BLOCKS, --only-blocks=BLOCKS
                        Only build listed blocks (type comma-separated list)
    --rebuild           Rebuild software, even if module already exists (don't skip OS
                        dependencies checks) (def False)
    -r PATH[:PATH], --robot=PATH[:PATH]
                        Enable dependency resolution, using easyconfigs in specified paths (type
                        pathsep-separated list; def )
    --robot-paths=PATH[:PATH]
                        Additional paths to consider by robot for easyconfigs (--robot paths get
:[K[K/[Kee[Kaa[Kss[Kyy[Kbb[Kll[Koo[Kcc[Kkk[K[1;1HUsage: eb [options] easyconfig [...]
[2;1H
[3;1HBuilds software based on easyconfig (or parse a directory). Provide one or more easyconfigs or
[4;1Hdirectories, use -H or --help more information.
[5;1H
[6;1HOptions:
[7;1H  --version             show program's version number and exit
[8;1H  -h, --shorthelp       show short help message and exit
[9;1H  -H OUTPUT_FORMAT, --help=OUTPUT_FORMAT
[10;1H                        show full help message and exit
[11;1H  --confighelp          show help as annotated configfile
[12;1H
[13;1H  Debug and logging options (configfile section MAIN):
[14;1H    -d, --debug         Enable debug log mode (def False)
[15;1H    --info              Enable info log mode (def False)
[16;1H    --quiet             Enable quiet/warning log mode (def False)
[17;1H
[18;1H  Configfile options:
[19;1H    --configfiles=CONFIGFILES
[20;1H                        Parse (additional) configfiles (type comma-separated list; def
[21;1H                        /home/romain.pereira/.config/easybuild/config.cfg)
[22;1H    --ignoreconfigfiles=IGNORECONFIGFILES
[23;1H                        Ignore configfiles (type comma-separated list)
[24;1H
[25;1H  Basic options:
[26;1H    Basic runtime options for EasyBuild. (configfile section basic)
[27;1H
[28;1H    --dry-run           Print build overview incl. dependencies (full paths) (def False)
[29;1H    -D, --dry-run-short
[30;1H                        Print build overview incl. dependencies (short paths) (def False)
[31;1H    -x, --extended-dry-run
[32;1H                        Print build environment and (expected) build procedure that will be
[33;1H                        performed (def False)
[34;1H    --extended-dry-run-ignore-errors
[35;1H                        Ignore errors that occur during dry run (def True)
[36;1H    -f, --force         Force to rebuild software even if it's already installed (i.e. if it can
[37;1H                        be found as module), and skipping check for OS dependencies (def False)
[38;1H    --job               Submit the build as a job (def False)
[39;1H    -l, --logtostdout   Redirect main log to stdout (def False)
[40;1H    -b BLOCKS, --only-blocks=BLOCKS
[41;1H                        Only build listed blocks (type comma-separated list)
[42;1H    --rebuild           Rebuild software, even if module already exists (don't skip OS
[43;1H                        dependencies checks) (def False)
[44;1H    -r PATH[:PATH], --robot=PATH[:PATH]
[45;1H                        Enable dependency resolution, using easyconfigs in specified paths (type
[46;1H                        pathsep-separated list; def )
[47;1H    --robot-paths=PATH[:PATH]
[48;1H                        Additional paths to consider by robot for easyconfigs (--robot paths get
[49;1H[1;1HUsage: eb [options] easyconfig [...]
[2;1H
[3;1HBuilds software based on easyconfig (or parse a directory). Provide one or more easyconfigs or
[4;1Hdirectories, use -H or --help more information.
[5;1H
[6;1HOptions:
[7;1H  --version             show program's version number and exit
[8;1H  -h, --shorthelp       show short help message and exit
[9;1H  -H OUTPUT_FORMAT, --help=OUTPUT_FORMAT
[10;1H                        show full help message and exit
[11;1H  --confighelp          show help as annotated configfile
[12;1H
[13;1H  Debug and logging options (configfile section MAIN):
[14;1H    -d, --debug         Enable debug log mode (def False)
[15;1H    --info              Enable info log mode (def False)
[16;1H    --quiet             Enable quiet/warning log mode (def False)
[17;1H
[18;1H  Configfile options:
[19;1H    --configfiles=CONFIGFILES
[20;1H                        Parse (additional) configfiles (type comma-separated list; def
[21;1H                        /home/romain.pereira/.config/easybuild/config.cfg)
[22;1H    --ignoreconfigfiles=IGNORECONFIGFILES
[23;1H                        Ignore configfiles (type comma-separated list)
[24;1H
[25;1H  Basic options:
[26;1H    Basic runtime options for EasyBuild. (configfile section basic)
[27;1H
[28;1H    --dry-run           Print build overview incl. dependencies (full paths) (def False)
[29;1H    -D, --dry-run-short
[30;1H                        Print build overview incl. dependencies (short paths) (def False)
[31;1H    -x, --extended-dry-run
[32;1H                        Print build environment and (expected) build procedure that will be
[33;1H                        performed (def False)
[34;1H    --extended-dry-run-ignore-errors
[35;1H                        Ignore errors that occur during dry run (def True)
[36;1H    -f, --force         Force to rebuild software even if it's already installed (i.e. if it can
[37;1H                        be found as module), and skipping check for OS dependencies (def False)
[38;1H    --job               Submit the build as a job (def False)
[39;1H    -l, --logtostdout   Redirect main log to stdout (def False)
[40;1H    -b BLOCKS, --only-blocks=BLOCKS
[41;1H                        Only build listed blocks (type comma-separated list)
[42;1H    --rebuild           Rebuild software, even if module already exists (don't skip OS
[43;1H                        dependencies checks) (def False)
[44;1H    -r PATH[:PATH], --robot=PATH[:PATH]
[45;1H                        Enable dependency resolution, using easyconfigs in specified paths (type
[46;1H                        pathsep-separated list; def )
[47;1H    --robot-paths=PATH[:PATH]
[48;1H                        Additional paths to consider by robot for easyconfigs (--robot paths get
[49;1H...skipping...
    --include-[7measyblock[27ms=INCLUDE-EASYBLOCKS
                        Location(s) of extra or customized [7measyblock[27ms (type comma-separated
                        list; def )
    --include-module-naming-schemes=INCLUDE-MODULE-NAMING-SCHEMES
                        Location(s) of extra or customized module naming schemes (type comma-
                        separated list; def )
    --include-toolchains=INCLUDE-TOOLCHAINS
                        Location(s) of extra or customized toolchains or toolchain components
                        (type comma-separated list; def )
    --installpath=INSTALLPATH
                        Install path for software and modules (def
                        /home/romain.pereira/.local/easybuild)
    --installpath-modules=INSTALLPATH-MODULES
                        Install path for modules (if None, combine --installpath and --subdir-
                        modules)
    --installpath-software=INSTALLPATH-SOFTWARE
                        Install path for software (if None, combine --installpath and --subdir-
                        software)
    --job-backend=JOB-BACKEND
                        Backend to use for submitting jobs (type choice; def GC3Pie) (choices:
                        GC3Pie, PbsPython, Slurm)
    --logfile-format=DIR,FORMAT
                        Directory name and format of the log file (type comma-separated tuple;
                        def easybuild,easybuild-%(name)s-%(version)s-%(date)s.%(time)s.log)
    --module-depends-on
                        Use depends_on (Lmod 7.6.1+) for dependencies in all generated modules
                        (implies recursive unloading of modules). (def False)
    --module-naming-scheme=MODULE-NAMING-SCHEME
                        Module naming scheme to use (def EasyBuildMNS)
    --module-syntax=MODULE-SYNTAX
                        Syntax to be used for module files (type choice; def Lua) (choices: Lua,
                        Tcl)
    --moduleclasses=MODULECLASSES
                        Extend supported module classes (For more info on the default classes,
                        use --show-default-moduleclasses) (type comma-separated list; def base,a
                        stro,bio,cae,chem,compiler,data,debugger,devel,geo,ide,lang,lib,math,mpi
                        ,numlib,perf,quantum,phys,system,toolchain,tools,vis)
    --modules-footer=PATH
                        Path to file containing footer to be added to all generated module files
    --modules-header=PATH
                        Path to file containing header to be added to all generated module files
    --modules-tool=MODULES-TOOL
                        Modules tool to use (type choice; def Lmod) (choices:
                        EnvironmentModules, EnvironmentModulesC, EnvironmentModulesTcl, Lmod)
    --package-naming-scheme=PACKAGE-NAMING-SCHEME
                        Packaging naming scheme choice (type choice; def EasyBuildPNS) (choices:
                        EasyBuildPNS)
    --packagepath=PACKAGEPATH
:[K[K/[K                        The destination path for the packages built by package-tool (def
:[K[K/[K...skipping...
                        Show all easyconfig parameters (include [7measyblock[27m-specific ones by using
                        -e) (def False)
    --avail-easyconfig-templates
                        Show all template names and template constants that can be used in
                        easyconfigs. (def False)
    --avail-hooks       Show list of known hooks (def False)
    --avail-toolchain-opts=AVAIL-TOOLCHAIN-OPTS
                        Show options for toolchain (type str)
    --check-conflicts   Check for version conflicts in dependency graphs (def False)
    --dep-graph=depgraph.<ext>
                        Create dependency graph
    --dump-env-script   Dump source script to set up build environment based on
                        toolchain/dependencies (def False)
    --last-log          Print location to EasyBuild log file of last (failed) session (def
                        False)
    --list-[7measyblock[27ms=LIST-EASYBLOCKS
                        Show list of available [7measyblock[27ms (type choice; def simple) (choices:
                        simple, detailed)
    --list-installed-software=LIST-INSTALLED-SOFTWARE
                        Show list of installed software (type choice; def simple) (choices:
                        simple, detailed)
    --list-software=LIST-SOFTWARE
                        Show list of supported software (type choice; def simple) (choices:
                        simple, detailed)
    --list-toolchains   Show list of known toolchains (def False)
    --search=REGEX      Search for easyconfig files in the robot search path, print full paths
    --search-filename=REGEX
                        Search for easyconfig files in the robot search path, print only
                        filenames
    -S REGEX, --search-short=REGEX
                        Search for easyconfig files in the robot search path, print short paths
    --show-config       Show current EasyBuild configuration (only non-default + selected
                        settings) (def False)
    --show-default-configfiles
                        Show list of default config files (def False)
    --show-default-moduleclasses
                        Show default module classes with description (def False)
    --show-full-config  Show current EasyBuild configuration (all settings) (def False)
    --show-system-info  Show system information relevant to EasyBuild (def False)
    --terse             Terse output (machine-readable) (def False)

  Options for job backend:
    Options for job backend (only relevant when --job is used) (configfile section job)

    --job-backend-config=BACKEND-CONFIG
                        Configuration file for job backend
    --job-cores=CORES   Number of cores to request per job (type int)
    --job-deps-type=DEPS-TYPE
:[K[K/[K                        Type of dependency to set between jobs (default depends on job backend)
                        (type choice) (choices: abort_on_error, always_run)
    --job-max-jobs=MAX-JOBS
                        Maximum number of concurrent jobs (queued and running, 0 = unlimited)
                        (type int; def 0)
    --job-max-walltime=MAX-WALLTIME
                        Maximum walltime for jobs (in hours) (type int; def 24)
    --job-output-dir=OUTPUT-DIR
                        Output directory for jobs (default: current directory) (def
                        /home/romain.pereira)
    --job-polling-interval=POLLING-INTERVAL
                        Interval between polls for status of jobs (in seconds) (type <type
                        'float'>; def 30.0)
    --job-target-resource=TARGET-RESOURCE
                        Target resource for jobs
:[K[K/[K
:[K[K/[K...skipping...
    -e CLASS, --[7measyblock[27m=CLASS
                        [7measyblock[27m to use for processing the spec file or dumping the options
    --enforce-checksums
                        Enforce availability of checksums for all sources/patches, so they can
                        be verified (def False)
    --experimental      Allow experimental code (with behaviour that can be changed/removed at
                        any given time). (def False)
    --extra-modules=EXTRA-MODULES
                        List of extra modules to load after setting up the build environment
                        (type comma-separated list)
    --fetch             Allow downloading sources ignoring OS and modules tool dependencies,
                        implies --stop=fetch, --ignore-osdeps and ignore modules tool (def
                        False)
    --filter-deps=FILTER-DEPS
                        List of dependencies that you do *not* want to install with EasyBuild,
                        because equivalent OS packages are installed. (e.g. --filter-
                        deps=zlib,ncurses) (type comma-separated list)
    --filter-env-vars=FILTER-ENV-VARS
                        List of names of environment variables that should *not* be
                        defined/updated by module files generated by EasyBuild (type comma-
                        separated list)
    --fixed-installdir-naming-scheme
                        Use fixed naming scheme for installation directories (def False)
    --force-download=FORCE-DOWNLOAD
                        Force re-downloading of sources and/or patches, even if they are
                        available already in source path (type choice; def sources) (choices:
                        all, patches, sources)
    --group=GROUP       Group to be used for software installations (only verified, not set)
    --group-writable-installdir
                        Enable group write permissions on installation directory after
                        installation (def False)
    --hidden            Install 'hidden' module file(s) by prefixing their version with '.' (def
                        False)
    --hide-deps=HIDE-DEPS
                        Comma separated list of dependencies that you want automatically hidden,
                        (e.g. --hide-deps=zlib,ncurses) (type comma-separated list)
    --hide-toolchains=HIDE-TOOLCHAINS
                        Comma separated list of toolchains that you want automatically hidden,
                        (e.g. --hide-toolchains=GCCcore) (type comma-separated list)
    --ignore-checksums  Ignore failing checksum verification (def False)
    --ignore-osdeps     Ignore any listed OS dependencies (def False)
    --install-latest-eb-release
                        Install latest known version of easybuild (def False)
    --lib64-fallback-sanity-check
                        Fallback in sanity check to lib64/ equivalent for missing libraries (def
                        True)
    --max-fail-ratio-adjust-permissions=MAX-FAIL-RATIO-ADJUST-PERMISSIONS
                        Maximum ratio for failures to allow when adjusting permissions (type
:[K[K/[K                        float; def 0.5)
:[K[K/[K[K[7mPattern not found  (press RETURN)[27m[49;1H[K[K/[K[K[7mPattern not found  (press RETURN)[27m[49;1H[K[K[?1l>[?1049l]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --help | less[11@list-easyblocks[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K=[Ks=detailed
EasyBlock (easybuild.framework.easyblock)
|-- Binary (easybuild.easyblocks.generic.binary @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/binary.py)
|   |-- Conda (easybuild.easyblocks.generic.conda @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/conda.py)
|   |-- EB_ABAQUS (easybuild.easyblocks.abaqus @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a/abaqus.py)
|   |-- EB_Allinea (easybuild.easyblocks.allinea @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a/allinea.py)
|   |-- EB_Anaconda (easybuild.easyblocks.anaconda @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a/anaconda.py)
|   |-- EB_CPLEX (easybuild.easyblocks.cplex @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/cplex.py)
|   |-- EB_CUDA (easybuild.easyblocks.cuda @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/cuda.py)
|   |-- EB_EPD (easybuild.easyblocks.epd @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/e/epd.py)
|   |-- EB_IMOD (easybuild.easyblocks.imod @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/i/imod.py)
|   |-- EB_Maple (easybuild.easyblocks.maple @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/maple.py)
|   |-- EB_Mathematica (easybuild.easyblocks.mathematica @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/mathematica.py)
|   |-- EB_Molpro (easybuild.easyblocks.molpro @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/molpro.py)
|   |-- JAR (easybuild.easyblocks.generic.jar @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/jar.py)
|   |-- PackedBinary (easybuild.easyblocks.generic.packedbinary @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/packedbinary.py)
|   |   |-- EB_ANSYS (easybuild.easyblocks.ansys @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a/ansys.py)
|   |   |-- EB_ant (easybuild.easyblocks.ant @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a/ant.py)
|   |   |-- EB_BiSearch (easybuild.easyblocks.bisearch @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/b/bisearch.py)
|   |   |-- EB_Chimera (easybuild.easyblocks.chimera @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/chimera.py)
|   |   |-- EB_COMSOL (easybuild.easyblocks.comsol @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/comsol.py)
|   |   |-- EB_FDTD_underscore_Solutions (easybuild.easyblocks.fdtd_solutions @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/f/fdtd_solutions.py)
|   |   |-- EB_FLUENT (easybuild.easyblocks.fluent @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/f/fluent.py)
|   |   |-- EB_IronPython (easybuild.easyblocks.ironpython @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/i/ironpython.py)
|   |   |-- EB_Java (easybuild.easyblocks.java @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/j/java.py)
|   |   |-- EB_MATLAB (easybuild.easyblocks.matlab @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/matlab.py)
|   |   |-- EB_MCR (easybuild.easyblocks.mcr @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/mcr.py)
|   |   |-- EB_PGI (easybuild.easyblocks.pgi @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/p/pgi.py)
|   |   |-- EB_Samcef (easybuild.easyblocks.samcef @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/s/samcef.py)
|   |   |-- EB_Stata (easybuild.easyblocks.stata @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/s/stata.py)
|   |   |-- EB_Tornado (easybuild.easyblocks.tornado @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/t/tornado.py)
|   |   |-- EB_TotalView (easybuild.easyblocks.totalview @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/t/totalview.py)
|   |-- Rpm (easybuild.easyblocks.generic.rpm @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/rpm.py)
|   |   |-- EB_Mono (easybuild.easyblocks.mono @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/mono.py)
|-- Bundle (easybuild.easyblocks.generic.bundle @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/bundle.py)
|   |-- BuildEnv (easybuild.easyblocks.generic.buildenv @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/buildenv.py)
|   |-- CrayToolchain (easybuild.easyblocks.generic.craytoolchain @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/craytoolchain.py)
|   |-- PythonBundle (easybuild.easyblocks.generic.pythonbundle @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/pythonbundle.py)
|   |-- SystemCompiler (easybuild.easyblocks.generic.systemcompiler @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/systemcompiler.py)
|   |-- SystemMPI (easybuild.easyblocks.generic.systemmpi @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/systemmpi.py)
|   |-- Toolchain (easybuild.easyblocks.generic.toolchain @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/toolchain.py)
|-- ConfigureMake (easybuild.easyblocks.generic.configuremake @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/configuremake.py)
|   |-- CMakeMake (easybuild.easyblocks.generic.cmakemake @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/cmakemake.py)
|   |   |-- CMakePythonPackage (easybuild.easyblocks.generic.cmakepythonpackage @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/cmakepythonpackage.py)
|   |   |   |-- EB_DOLFIN (easybuild.easyblocks.dolfin @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/d/dolfin.py)
|   |   |   |-- EB_UFC (easybuild.easyblocks.ufc @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/u/ufc.py)
|   |   |-- EB_Armadillo (easybuild.easyblocks.armadillo @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a/armadillo.py)
|   |   |-- EB_BamTools (easybuild.easyblocks.bamtools @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/b/bamtools.py)
|   |   |-- EB_CGAL (easybuild.easyblocks.cgal @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/cgal.py)
|   |   |-- EB_Clang (easybuild.easyblocks.clang @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/clang.py)
|   |   |-- EB_DIRAC (easybuild.easyblocks.dirac @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/d/dirac.py)
|   |   |-- EB_Doxygen (easybuild.easyblocks.doxygen @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/d/doxygen.py)
|   |   |-- EB_Eigen (easybuild.easyblocks.eigen @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/e/eigen.py)
|   |   |-- EB_GATE (easybuild.easyblocks.gate @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/g/gate.py)
|   |   |-- EB_Geant4 (easybuild.easyblocks.geant4 @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/g/geant4.py)
|   |   |-- EB_GROMACS (easybuild.easyblocks.gromacs @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/g/gromacs.py)
|   |   |-- EB_netCDF (easybuild.easyblocks.netcdf @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/n/netcdf.py)
|   |   |-- EB_OpenBabel (easybuild.easyblocks.openbabel @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/o/openbabel.py)
|   |   |-- EB_OpenCV (easybuild.easyblocks.opencv @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/o/opencv.py)
|   |   |-- EB_PSI (easybuild.easyblocks.psi @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/p/psi.py)
|   |   |-- EB_ROOT (easybuild.easyblocks.root @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/r/root.py)
|   |   |-- EB_SuperLU (easybuild.easyblocks.superlu @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/s/superlu.py)
|   |   |-- EB_Trilinos (easybuild.easyblocks.trilinos @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/t/trilinos.py)
|   |-- ConfigureMakePythonPackage (easybuild.easyblocks.generic.configuremakepythonpackage @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/configuremakepythonpackage.py)
|   |-- EB_Amber (easybuild.easyblocks.amber @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a/amber.py)
|   |-- EB_ARB (easybuild.easyblocks.arb @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a/arb.py)
|   |-- EB_ATLAS (easybuild.easyblocks.atlas @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a/atlas.py)
|   |-- EB_binutils (easybuild.easyblocks.binutils @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/b/binutils.py)
|   |-- EB_BLACS (easybuild.easyblocks.blacs @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/b/blacs.py)
|   |-- EB_Bowtie (easybuild.easyblocks.bowtie @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/b/bowtie.py)
|   |-- EB_BWA (easybuild.easyblocks.bwa @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/b/bwa.py)
|   |-- EB_bzip2 (easybuild.easyblocks.bzip2 @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/b/bzip2.py)
|   |-- EB_CBLAS (easybuild.easyblocks.cblas @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/cblas.py)
|   |-- EB_Chapel (easybuild.easyblocks.chapel @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/chapel.py)
|   |-- EB_cppcheck (easybuild.easyblocks.cppcheck @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/cppcheck.py)
|   |-- EB_Cufflinks (easybuild.easyblocks.cufflinks @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/cufflinks.py)
|   |-- EB_DB (easybuild.easyblocks.db @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/d/db.py)
|   |-- EB_DL_underscore_POLY_underscore_Classic (easybuild.easyblocks.dl_poly_classic @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/d/dl_poly_classic.py)
|   |-- EB_Doris (easybuild.easyblocks.doris @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/d/doris.py)
|   |-- EB_EggLib (easybuild.easyblocks.egglib @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/e/egglib.py)
|   |-- EB_ESMF (easybuild.easyblocks.esmf @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/e/esmf.py)
|   |-- EB_ESPResSo (easybuild.easyblocks.espresso @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/e/espresso.py)
|   |-- EB_Extrae (easybuild.easyblocks.extrae @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/e/extrae.py)
|   |-- EB_Ferret (easybuild.easyblocks.ferret @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/f/ferret.py)
|   |-- EB_FFTW (easybuild.easyblocks.fftw @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/f/fftw.py)
|   |-- EB_flex (easybuild.easyblocks.flex @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/f/flex.py)
|   |-- EB_freetype (easybuild.easyblocks.freetype @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/f/freetype.py)
|   |-- EB_g2clib (easybuild.easyblocks.g2clib @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/g/g2clib.py)
|   |-- EB_g2lib (easybuild.easyblocks.g2lib @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/g/g2lib.py)
|   |-- EB_GCC (easybuild.easyblocks.gcc @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/g/gcc.py)
|   |   |-- SystemCompiler (easybuild.easyblocks.generic.systemcompiler @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/systemcompiler.py)
|   |-- EB_GHC (easybuild.easyblocks.ghc @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/g/ghc.py)
|   |-- EB_Go (easybuild.easyblocks.go @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/g/go.py)
|   |-- EB_HDF5 (easybuild.easyblocks.hdf5 @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/h/hdf5.py)
|   |-- EB_HEALPix (easybuild.easyblocks.healpix @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/h/healpix.py)
|   |-- EB_HPCG (easybuild.easyblocks.hpcg @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/h/hpcg.py)
|   |-- EB_HPL (easybuild.easyblocks.hpl @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/h/hpl.py)
|   |-- EB_Hypre (easybuild.easyblocks.hypre @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/h/hypre.py)
|   |-- EB_LAPACK (easybuild.easyblocks.lapack @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/l/lapack.py)
|   |-- EB_Libint (easybuild.easyblocks.libint @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/l/libint.py)
|   |-- EB_libQGLViewer (easybuild.easyblocks.libqglviewer @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/l/libqglviewer.py)
|   |-- EB_libxml2 (easybuild.easyblocks.libxml2 @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/l/libxml2.py)
|   |-- EB_MetaVelvet (easybuild.easyblocks.metavelvet @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/metavelvet.py)
|   |-- EB_METIS (easybuild.easyblocks.metis @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/metis.py)
|   |-- EB_Molpro (easybuild.easyblocks.molpro @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/molpro.py)
|   |-- EB_Mono (easybuild.easyblocks.mono @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/mono.py)
|   |-- EB_Mothur (easybuild.easyblocks.mothur @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/mothur.py)
|   |-- EB_MPICH (easybuild.easyblocks.mpich @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/mpich.py)
|   |   |-- EB_MVAPICH2 (easybuild.easyblocks.mvapich2 @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/mvapich2.py)
|   |   |-- EB_psmpi (easybuild.easyblocks.psmpi @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/p/psmpi.py)
|   |-- EB_MrBayes (easybuild.easyblocks.mrbayes @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/mrbayes.py)
|   |-- EB_MUMmer (easybuild.easyblocks.mummer @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/mummer.py)
|   |-- EB_MUMPS (easybuild.easyblocks.mumps @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/mumps.py)
|   |-- EB_MyMediaLite (easybuild.easyblocks.mymedialite @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/mymedialite.py)
|   |-- EB_ncurses (easybuild.easyblocks.ncurses @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/n/ncurses.py)
|   |-- EB_netCDF_minus_Fortran (easybuild.easyblocks.netcdf_fortran @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/n/netcdf_fortran.py)
|   |-- EB_NEURON (easybuild.easyblocks.neuron @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/n/neuron.py)
|   |-- EB_NWChem (easybuild.easyblocks.nwchem @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/n/nwchem.py)
|   |-- EB_OCaml (easybuild.easyblocks.ocaml @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/o/ocaml.py)
|   |-- EB_Octave (easybuild.easyblocks.octave @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/o/octave.py)
|   |-- EB_OpenSSL (easybuild.easyblocks.openssl @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/o/openssl.py)
|   |-- EB_Paraver (easybuild.easyblocks.paraver @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/p/paraver.py)
|   |-- EB_Pasha (easybuild.easyblocks.pasha @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/p/pasha.py)
|   |-- EB_PDT (easybuild.easyblocks.pdt @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/p/pdt.py)
|   |-- EB_Perl (easybuild.easyblocks.perl @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/p/perl.py)
|   |-- EB_PETSc (easybuild.easyblocks.petsc @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/p/petsc.py)
|   |-- EB_pplacer (easybuild.easyblocks.pplacer @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/p/pplacer.py)
|   |-- EB_Primer3 (easybuild.easyblocks.primer3 @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/p/primer3.py)
|   |-- EB_Python (easybuild.easyblocks.python @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/p/python.py)
|   |   |-- EB_Tkinter (easybuild.easyblocks.tkinter @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/t/tkinter.py)
|   |-- EB_QScintilla (easybuild.easyblocks.qscintilla @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/q/qscintilla.py)
|   |-- EB_Qt (easybuild.easyblocks.qt @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/q/qt.py)
|   |-- EB_QuantumESPRESSO (easybuild.easyblocks.quantumespresso @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/q/quantumespresso.py)
|   |-- EB_R (easybuild.easyblocks.r.r )
|   |-- EB_Ruby (easybuild.easyblocks.ruby @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/r/ruby.py)
|   |-- EB_SAMtools (easybuild.easyblocks.samtools @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/s/samtools.py)
|   |-- EB_ScaLAPACK (easybuild.easyblocks.scalapack @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/s/scalapack.py)
|   |-- EB_Scalasca1 (easybuild.easyblocks.scalasca1 @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/s/scalasca1.py)
|   |-- EB_Score_minus_P (easybuild.easyblocks.score_p @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/s/score_p.py)
|   |-- EB_SHRiMP (easybuild.easyblocks.shrimp @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/s/shrimp.py)
|   |-- EB_Siesta (easybuild.easyblocks.siesta @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/s/siesta.py)
|   |-- EB_SLEPc (easybuild.easyblocks.slepc @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/s/slepc.py)
|   |-- EB_SOAPdenovo (easybuild.easyblocks.soapdenovo @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/s/soapdenovo.py)
|   |-- EB_SuiteSparse (easybuild.easyblocks.suitesparse @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/s/suitesparse.py)
|   |-- EB_SWIG (easybuild.easyblocks.swig @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/s/swig.py)
|   |-- EB_TAU (easybuild.easyblocks.tau @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/t/tau.py)
|   |-- EB_tbb (easybuild.easyblocks.tbb @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/t/tbb.py)
|   |-- EB_tbb (easybuild.easyblocks.tbb @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/t/tbb.py)
|   |-- EB_Velvet (easybuild.easyblocks.velvet @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/v/velvet.py)
|   |-- EB_VMD (easybuild.easyblocks.vmd @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/v/vmd.py)
|   |-- EB_XCrySDen (easybuild.easyblocks.xcrysden @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/x/xcrysden.py)
|   |-- MakeCp (easybuild.easyblocks.generic.makecp @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/makecp.py)
|   |   |-- CmdCp (easybuild.easyblocks.generic.cmdcp @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/cmdcp.py)
|   |   |   |-- EB_fastStructure (easybuild.easyblocks.faststructure @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/f/faststructure.py)
|   |   |-- EB_BamTools (easybuild.easyblocks.bamtools @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/b/bamtools.py)
|   |   |-- EB_BLAT (easybuild.easyblocks.blat @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/b/blat.py)
|   |   |-- EB_Bowtie2 (easybuild.easyblocks.bowtie2 @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/b/bowtie2.py)
|   |   |-- EB_BWISE (easybuild.easyblocks.bwise @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/b/bwise.py)
|   |   |-- EB_mutil (easybuild.easyblocks.mutil @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/mutil.py)
|   |   |-- EB_MXNet (easybuild.easyblocks.mxnet @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/mxnet.py)
|   |   |-- EB_NAMD (easybuild.easyblocks.namd @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/n/namd.py)
|   |-- PerlModule (easybuild.easyblocks.generic.perlmodule @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/perlmodule.py)
|   |-- SystemMPI (easybuild.easyblocks.generic.systemmpi @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/systemmpi.py)
|-- EB_ACML (easybuild.easyblocks.acml @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a/acml.py)
|-- EB_ADF (easybuild.easyblocks.adf @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a/adf.py)
|-- EB_ALADIN (easybuild.easyblocks.aladin @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a/aladin.py)
|-- EB_Bazel (easybuild.easyblocks.bazel @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/b/bazel.py)
|-- EB_Boost (easybuild.easyblocks.boost @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/b/boost.py)
|-- EB_CHARMM (easybuild.easyblocks.charmm @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/charmm.py)
|-- EB_CP2K (easybuild.easyblocks.cp2k @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/cp2k.py)
|-- EB_FSL (easybuild.easyblocks.fsl @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/f/fsl.py)
|-- EB_GAMESS_minus_US (easybuild.easyblocks.gamess_us @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/g/gamess_us.py)
|-- EB_libsmm (easybuild.easyblocks.libsmm @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/l/libsmm.py)
|-- EB_Modeller (easybuild.easyblocks.modeller @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/modeller.py)
|-- EB_MRtrix (easybuild.easyblocks.mrtrix @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/mrtrix.py)
|-- EB_NCL (easybuild.easyblocks.ncl @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/n/ncl.py)
|-- EB_NEMO (easybuild.easyblocks.nemo @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/n/nemo.py)
|-- EB_Nim (easybuild.easyblocks.nim @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/n/nim.py)
|-- EB_OpenFOAM (easybuild.easyblocks.openfoam @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/o/openfoam.py)
|-- EB_OpenIFS (easybuild.easyblocks.openifs @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/o/openifs.py)
|-- EB_ParMETIS (easybuild.easyblocks.parmetis @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/p/parmetis.py)
|-- EB_Rosetta (easybuild.easyblocks.rosetta @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/r/rosetta.py)
|-- EB_SAS (easybuild.easyblocks.sas @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/s/sas.py)
|-- EB_SCOTCH (easybuild.easyblocks.scotch @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/s/scotch.py)
|-- EB_SNPhylo (easybuild.easyblocks.snphylo @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/s/snphylo.py)
|-- EB_TINKER (easybuild.easyblocks.tinker @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/t/tinker.py)
|-- EB_Trinity (easybuild.easyblocks.trinity @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/t/trinity.py)
|-- EB_VEP (easybuild.easyblocks.vep @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/v/vep.py)
|-- EB_WIEN2k (easybuild.easyblocks.wien2k @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/w/wien2k.py)
|-- EB_WPS (easybuild.easyblocks.wps @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/w/wps.py)
|-- EB_WRF (easybuild.easyblocks.wrf @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/w/wrf.py)
|-- EB_WRF_minus_Fire (easybuild.easyblocks.wrf_fire @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/w/wrf_fire.py)
|-- EB_Xmipp (easybuild.easyblocks.xmipp @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/x/xmipp.py)
|-- ExtensionEasyBlock (easybuild.framework.extensioneasyblock )
|   |-- OCamlPackage (easybuild.easyblocks.generic.ocamlpackage @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/ocamlpackage.py)
|   |-- OctavePackage (easybuild.easyblocks.generic.octavepackage @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/octavepackage.py)
|   |-- PerlModule (easybuild.easyblocks.generic.perlmodule @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/perlmodule.py)
|   |-- PythonPackage (easybuild.easyblocks.generic.pythonpackage @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/pythonpackage.py)
|   |   |-- CMakePythonPackage (easybuild.easyblocks.generic.cmakepythonpackage @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/cmakepythonpackage.py)
|   |   |   |-- EB_DOLFIN (easybuild.easyblocks.dolfin @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/d/dolfin.py)
|   |   |   |-- EB_UFC (easybuild.easyblocks.ufc @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/u/ufc.py)
|   |   |-- ConfigureMakePythonPackage (easybuild.easyblocks.generic.configuremakepythonpackage @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/configuremakepythonpackage.py)
|   |   |-- EB_EasyBuildMeta (easybuild.easyblocks.easybuildmeta @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/e/easybuildmeta.py)
|   |   |-- EB_EggLib (easybuild.easyblocks.egglib @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/e/egglib.py)
|   |   |-- EB_libxml2 (easybuild.easyblocks.libxml2 @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/l/libxml2.py)
|   |   |-- EB_netcdf4_minus_python (easybuild.easyblocks.netcdf4_python @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/n/netcdf4_python.py)
|   |   |-- EB_nose (easybuild.easyblocks.nose @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/n/nose.py)
|   |   |-- EB_PyQuante (easybuild.easyblocks.pyquante @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/p/pyquante.py)
|   |   |-- EB_python_minus_meep (easybuild.easyblocks.python_meep @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/p/python_meep.py)
|   |   |-- EB_PyZMQ (easybuild.easyblocks.pyzmq @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/p/pyzmq.py)
|   |   |-- EB_TensorFlow (easybuild.easyblocks.tensorflow @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/t/tensorflow.py)
|   |   |-- EB_VSC_minus_tools (easybuild.easyblocks.vsc_tools @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/v/vsc_tools.py)
|   |   |-- EB_wxPython (easybuild.easyblocks.wxpython @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/w/wxpython.py)
|   |   |-- FortranPythonPackage (easybuild.easyblocks.generic.fortranpythonpackage @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/fortranpythonpackage.py)
|   |   |   |-- EB_numpy (easybuild.easyblocks.numpy @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/n/numpy.py)
|   |   |   |-- EB_scipy (easybuild.easyblocks.scipy @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/s/scipy.py)
|   |   |-- VersionIndependentPythonPackage (easybuild.easyblocks.generic.versionindependentpythonpackage @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/versionindependentpythonpackage.py)
|   |   |   |-- VSCPythonPackage (easybuild.easyblocks.generic.vscpythonpackage @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/vscpythonpackage.py)
|   |-- RPackage (easybuild.easyblocks.generic.rpackage @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/rpackage.py)
|   |   |-- EB_Bioconductor (easybuild.easyblocks.bioconductor @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/b/bioconductor.py)
|   |   |-- EB_pbdMPI (easybuild.easyblocks.pbdmpi @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/p/pbdmpi.py)
|   |   |-- EB_pbdSLAP (easybuild.easyblocks.pbdslap @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/p/pbdslap.py)
|   |   |-- EB_Rmpi (easybuild.easyblocks.rmpi @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/r/rmpi.py)
|   |   |-- EB_Rserve (easybuild.easyblocks.rserve @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/r/rserve.py)
|   |   |-- EB_XML (easybuild.easyblocks.xml @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/x/xml.py)
|   |-- RubyGem (easybuild.easyblocks.generic.rubygem @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/rubygem.py)
|-- IntelBase (easybuild.easyblocks.generic.intelbase @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/intelbase.py)
|   |-- EB_Advisor (easybuild.easyblocks.advisor @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a/advisor.py)
|   |-- EB_icc (easybuild.easyblocks.icc @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/i/icc.py)
|   |   |-- EB_ifort (easybuild.easyblocks.ifort @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/i/ifort.py)
|   |   |   |-- SystemCompiler (easybuild.easyblocks.generic.systemcompiler @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/systemcompiler.py)
|   |-- EB_ifort (easybuild.easyblocks.ifort @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/i/ifort.py)
|   |   |-- SystemCompiler (easybuild.easyblocks.generic.systemcompiler @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/systemcompiler.py)
|   |-- EB_imkl (easybuild.easyblocks.imkl @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/i/imkl.py)
|   |-- EB_impi (easybuild.easyblocks.impi @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/i/impi.py)
|   |   |-- SystemMPI (easybuild.easyblocks.generic.systemmpi @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/systemmpi.py)
|   |-- EB_Inspector (easybuild.easyblocks.inspector @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/i/inspector.py)
|   |-- EB_ipp (easybuild.easyblocks.ipp @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/i/ipp.py)
|   |-- EB_itac (easybuild.easyblocks.itac @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/i/itac.py)
|   |-- EB_tbb (easybuild.easyblocks.tbb @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/t/tbb.py)
|   |-- EB_tbb (easybuild.easyblocks.tbb @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/t/tbb.py)
|   |-- EB_VTune (easybuild.easyblocks.vtune @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/v/vtune.py)
|-- MesonNinja (easybuild.easyblocks.generic.mesonninja @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/mesonninja.py)
|-- ModuleRC (easybuild.easyblocks.generic.modulerc @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/modulerc.py)
|-- PackedBinary (easybuild.easyblocks.generic.packedbinary @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/packedbinary.py)
|   |-- EB_ANSYS (easybuild.easyblocks.ansys @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a/ansys.py)
|   |-- EB_ant (easybuild.easyblocks.ant @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a/ant.py)
|   |-- EB_BiSearch (easybuild.easyblocks.bisearch @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/b/bisearch.py)
|   |-- EB_Chimera (easybuild.easyblocks.chimera @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/chimera.py)
|   |-- EB_COMSOL (easybuild.easyblocks.comsol @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/comsol.py)
|   |-- EB_FDTD_underscore_Solutions (easybuild.easyblocks.fdtd_solutions @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/f/fdtd_solutions.py)
|   |-- EB_FLUENT (easybuild.easyblocks.fluent @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/f/fluent.py)
|   |-- EB_IronPython (easybuild.easyblocks.ironpython @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/i/ironpython.py)
|   |-- EB_Java (easybuild.easyblocks.java @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/j/java.py)
|   |-- EB_MATLAB (easybuild.easyblocks.matlab @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/matlab.py)
|   |-- EB_MCR (easybuild.easyblocks.mcr @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/mcr.py)
|   |-- EB_PGI (easybuild.easyblocks.pgi @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/p/pgi.py)
|   |-- EB_Samcef (easybuild.easyblocks.samcef @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/s/samcef.py)
|   |-- EB_Stata (easybuild.easyblocks.stata @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/s/stata.py)
|   |-- EB_Tornado (easybuild.easyblocks.tornado @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/t/tornado.py)
|   |-- EB_TotalView (easybuild.easyblocks.totalview @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/t/totalview.py)
|-- SCons (easybuild.easyblocks.generic.scons @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/scons.py)
|-- Tarball (easybuild.easyblocks.generic.tarball @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/tarball.py)
|   |-- BinariesTarball (easybuild.easyblocks.generic.binariestarball @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/binariestarball.py)
|   |-- EB_FoldX (easybuild.easyblocks.foldx @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/f/foldx.py)
|   |-- EB_FreeSurfer (easybuild.easyblocks.freesurfer @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/f/freesurfer.py)
|   |-- EB_Gurobi (easybuild.easyblocks.gurobi @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/g/gurobi.py)
|   |-- EB_Hadoop (easybuild.easyblocks.hadoop @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/h/hadoop.py)
|   |-- EB_MTL4 (easybuild.easyblocks.mtl4 @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/mtl4.py)
|   |-- EB_picard (easybuild.easyblocks.picard @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/p/picard.py)
|   |-- EB_RepeatMasker (easybuild.easyblocks.repeatmasker @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/r/repeatmasker.py)
|-- Waf (easybuild.easyblocks.generic.waf @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/waf.py)
Extension (easybuild.framework.extension)
|-- ExtensionEasyBlock (easybuild.framework.extensioneasyblock )
|   |-- OCamlPackage (easybuild.easyblocks.generic.ocamlpackage @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/ocamlpackage.py)
|   |-- OctavePackage (easybuild.easyblocks.generic.octavepackage @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/octavepackage.py)
|   |-- PerlModule (easybuild.easyblocks.generic.perlmodule @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/perlmodule.py)
|   |-- PythonPackage (easybuild.easyblocks.generic.pythonpackage @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/pythonpackage.py)
|   |   |-- CMakePythonPackage (easybuild.easyblocks.generic.cmakepythonpackage @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/cmakepythonpackage.py)
|   |   |   |-- EB_DOLFIN (easybuild.easyblocks.dolfin @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/d/dolfin.py)
|   |   |   |-- EB_UFC (easybuild.easyblocks.ufc @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/u/ufc.py)
|   |   |-- ConfigureMakePythonPackage (easybuild.easyblocks.generic.configuremakepythonpackage @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/configuremakepythonpackage.py)
|   |   |-- EB_EasyBuildMeta (easybuild.easyblocks.easybuildmeta @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/e/easybuildmeta.py)
|   |   |-- EB_EggLib (easybuild.easyblocks.egglib @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/e/egglib.py)
|   |   |-- EB_libxml2 (easybuild.easyblocks.libxml2 @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/l/libxml2.py)
|   |   |-- EB_netcdf4_minus_python (easybuild.easyblocks.netcdf4_python @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/n/netcdf4_python.py)
|   |   |-- EB_nose (easybuild.easyblocks.nose @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/n/nose.py)
|   |   |-- EB_PyQuante (easybuild.easyblocks.pyquante @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/p/pyquante.py)
|   |   |-- EB_python_minus_meep (easybuild.easyblocks.python_meep @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/p/python_meep.py)
|   |   |-- EB_PyZMQ (easybuild.easyblocks.pyzmq @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/p/pyzmq.py)
|   |   |-- EB_TensorFlow (easybuild.easyblocks.tensorflow @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/t/tensorflow.py)
|   |   |-- EB_VSC_minus_tools (easybuild.easyblocks.vsc_tools @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/v/vsc_tools.py)
|   |   |-- EB_wxPython (easybuild.easyblocks.wxpython @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/w/wxpython.py)
|   |   |-- FortranPythonPackage (easybuild.easyblocks.generic.fortranpythonpackage @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/fortranpythonpackage.py)
|   |   |   |-- EB_numpy (easybuild.easyblocks.numpy @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/n/numpy.py)
|   |   |   |-- EB_scipy (easybuild.easyblocks.scipy @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/s/scipy.py)
|   |   |-- VersionIndependentPythonPackage (easybuild.easyblocks.generic.versionindependentpythonpackage @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/versionindependentpythonpackage.py)
|   |   |   |-- VSCPythonPackage (easybuild.easyblocks.generic.vscpythonpackage @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/vscpythonpackage.py)
|   |-- RPackage (easybuild.easyblocks.generic.rpackage @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/rpackage.py)
|   |   |-- EB_Bioconductor (easybuild.easyblocks.bioconductor @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/b/bioconductor.py)
|   |   |-- EB_pbdMPI (easybuild.easyblocks.pbdmpi @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/p/pbdmpi.py)
|   |   |-- EB_pbdSLAP (easybuild.easyblocks.pbdslap @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/p/pbdslap.py)
|   |   |-- EB_Rmpi (easybuild.easyblocks.rmpi @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/r/rmpi.py)
|   |   |-- EB_Rserve (easybuild.easyblocks.rserve @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/r/rserve.py)
|   |   |-- EB_XML (easybuild.easyblocks.xml @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/x/xml.py)
|   |-- RubyGem (easybuild.easyblocks.generic.rubygem @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/rubygem.py)
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --list-easyblocks=detailed | less
[?1049h[?1h=EasyBlock (easybuild.framework.easyblock)
|-- Binary (easybuild.easyblocks.generic.binary @ /home/romain.pereira/local/easybuild/software/Ea syBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblock s/generic/binary.py)
|   |-- Conda (easybuild.easyblocks.generic.conda @ /home/romain.pereira/local/easybuild/software/ EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblo cks/generic/conda.py)
|   |-- EB_ABAQUS (easybuild.easyblocks.abaqus @ /home/romain.pereira/local/easybuild/software/Eas yBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks /a/abaqus.py)
|   |-- EB_Allinea (easybuild.easyblocks.allinea @ /home/romain.pereira/local/easybuild/software/E asyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc ks/a/allinea.py)
|   |-- EB_Anaconda (easybuild.easyblocks.anaconda @ /home/romain.pereira/local/easybuild/software /EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybl ocks/a/anaconda.py)
|   |-- EB_CPLEX (easybuild.easyblocks.cplex @ /home/romain.pereira/local/easybuild/software/EasyB uild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c /cplex.py)
|   |-- EB_CUDA (easybuild.easyblocks.cuda @ /home/romain.pereira/local/easybuild/software/EasyBui ld/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/c uda.py)
|   |-- EB_EPD (easybuild.easyblocks.epd @ /home/romain.pereira/local/easybuild/software/EasyBuild /3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/e/epd .py)
|   |-- EB_IMOD (easybuild.easyblocks.imod @ /home/romain.pereira/local/easybuild/software/EasyBui ld/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/i/i mod.py)
|   |-- EB_Maple (easybuild.easyblocks.maple @ /home/romain.pereira/local/easybuild/software/EasyB uild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m /maple.py)
|   |-- EB_Mathematica (easybuild.easyblocks.mathematica @ /home/romain.pereira/local/easybuild/so ftware/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/ easyblocks/m/mathematica.py)
|   |-- EB_Molpro (easybuild.easyblocks.molpro @ /home/romain.pereira/local/easybuild/software/Eas yBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks /m/molpro.py)
|   |-- JAR (easybuild.easyblocks.generic.jar @ /home/romain.pereira/local/easybuild/software/Easy Build/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/ generic/jar.py)
|   |-- PackedBinary (easybuild.easyblocks.generic.packedbinary @ /home/romain.pereira/local/easyb uild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/eas ybuild/easyblocks/generic/packedbinary.py)
|   |   |-- EB_ANSYS (easybuild.easyblocks.ansys @ /home/romain.pereira/local/easybuild/software/E asyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc ks/a/ansys.py)
|   |   |-- EB_ant (easybuild.easyblocks.ant @ /home/romain.pereira/local/easybuild/software/EasyB uild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a :[K[K/[Kff[Kll[Kee[Kxx[K--[K22[K[1;1HEasyBlock (easybuild.framework.easyblock)
[2;1H|-- Binary (easybuild.easyblocks.generic.binary @ /home/romain.pereira/local/easybuild/software/Ea [3;1HsyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblock [4;1Hs/generic/binary.py)
[5;1H|   |-- Conda (easybuild.easyblocks.generic.conda @ /home/romain.pereira/local/easybuild/software/ [6;1HEasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblo [7;1Hcks/generic/conda.py)
[8;1H|   |-- EB_ABAQUS (easybuild.easyblocks.abaqus @ /home/romain.pereira/local/easybuild/software/Eas [9;1HyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks [10;1H/a/abaqus.py)
[11;1H|   |-- EB_Allinea (easybuild.easyblocks.allinea @ /home/romain.pereira/local/easybuild/software/E [12;1HasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc [13;1Hks/a/allinea.py)
[14;1H|   |-- EB_Anaconda (easybuild.easyblocks.anaconda @ /home/romain.pereira/local/easybuild/software [15;1H/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybl [16;1Hocks/a/anaconda.py)
[17;1H|   |-- EB_CPLEX (easybuild.easyblocks.cplex @ /home/romain.pereira/local/easybuild/software/EasyB [18;1Huild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c [19;1H/cplex.py)
[20;1H|   |-- EB_CUDA (easybuild.easyblocks.cuda @ /home/romain.pereira/local/easybuild/software/EasyBui [21;1Hld/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/c [22;1Huda.py)
[23;1H|   |-- EB_EPD (easybuild.easyblocks.epd @ /home/romain.pereira/local/easybuild/software/EasyBuild [24;1H/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/e/epd [25;1H.py)
[26;1H|   |-- EB_IMOD (easybuild.easyblocks.imod @ /home/romain.pereira/local/easybuild/software/EasyBui [27;1Hld/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/i/i [28;1Hmod.py)
[29;1H|   |-- EB_Maple (easybuild.easyblocks.maple @ /home/romain.pereira/local/easybuild/software/EasyB [30;1Huild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m [31;1H/maple.py)
[32;1H|   |-- EB_Mathematica (easybuild.easyblocks.mathematica @ /home/romain.pereira/local/easybuild/so [33;1Hftware/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/ [34;1Heasyblocks/m/mathematica.py)
[35;1H|   |-- EB_Molpro (easybuild.easyblocks.molpro @ /home/romain.pereira/local/easybuild/software/Eas [36;1HyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks [37;1H/m/molpro.py)
[38;1H|   |-- JAR (easybuild.easyblocks.generic.jar @ /home/romain.pereira/local/easybuild/software/Easy [39;1HBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/ [40;1Hgeneric/jar.py)
[41;1H|   |-- PackedBinary (easybuild.easyblocks.generic.packedbinary @ /home/romain.pereira/local/easyb [42;1Huild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/eas [43;1Hybuild/easyblocks/generic/packedbinary.py)
[44;1H|   |   |-- EB_ANSYS (easybuild.easyblocks.ansys @ /home/romain.pereira/local/easybuild/software/E [45;1HasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc [46;1Hks/a/ansys.py)
[47;1H|   |   |-- EB_ant (easybuild.easyblocks.ant @ /home/romain.pereira/local/easybuild/software/EasyB [48;1Huild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a [49;1H[1;1HEasyBlock (easybuild.framework.easyblock)
[2;1H|-- Binary (easybuild.easyblocks.generic.binary @ /home/romain.pereira/local/easybuild/software/Ea [3;1HsyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblock [4;1Hs/generic/binary.py)
[5;1H|   |-- Conda (easybuild.easyblocks.generic.conda @ /home/romain.pereira/local/easybuild/software/ [6;1HEasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblo [7;1Hcks/generic/conda.py)
[8;1H|   |-- EB_ABAQUS (easybuild.easyblocks.abaqus @ /home/romain.pereira/local/easybuild/software/Eas [9;1HyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks [10;1H/a/abaqus.py)
[11;1H|   |-- EB_Allinea (easybuild.easyblocks.allinea @ /home/romain.pereira/local/easybuild/software/E [12;1HasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc [13;1Hks/a/allinea.py)
[14;1H|   |-- EB_Anaconda (easybuild.easyblocks.anaconda @ /home/romain.pereira/local/easybuild/software [15;1H/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybl [16;1Hocks/a/anaconda.py)
[17;1H|   |-- EB_CPLEX (easybuild.easyblocks.cplex @ /home/romain.pereira/local/easybuild/software/EasyB [18;1Huild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c [19;1H/cplex.py)
[20;1H|   |-- EB_CUDA (easybuild.easyblocks.cuda @ /home/romain.pereira/local/easybuild/software/EasyBui [21;1Hld/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/c [22;1Huda.py)
[23;1H|   |-- EB_EPD (easybuild.easyblocks.epd @ /home/romain.pereira/local/easybuild/software/EasyBuild [24;1H/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/e/epd [25;1H.py)
[26;1H|   |-- EB_IMOD (easybuild.easyblocks.imod @ /home/romain.pereira/local/easybuild/software/EasyBui [27;1Hld/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/i/i [28;1Hmod.py)
[29;1H|   |-- EB_Maple (easybuild.easyblocks.maple @ /home/romain.pereira/local/easybuild/software/EasyB [30;1Huild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m [31;1H/maple.py)
[32;1H|   |-- EB_Mathematica (easybuild.easyblocks.mathematica @ /home/romain.pereira/local/easybuild/so [33;1Hftware/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/ [34;1Heasyblocks/m/mathematica.py)
[35;1H|   |-- EB_Molpro (easybuild.easyblocks.molpro @ /home/romain.pereira/local/easybuild/software/Eas [36;1HyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks [37;1H/m/molpro.py)
[38;1H|   |-- JAR (easybuild.easyblocks.generic.jar @ /home/romain.pereira/local/easybuild/software/Easy [39;1HBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/ [40;1Hgeneric/jar.py)
[41;1H|   |-- PackedBinary (easybuild.easyblocks.generic.packedbinary @ /home/romain.pereira/local/easyb [42;1Huild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/eas [43;1Hybuild/easyblocks/generic/packedbinary.py)
[44;1H|   |   |-- EB_ANSYS (easybuild.easyblocks.ansys @ /home/romain.pereira/local/easybuild/software/E [45;1HasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc [46;1Hks/a/ansys.py)
[47;1H|   |   |-- EB_ant (easybuild.easyblocks.ant @ /home/romain.pereira/local/easybuild/software/EasyB [48;1Huild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a [49;1H[K[7mPattern not found  (press RETURN)[27m[49;1H[K[K/[Kff[Kll[Kee[Kxx[K[1;1HEasyBlock (easybuild.framework.easyblock)
[2;1H|-- Binary (easybuild.easyblocks.generic.binary @ /home/romain.pereira/local/easybuild/software/Ea [3;1HsyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblock [4;1Hs/generic/binary.py)
[5;1H|   |-- Conda (easybuild.easyblocks.generic.conda @ /home/romain.pereira/local/easybuild/software/ [6;1HEasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblo [7;1Hcks/generic/conda.py)
[8;1H|   |-- EB_ABAQUS (easybuild.easyblocks.abaqus @ /home/romain.pereira/local/easybuild/software/Eas [9;1HyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks [10;1H/a/abaqus.py)
[11;1H|   |-- EB_Allinea (easybuild.easyblocks.allinea @ /home/romain.pereira/local/easybuild/software/E [12;1HasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc [13;1Hks/a/allinea.py)
[14;1H|   |-- EB_Anaconda (easybuild.easyblocks.anaconda @ /home/romain.pereira/local/easybuild/software [15;1H/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybl [16;1Hocks/a/anaconda.py)
[17;1H|   |-- EB_CPLEX (easybuild.easyblocks.cplex @ /home/romain.pereira/local/easybuild/software/EasyB [18;1Huild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c [19;1H/cplex.py)
[20;1H|   |-- EB_CUDA (easybuild.easyblocks.cuda @ /home/romain.pereira/local/easybuild/software/EasyBui [21;1Hld/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/c [22;1Huda.py)
[23;1H|   |-- EB_EPD (easybuild.easyblocks.epd @ /home/romain.pereira/local/easybuild/software/EasyBuild [24;1H/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/e/epd [25;1H.py)
[26;1H|   |-- EB_IMOD (easybuild.easyblocks.imod @ /home/romain.pereira/local/easybuild/software/EasyBui [27;1Hld/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/i/i [28;1Hmod.py)
[29;1H|   |-- EB_Maple (easybuild.easyblocks.maple @ /home/romain.pereira/local/easybuild/software/EasyB [30;1Huild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m [31;1H/maple.py)
[32;1H|   |-- EB_Mathematica (easybuild.easyblocks.mathematica @ /home/romain.pereira/local/easybuild/so [33;1Hftware/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/ [34;1Heasyblocks/m/mathematica.py)
[35;1H|   |-- EB_Molpro (easybuild.easyblocks.molpro @ /home/romain.pereira/local/easybuild/software/Eas [36;1HyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks [37;1H/m/molpro.py)
[38;1H|   |-- JAR (easybuild.easyblocks.generic.jar @ /home/romain.pereira/local/easybuild/software/Easy [39;1HBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/ [40;1Hgeneric/jar.py)
[41;1H|   |-- PackedBinary (easybuild.easyblocks.generic.packedbinary @ /home/romain.pereira/local/easyb [42;1Huild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/eas [43;1Hybuild/easyblocks/generic/packedbinary.py)
[44;1H|   |   |-- EB_ANSYS (easybuild.easyblocks.ansys @ /home/romain.pereira/local/easybuild/software/E [45;1HasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc [46;1Hks/a/ansys.py)
[47;1H|   |   |-- EB_ant (easybuild.easyblocks.ant @ /home/romain.pereira/local/easybuild/software/EasyB [48;1Huild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a [49;1H[1;1HEasyBlock (easybuild.framework.easyblock)
[2;1H|-- Binary (easybuild.easyblocks.generic.binary @ /home/romain.pereira/local/easybuild/software/Ea [3;1HsyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblock [4;1Hs/generic/binary.py)
[5;1H|   |-- Conda (easybuild.easyblocks.generic.conda @ /home/romain.pereira/local/easybuild/software/ [6;1HEasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblo [7;1Hcks/generic/conda.py)
[8;1H|   |-- EB_ABAQUS (easybuild.easyblocks.abaqus @ /home/romain.pereira/local/easybuild/software/Eas [9;1HyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks [10;1H/a/abaqus.py)
[11;1H|   |-- EB_Allinea (easybuild.easyblocks.allinea @ /home/romain.pereira/local/easybuild/software/E [12;1HasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc [13;1Hks/a/allinea.py)
[14;1H|   |-- EB_Anaconda (easybuild.easyblocks.anaconda @ /home/romain.pereira/local/easybuild/software [15;1H/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybl [16;1Hocks/a/anaconda.py)
[17;1H|   |-- EB_CPLEX (easybuild.easyblocks.cplex @ /home/romain.pereira/local/easybuild/software/EasyB [18;1Huild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c [19;1H/cplex.py)
[20;1H|   |-- EB_CUDA (easybuild.easyblocks.cuda @ /home/romain.pereira/local/easybuild/software/EasyBui [21;1Hld/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/c [22;1Huda.py)
[23;1H|   |-- EB_EPD (easybuild.easyblocks.epd @ /home/romain.pereira/local/easybuild/software/EasyBuild [24;1H/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/e/epd [25;1H.py)
[26;1H|   |-- EB_IMOD (easybuild.easyblocks.imod @ /home/romain.pereira/local/easybuild/software/EasyBui [27;1Hld/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/i/i [28;1Hmod.py)
[29;1H|   |-- EB_Maple (easybuild.easyblocks.maple @ /home/romain.pereira/local/easybuild/software/EasyB [30;1Huild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m [31;1H/maple.py)
[32;1H|   |-- EB_Mathematica (easybuild.easyblocks.mathematica @ /home/romain.pereira/local/easybuild/so [33;1Hftware/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/ [34;1Heasyblocks/m/mathematica.py)
[35;1H|   |-- EB_Molpro (easybuild.easyblocks.molpro @ /home/romain.pereira/local/easybuild/software/Eas [36;1HyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks [37;1H/m/molpro.py)
[38;1H|   |-- JAR (easybuild.easyblocks.generic.jar @ /home/romain.pereira/local/easybuild/software/Easy [39;1HBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/ [40;1Hgeneric/jar.py)
[41;1H|   |-- PackedBinary (easybuild.easyblocks.generic.packedbinary @ /home/romain.pereira/local/easyb [42;1Huild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/eas [43;1Hybuild/easyblocks/generic/packedbinary.py)
[44;1H|   |   |-- EB_ANSYS (easybuild.easyblocks.ansys @ /home/romain.pereira/local/easybuild/software/E [45;1HasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc [46;1Hks/a/ansys.py)
[47;1H|   |   |-- EB_ant (easybuild.easyblocks.ant @ /home/romain.pereira/local/easybuild/software/EasyB [48;1Huild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a [49;1H...skipping...
|   |-- EB_[7mflex[27m (easybuild.easyblocks.[7mflex[27m @ /home/romain.pereira/local/easybuild/software/EasyBui ld/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/f/[7mf[27m [7mlex[27m.py)
|   |-- EB_freetype (easybuild.easyblocks.freetype @ /home/romain.pereira/local/easybuild/software /EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybl ocks/f/freetype.py)
|   |-- EB_g2clib (easybuild.easyblocks.g2clib @ /home/romain.pereira/local/easybuild/software/Eas yBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks /g/g2clib.py)
|   |-- EB_g2lib (easybuild.easyblocks.g2lib @ /home/romain.pereira/local/easybuild/software/EasyB uild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/g /g2lib.py)
|   |-- EB_GCC (easybuild.easyblocks.gcc @ /home/romain.pereira/local/easybuild/software/EasyBuild /3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/g/gcc .py)
|   |   |-- SystemCompiler (easybuild.easyblocks.generic.systemcompiler @ /home/romain.pereira/loc al/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7 .egg/easybuild/easyblocks/generic/systemcompiler.py)
|   |-- EB_GHC (easybuild.easyblocks.ghc @ /home/romain.pereira/local/easybuild/software/EasyBuild /3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/g/ghc .py)
|   |-- EB_Go (easybuild.easyblocks.go @ /home/romain.pereira/local/easybuild/software/EasyBuild/3 .8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/g/go.py )
|   |-- EB_HDF5 (easybuild.easyblocks.hdf5 @ /home/romain.pereira/local/easybuild/software/EasyBui ld/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/h/h df5.py)
|   |-- EB_HEALPix (easybuild.easyblocks.healpix @ /home/romain.pereira/local/easybuild/software/E asyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc ks/h/healpix.py)
|   |-- EB_HPCG (easybuild.easyblocks.hpcg @ /home/romain.pereira/local/easybuild/software/EasyBui ld/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/h/h pcg.py)
|   |-- EB_HPL (easybuild.easyblocks.hpl @ /home/romain.pereira/local/easybuild/software/EasyBuild /3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/h/hpl .py)
|   |-- EB_Hypre (easybuild.easyblocks.hypre @ /home/romain.pereira/local/easybuild/software/EasyB uild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/h /hypre.py)
|   |-- EB_LAPACK (easybuild.easyblocks.lapack @ /home/romain.pereira/local/easybuild/software/Eas yBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks /l/lapack.py)
|   |-- EB_Libint (easybuild.easyblocks.libint @ /home/romain.pereira/local/easybuild/software/Eas yBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks /l/libint.py)
|   |-- EB_libQGLViewer (easybuild.easyblocks.libqglviewer @ /home/romain.pereira/local/easybuild/ software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuil d/easyblocks/l/libqglviewer.py)
:[K[K/[K[K[7mPattern not found  (press RETURN)[27m[49;1H[K[K/[K[K[7mPattern not found  (press RETURN)[27m[49;1H[K[K/[K[K[7mPattern not found  (press RETURN)[27m[49;1H[K[K/[K[K[7mPattern not found  (press RETURN)[27m[49;1H[K[H[2J[H|   |-- EB_[7mflex[27m (easybuild.easyblocks.[7mflex[27m @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/f/[7mfle[27m [7mx[27m.py)
|   |-- EB_freetype (easybuild.easyblocks.freetype @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc ks/f/freetype.py)
|   |-- EB_g2clib (easybuild.easyblocks.g2clib @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/g /g2clib.py)
|   |-- EB_g2lib (easybuild.easyblocks.g2lib @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/g/g 2lib.py)
|   |-- EB_GCC (easybuild.easyblocks.gcc @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/g/gcc.p y)
|   |   |-- SystemCompiler (easybuild.easyblocks.generic.systemcompiler @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.e gg/easybuild/easyblocks/generic/systemcompiler.py)
|   |-- EB_GHC (easybuild.easyblocks.ghc @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/g/ghc.p y)
|   |-- EB_Go (easybuild.easyblocks.go @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/g/go.py)
|   |-- EB_HDF5 (easybuild.easyblocks.hdf5 @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/h/hdf 5.py)
|   |-- EB_HEALPix (easybuild.easyblocks.healpix @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks /h/healpix.py)
|   |-- EB_HPCG (easybuild.easyblocks.hpcg @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/h/hpc g.py)
|   |-- EB_HPL (easybuild.easyblocks.hpl @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/h/hpl.p y)
|   |-- EB_Hypre (easybuild.easyblocks.hypre @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/h/h ypre.py)
|   |-- EB_LAPACK (easybuild.easyblocks.lapack @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/l /lapack.py)
|   |-- EB_Libint (easybuild.easyblocks.libint @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/l /libint.py)
|   |-- EB_libQGLViewer (easybuild.easyblocks.libqglviewer @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/ easyblocks/l/libqglviewer.py)
|   |-- EB_libxml2 (easybuild.easyblocks.libxml2 @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks /l/libxml2.py)
|   |-- EB_MetaVelvet (easybuild.easyblocks.metavelvet @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easy blocks/m/metavelvet.py)
|   |-- EB_METIS (easybuild.easyblocks.metis @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/m etis.py)
|   |-- EB_Molpro (easybuild.easyblocks.molpro @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m /molpro.py)
|   |-- EB_Mono (easybuild.easyblocks.mono @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/mon o.py)
|   |-- EB_Mothur (easybuild.easyblocks.mothur @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m /mothur.py)
|   |-- EB_MPICH (easybuild.easyblocks.mpich @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/m pich.py)
|   |   |-- EB_MVAPICH2 (easybuild.easyblocks.mvapich2 @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easy blocks/m/mvapich2.py)
|   |   |-- EB_psmpi (easybuild.easyblocks.psmpi @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks :[K[K[?1l>[?1049l]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --list-easyblocks=detailed | less
[?1049h[?1h=EasyBlock (easybuild.framework.easyblock)
|-- Binary (easybuild.easyblocks.generic.binary @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/ generic/binary.py)
|   |-- Conda (easybuild.easyblocks.generic.conda @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblock s/generic/conda.py)
|   |-- EB_ABAQUS (easybuild.easyblocks.abaqus @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a /abaqus.py)
|   |-- EB_Allinea (easybuild.easyblocks.allinea @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks /a/allinea.py)
|   |-- EB_Anaconda (easybuild.easyblocks.anaconda @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc ks/a/anaconda.py)
|   |-- EB_CPLEX (easybuild.easyblocks.cplex @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/c plex.py)
|   |-- EB_CUDA (easybuild.easyblocks.cuda @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/cud a.py)
|   |-- EB_EPD (easybuild.easyblocks.epd @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/e/epd.p y)
|   |-- EB_IMOD (easybuild.easyblocks.imod @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/i/imo d.py)
|   |-- EB_Maple (easybuild.easyblocks.maple @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/m aple.py)
|   |-- EB_Mathematica (easybuild.easyblocks.mathematica @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/ea syblocks/m/mathematica.py)
|   |-- EB_Molpro (easybuild.easyblocks.molpro @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m /molpro.py)
|   |-- JAR (easybuild.easyblocks.generic.jar @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/ge neric/jar.py)
|   |-- PackedBinary (easybuild.easyblocks.generic.packedbinary @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easyb uild/easyblocks/generic/packedbinary.py)
|   |   |-- EB_ANSYS (easybuild.easyblocks.ansys @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks /a/ansys.py)
|   |   |-- EB_ant (easybuild.easyblocks.ant @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a/a nt.py)
|   |   |-- EB_BiSearch (easybuild.easyblocks.bisearch @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easy blocks/b/bisearch.py)
|   |   |-- EB_Chimera (easybuild.easyblocks.chimera @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybl ocks/c/chimera.py)
|   |   |-- EB_COMSOL (easybuild.easyblocks.comsol @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc ks/c/comsol.py)
|   |   |-- EB_FDTD_underscore_Solutions (easybuild.easyblocks.fdtd_solutions @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-p y2.7.egg/easybuild/easyblocks/f/fdtd_solutions.py)
|   |   |-- EB_FLUENT (easybuild.easyblocks.fluent @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc ks/f/fluent.py)
|   |   |-- EB_IronPython (easybuild.easyblocks.ironpython @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/ easyblocks/i/ironpython.py)
|   |   |-- EB_Java (easybuild.easyblocks.java @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/j /java.py)
|   |   |-- EB_MATLAB (easybuild.easyblocks.matlab @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc :[K[K/[Kff[Kee[Kll[Kxx[K[K[K[Kll[Kee[Kxx[K[1;1HEasyBlock (easybuild.framework.easyblock)
[2;1H|-- Binary (easybuild.easyblocks.generic.binary @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/ [3;1Hgeneric/binary.py)
[4;1H|   |-- Conda (easybuild.easyblocks.generic.conda @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblock [5;1Hs/generic/conda.py)
[6;1H|   |-- EB_ABAQUS (easybuild.easyblocks.abaqus @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a [7;1H/abaqus.py)
[8;1H|   |-- EB_Allinea (easybuild.easyblocks.allinea @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks [9;1H/a/allinea.py)
[10;1H|   |-- EB_Anaconda (easybuild.easyblocks.anaconda @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc [11;1Hks/a/anaconda.py)
[12;1H|   |-- EB_CPLEX (easybuild.easyblocks.cplex @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/c [13;1Hplex.py)
[14;1H|   |-- EB_CUDA (easybuild.easyblocks.cuda @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/cud [15;1Ha.py)
[16;1H|   |-- EB_EPD (easybuild.easyblocks.epd @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/e/epd.p [17;1Hy)
[18;1H|   |-- EB_IMOD (easybuild.easyblocks.imod @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/i/imo [19;1Hd.py)
[20;1H|   |-- EB_Maple (easybuild.easyblocks.maple @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/m [21;1Haple.py)
[22;1H|   |-- EB_Mathematica (easybuild.easyblocks.mathematica @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/ea [23;1Hsyblocks/m/mathematica.py)
[24;1H|   |-- EB_Molpro (easybuild.easyblocks.molpro @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m [25;1H/molpro.py)
[26;1H|   |-- JAR (easybuild.easyblocks.generic.jar @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/ge [27;1Hneric/jar.py)
[28;1H|   |-- PackedBinary (easybuild.easyblocks.generic.packedbinary @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easyb [29;1Huild/easyblocks/generic/packedbinary.py)
[30;1H|   |   |-- EB_ANSYS (easybuild.easyblocks.ansys @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks [31;1H/a/ansys.py)
[32;1H|   |   |-- EB_ant (easybuild.easyblocks.ant @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a/a [33;1Hnt.py)
[34;1H|   |   |-- EB_BiSearch (easybuild.easyblocks.bisearch @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easy [35;1Hblocks/b/bisearch.py)
[36;1H|   |   |-- EB_Chimera (easybuild.easyblocks.chimera @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybl [37;1Hocks/c/chimera.py)
[38;1H|   |   |-- EB_COMSOL (easybuild.easyblocks.comsol @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc [39;1Hks/c/comsol.py)
[40;1H|   |   |-- EB_FDTD_underscore_Solutions (easybuild.easyblocks.fdtd_solutions @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-p [41;1Hy2.7.egg/easybuild/easyblocks/f/fdtd_solutions.py)
[42;1H|   |   |-- EB_FLUENT (easybuild.easyblocks.fluent @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc [43;1Hks/f/fluent.py)
[44;1H|   |   |-- EB_IronPython (easybuild.easyblocks.ironpython @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/ [45;1Heasyblocks/i/ironpython.py)
[46;1H|   |   |-- EB_Java (easybuild.easyblocks.java @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/j [47;1H/java.py)
[48;1H|   |   |-- EB_MATLAB (easybuild.easyblocks.matlab @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc [49;1H[1;1HEasyBlock (easybuild.framework.easyblock)
[2;1H|-- Binary (easybuild.easyblocks.generic.binary @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/ [3;1Hgeneric/binary.py)
[4;1H|   |-- Conda (easybuild.easyblocks.generic.conda @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblock [5;1Hs/generic/conda.py)
[6;1H|   |-- EB_ABAQUS (easybuild.easyblocks.abaqus @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a [7;1H/abaqus.py)
[8;1H|   |-- EB_Allinea (easybuild.easyblocks.allinea @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks [9;1H/a/allinea.py)
[10;1H|   |-- EB_Anaconda (easybuild.easyblocks.anaconda @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc [11;1Hks/a/anaconda.py)
[12;1H|   |-- EB_CPLEX (easybuild.easyblocks.cplex @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/c [13;1Hplex.py)
[14;1H|   |-- EB_CUDA (easybuild.easyblocks.cuda @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/cud [15;1Ha.py)
[16;1H|   |-- EB_EPD (easybuild.easyblocks.epd @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/e/epd.p [17;1Hy)
[18;1H|   |-- EB_IMOD (easybuild.easyblocks.imod @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/i/imo [19;1Hd.py)
[20;1H|   |-- EB_Maple (easybuild.easyblocks.maple @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/m [21;1Haple.py)
[22;1H|   |-- EB_Mathematica (easybuild.easyblocks.mathematica @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/ea [23;1Hsyblocks/m/mathematica.py)
[24;1H|   |-- EB_Molpro (easybuild.easyblocks.molpro @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m [25;1H/molpro.py)
[26;1H|   |-- JAR (easybuild.easyblocks.generic.jar @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/ge [27;1Hneric/jar.py)
[28;1H|   |-- PackedBinary (easybuild.easyblocks.generic.packedbinary @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easyb [29;1Huild/easyblocks/generic/packedbinary.py)
[30;1H|   |   |-- EB_ANSYS (easybuild.easyblocks.ansys @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks [31;1H/a/ansys.py)
[32;1H|   |   |-- EB_ant (easybuild.easyblocks.ant @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a/a [33;1Hnt.py)
[34;1H|   |   |-- EB_BiSearch (easybuild.easyblocks.bisearch @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easy [35;1Hblocks/b/bisearch.py)
[36;1H|   |   |-- EB_Chimera (easybuild.easyblocks.chimera @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybl [37;1Hocks/c/chimera.py)
[38;1H|   |   |-- EB_COMSOL (easybuild.easyblocks.comsol @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc [39;1Hks/c/comsol.py)
[40;1H|   |   |-- EB_FDTD_underscore_Solutions (easybuild.easyblocks.fdtd_solutions @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-p [41;1Hy2.7.egg/easybuild/easyblocks/f/fdtd_solutions.py)
[42;1H|   |   |-- EB_FLUENT (easybuild.easyblocks.fluent @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc [43;1Hks/f/fluent.py)
[44;1H|   |   |-- EB_IronPython (easybuild.easyblocks.ironpython @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/ [45;1Heasyblocks/i/ironpython.py)
[46;1H|   |   |-- EB_Java (easybuild.easyblocks.java @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/j [47;1H/java.py)
[48;1H|   |   |-- EB_MATLAB (easybuild.easyblocks.matlab @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc [49;1H...skipping...
|   |-- EB_[7mflex[27m (easybuild.easyblocks.[7mflex[27m @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/f/[7mfle[27m [7mx[27m.py)
|   |-- EB_freetype (easybuild.easyblocks.freetype @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc ks/f/freetype.py)
|   |-- EB_g2clib (easybuild.easyblocks.g2clib @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/g /g2clib.py)
|   |-- EB_g2lib (easybuild.easyblocks.g2lib @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/g/g 2lib.py)
|   |-- EB_GCC (easybuild.easyblocks.gcc @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/g/gcc.p y)
|   |   |-- SystemCompiler (easybuild.easyblocks.generic.systemcompiler @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.e gg/easybuild/easyblocks/generic/systemcompiler.py)
|   |-- EB_GHC (easybuild.easyblocks.ghc @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/g/ghc.p y)
|   |-- EB_Go (easybuild.easyblocks.go @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/g/go.py)
|   |-- EB_HDF5 (easybuild.easyblocks.hdf5 @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/h/hdf 5.py)
|   |-- EB_HEALPix (easybuild.easyblocks.healpix @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks /h/healpix.py)
|   |-- EB_HPCG (easybuild.easyblocks.hpcg @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/h/hpc g.py)
|   |-- EB_HPL (easybuild.easyblocks.hpl @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/h/hpl.p y)
|   |-- EB_Hypre (easybuild.easyblocks.hypre @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/h/h ypre.py)
|   |-- EB_LAPACK (easybuild.easyblocks.lapack @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/l /lapack.py)
|   |-- EB_Libint (easybuild.easyblocks.libint @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/l /libint.py)
|   |-- EB_libQGLViewer (easybuild.easyblocks.libqglviewer @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/ easyblocks/l/libqglviewer.py)
|   |-- EB_libxml2 (easybuild.easyblocks.libxml2 @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks /l/libxml2.py)
|   |-- EB_MetaVelvet (easybuild.easyblocks.metavelvet @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easy blocks/m/metavelvet.py)
|   |-- EB_METIS (easybuild.easyblocks.metis @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/m etis.py)
|   |-- EB_Molpro (easybuild.easyblocks.molpro @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m /molpro.py)
|   |-- EB_Mono (easybuild.easyblocks.mono @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/mon o.py)
|   |-- EB_Mothur (easybuild.easyblocks.mothur @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m /mothur.py)
|   |-- EB_MPICH (easybuild.easyblocks.mpich @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/m pich.py)
|   |   |-- EB_MVAPICH2 (easybuild.easyblocks.mvapich2 @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easy blocks/m/mvapich2.py)
|   |   |-- EB_psmpi (easybuild.easyblocks.psmpi @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks :[K[K [KESCESC[KOO[KAA[K[HMw.py)
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_FFTW (easybuild.easyblocks.fftw @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/f/fft[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM/ferret.py)
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_Ferret (easybuild.easyblocks.ferret @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/f[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM/extrae.py)
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_Extrae (easybuild.easyblocks.extrae @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/e[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HMks/e/espresso.py)
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_ESPResSo (easybuild.easyblocks.espresso @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HMf.py)
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_ESMF (easybuild.easyblocks.esmf @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/e/esm[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM/egglib.py)
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_EggLib (easybuild.easyblocks.egglib @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/e[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HMoris.py)
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_Doris (easybuild.easyblocks.doris @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/d/d[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HMs-3.8.1-py2.7.egg/easybuild/easyblocks/d/dl_poly_classic.py)
[49;1H[K:[K[K[?1l>[?1049l]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --list-easyblocks=detailed | less[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Ks | less
[?1049h[?1h=EasyBlock
|-- Binary
|   |-- Conda
|   |-- EB_ABAQUS
|   |-- EB_Allinea
|   |-- EB_Anaconda
|   |-- EB_CPLEX
|   |-- EB_CUDA
|   |-- EB_EPD
|   |-- EB_IMOD
|   |-- EB_Maple
|   |-- EB_Mathematica
|   |-- EB_Molpro
|   |-- JAR
|   |-- PackedBinary
|   |   |-- EB_ANSYS
|   |   |-- EB_ant
|   |   |-- EB_BiSearch
|   |   |-- EB_Chimera
|   |   |-- EB_COMSOL
|   |   |-- EB_FDTD_underscore_Solutions
|   |   |-- EB_FLUENT
|   |   |-- EB_IronPython
|   |   |-- EB_Java
|   |   |-- EB_MATLAB
|   |   |-- EB_MCR
|   |   |-- EB_PGI
|   |   |-- EB_Samcef
|   |   |-- EB_Stata
|   |   |-- EB_Tornado
|   |   |-- EB_TotalView
|   |-- Rpm
|   |   |-- EB_Mono
|-- Bundle
|   |-- BuildEnv
|   |-- CrayToolchain
|   |-- PythonBundle
|   |-- SystemCompiler
|   |-- SystemMPI
|   |-- Toolchain
|-- ConfigureMake
|   |-- CMakeMake
|   |   |-- CMakePythonPackage
|   |   |   |-- EB_DOLFIN
|   |   |   |-- EB_UFC
|   |   |-- EB_Armadillo
|   |   |-- EB_BamTools
|   |   |-- EB_CGAL
:[K[K/[Kff[Kll[Kee[Kxx[K[1;1HEasyBlock
[2;1H|-- Binary
[3;1H|   |-- Conda
[4;1H|   |-- EB_ABAQUS
[5;1H|   |-- EB_Allinea
[6;1H|   |-- EB_Anaconda
[7;1H|   |-- EB_CPLEX
[8;1H|   |-- EB_CUDA
[9;1H|   |-- EB_EPD
[10;1H|   |-- EB_IMOD
[11;1H|   |-- EB_Maple
[12;1H|   |-- EB_Mathematica
[13;1H|   |-- EB_Molpro
[14;1H|   |-- JAR
[15;1H|   |-- PackedBinary
[16;1H|   |   |-- EB_ANSYS
[17;1H|   |   |-- EB_ant
[18;1H|   |   |-- EB_BiSearch
[19;1H|   |   |-- EB_Chimera
[20;1H|   |   |-- EB_COMSOL
[21;1H|   |   |-- EB_FDTD_underscore_Solutions
[22;1H|   |   |-- EB_FLUENT
[23;1H|   |   |-- EB_IronPython
[24;1H|   |   |-- EB_Java
[25;1H|   |   |-- EB_MATLAB
[26;1H|   |   |-- EB_MCR
[27;1H|   |   |-- EB_PGI
[28;1H|   |   |-- EB_Samcef
[29;1H|   |   |-- EB_Stata
[30;1H|   |   |-- EB_Tornado
[31;1H|   |   |-- EB_TotalView
[32;1H|   |-- Rpm
[33;1H|   |   |-- EB_Mono
[34;1H|-- Bundle
[35;1H|   |-- BuildEnv
[36;1H|   |-- CrayToolchain
[37;1H|   |-- PythonBundle
[38;1H|   |-- SystemCompiler
[39;1H|   |-- SystemMPI
[40;1H|   |-- Toolchain
[41;1H|-- ConfigureMake
[42;1H|   |-- CMakeMake
[43;1H|   |   |-- CMakePythonPackage
[44;1H|   |   |   |-- EB_DOLFIN
[45;1H|   |   |   |-- EB_UFC
[46;1H|   |   |-- EB_Armadillo
[47;1H|   |   |-- EB_BamTools
[48;1H|   |   |-- EB_CGAL
[49;1H[1;1HEasyBlock
[2;1H|-- Binary
[3;1H|   |-- Conda
[4;1H|   |-- EB_ABAQUS
[5;1H|   |-- EB_Allinea
[6;1H|   |-- EB_Anaconda
[7;1H|   |-- EB_CPLEX
[8;1H|   |-- EB_CUDA
[9;1H|   |-- EB_EPD
[10;1H|   |-- EB_IMOD
[11;1H|   |-- EB_Maple
[12;1H|   |-- EB_Mathematica
[13;1H|   |-- EB_Molpro
[14;1H|   |-- JAR
[15;1H|   |-- PackedBinary
[16;1H|   |   |-- EB_ANSYS
[17;1H|   |   |-- EB_ant
[18;1H|   |   |-- EB_BiSearch
[19;1H|   |   |-- EB_Chimera
[20;1H|   |   |-- EB_COMSOL
[21;1H|   |   |-- EB_FDTD_underscore_Solutions
[22;1H|   |   |-- EB_FLUENT
[23;1H|   |   |-- EB_IronPython
[24;1H|   |   |-- EB_Java
[25;1H|   |   |-- EB_MATLAB
[26;1H|   |   |-- EB_MCR
[27;1H|   |   |-- EB_PGI
[28;1H|   |   |-- EB_Samcef
[29;1H|   |   |-- EB_Stata
[30;1H|   |   |-- EB_Tornado
[31;1H|   |   |-- EB_TotalView
[32;1H|   |-- Rpm
[33;1H|   |   |-- EB_Mono
[34;1H|-- Bundle
[35;1H|   |-- BuildEnv
[36;1H|   |-- CrayToolchain
[37;1H|   |-- PythonBundle
[38;1H|   |-- SystemCompiler
[39;1H|   |-- SystemMPI
[40;1H|   |-- Toolchain
[41;1H|-- ConfigureMake
[42;1H|   |-- CMakeMake
[43;1H|   |   |-- CMakePythonPackage
[44;1H|   |   |   |-- EB_DOLFIN
[45;1H|   |   |   |-- EB_UFC
[46;1H|   |   |-- EB_Armadillo
[47;1H|   |   |-- EB_BamTools
[48;1H|   |   |-- EB_CGAL
[49;1H...skipping...
|   |-- EB_[7mflex[27m
|   |-- EB_freetype
|   |-- EB_g2clib
|   |-- EB_g2lib
|   |-- EB_GCC
|   |   |-- SystemCompiler
|   |-- EB_GHC
|   |-- EB_Go
|   |-- EB_HDF5
|   |-- EB_HEALPix
|   |-- EB_HPCG
|   |-- EB_HPL
|   |-- EB_Hypre
|   |-- EB_LAPACK
|   |-- EB_Libint
|   |-- EB_libQGLViewer
|   |-- EB_libxml2
|   |-- EB_MetaVelvet
|   |-- EB_METIS
|   |-- EB_Molpro
|   |-- EB_Mono
|   |-- EB_Mothur
|   |-- EB_MPICH
|   |   |-- EB_MVAPICH2
|   |   |-- EB_psmpi
|   |-- EB_MrBayes
|   |-- EB_MUMmer
|   |-- EB_MUMPS
|   |-- EB_MyMediaLite
|   |-- EB_ncurses
|   |-- EB_netCDF_minus_Fortran
|   |-- EB_NEURON
|   |-- EB_NWChem
|   |-- EB_OCaml
|   |-- EB_Octave
|   |-- EB_OpenSSL
|   |-- EB_Paraver
|   |-- EB_Pasha
|   |-- EB_PDT
|   |-- EB_Perl
|   |-- EB_PETSc
|   |-- EB_pplacer
|   |-- EB_Primer3
|   |-- EB_Python
|   |   |-- EB_Tkinter
|   |-- EB_QScintilla
|   |-- EB_Qt
|   |-- EB_QuantumESPRESSO
:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_FFTW
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_Ferret
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_Extrae
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_ESPResSo
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_ESMF
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_EggLib
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_Doris
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_DL_underscore_POLY_underscore_Classic
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_DB
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_Cufflinks
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_cppcheck
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_Chapel
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_CBLAS
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_bzip2
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_BWA
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_Bowtie
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_BLACS
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_binutils
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_ATLAS
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_ARB
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_Amber
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- ConfigureMakePythonPackage
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_Trilinos
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_SuperLU
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_ROOT
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_PSI
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_OpenCV
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_OpenBabel
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_netCDF
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_GROMACS
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_Geant4
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_GATE
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_Eigen
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_Doxygen
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_DIRAC
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_Clang
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_CGAL
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_BamTools
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_Armadillo
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |   |-- EB_UFC
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |   |-- EB_DOLFIN
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- CMakePythonPackage
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- CMakeMake
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|-- ConfigureMake
[49;1H[K:[K[K [KESCESC[KOO[KBB[K|   |-- EB_GCC
:[K[K [KESCESC[KOO[KBB[K|   |   |-- SystemCompiler
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_GHC
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_Go
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_HDF5
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_HEALPix
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_HPCG
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_HPL
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_Hypre
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_LAPACK
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_Libint
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_libQGLViewer
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_libxml2
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_MetaVelvet
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_METIS
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_Molpro
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_Mono
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_Mothur
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_MPICH
:[K[K [KESCESC[KOO[KBB[K|   |   |-- EB_MVAPICH2
:[K[K [KESCESC[KOO[KBB[K|   |   |-- EB_psmpi
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_MrBayes
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_MUMmer
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_MUMPS
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_MyMediaLite
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_ncurses
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_netCDF_minus_Fortran
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_NEURON
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_NWChem
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_OCaml
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_Octave
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_OpenSSL
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_Paraver
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_Pasha
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_PDT
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_Perl
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_PETSc
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_pplacer
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_Primer3
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_Python
:[K[K [KESCESC[KOO[KBB[K|   |   |-- EB_Tkinter
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_QScintilla
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_Qt
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_QuantumESPRESSO
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_R
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_Ruby
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_SAMtools
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_ScaLAPACK
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_Scalasca1
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_Score_minus_P
:[K[K [KESCESC[KOO[KBB[K|   |-- EB_SHRiMP
:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_GHC
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- SystemCompiler
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_GCC
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_g2lib
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_g2clib
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_freetype
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_[7mflex[27m
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_FFTW
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_Ferret
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_Extrae
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_ESPResSo
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_ESMF
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_EggLib
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_Doris
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_DL_underscore_POLY_underscore_Classic
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_DB
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_Cufflinks
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_cppcheck
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_Chapel
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_CBLAS
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_bzip2
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_BWA
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_Bowtie
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_BLACS
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_binutils
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_ATLAS
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_ARB
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_Amber
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- ConfigureMakePythonPackage
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_Trilinos
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_SuperLU
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_ROOT
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_PSI
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_OpenCV
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_OpenBabel
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_netCDF
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_GROMACS
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_Geant4
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_GATE
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_Eigen
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_Doxygen
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_DIRAC
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_Clang
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_CGAL
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_BamTools
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_Armadillo
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |   |-- EB_UFC
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |   |-- EB_DOLFIN
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- CMakePythonPackage
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- CMakeMake
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|-- ConfigureMake
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- Toolchain
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- SystemMPI
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- SystemCompiler
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- PythonBundle
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- CrayToolchain
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- BuildEnv
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|-- Bundle
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_Mono
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- Rpm
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_TotalView
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_Tornado
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_Stata
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_Samcef
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_PGI
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_MCR
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_MATLAB
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_Java
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_IronPython
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_FLUENT
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_FDTD_underscore_Solutions
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_COMSOL
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_Chimera
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_BiSearch
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_ant
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_ANSYS
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- PackedBinary
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- JAR
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_Molpro
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_Mathematica
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_Maple
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_IMOD
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_EPD
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_CUDA
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_CPLEX
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_Anaconda
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_Allinea
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_ABAQUS
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- Conda
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|-- Binary
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HMEasyBlock
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KAA[K[K:[K[K[?1l>[?1049l]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --list-easyblocks | less[9@=detailed[C[C[C[C[C[C[C
[?1049h[?1h=EasyBlock (easybuild.framework.easyblock)
|-- Binary (easybuild.easyblocks.generic.binary @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/ generic/binary.py)
|   |-- Conda (easybuild.easyblocks.generic.conda @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblock s/generic/conda.py)
|   |-- EB_ABAQUS (easybuild.easyblocks.abaqus @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a /abaqus.py)
|   |-- EB_Allinea (easybuild.easyblocks.allinea @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks /a/allinea.py)
|   |-- EB_Anaconda (easybuild.easyblocks.anaconda @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc ks/a/anaconda.py)
|   |-- EB_CPLEX (easybuild.easyblocks.cplex @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/c plex.py)
|   |-- EB_CUDA (easybuild.easyblocks.cuda @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/cud a.py)
|   |-- EB_EPD (easybuild.easyblocks.epd @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/e/epd.p y)
|   |-- EB_IMOD (easybuild.easyblocks.imod @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/i/imo d.py)
|   |-- EB_Maple (easybuild.easyblocks.maple @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/m aple.py)
|   |-- EB_Mathematica (easybuild.easyblocks.mathematica @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/ea syblocks/m/mathematica.py)
|   |-- EB_Molpro (easybuild.easyblocks.molpro @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m /molpro.py)
|   |-- JAR (easybuild.easyblocks.generic.jar @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/ge neric/jar.py)
|   |-- PackedBinary (easybuild.easyblocks.generic.packedbinary @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easyb uild/easyblocks/generic/packedbinary.py)
|   |   |-- EB_ANSYS (easybuild.easyblocks.ansys @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks /a/ansys.py)
|   |   |-- EB_ant (easybuild.easyblocks.ant @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a/a nt.py)
|   |   |-- EB_BiSearch (easybuild.easyblocks.bisearch @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easy blocks/b/bisearch.py)
|   |   |-- EB_Chimera (easybuild.easyblocks.chimera @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybl ocks/c/chimera.py)
|   |   |-- EB_COMSOL (easybuild.easyblocks.comsol @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc ks/c/comsol.py)
|   |   |-- EB_FDTD_underscore_Solutions (easybuild.easyblocks.fdtd_solutions @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-p y2.7.egg/easybuild/easyblocks/f/fdtd_solutions.py)
|   |   |-- EB_FLUENT (easybuild.easyblocks.fluent @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc ks/f/fluent.py)
|   |   |-- EB_IronPython (easybuild.easyblocks.ironpython @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/ easyblocks/i/ironpython.py)
|   |   |-- EB_Java (easybuild.easyblocks.java @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/j /java.py)
|   |   |-- EB_MATLAB (easybuild.easyblocks.matlab @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc :[K[K [KESCESC[KOO[KAA[K[K:[K[K [KESCESC[KOO[KBB[Kks/m/matlab.py)
:[K[K [KESCESC[KOO[KBB[K|   |   |-- EB_MCR (easybuild.easyblocks.mcr @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/m :[K[K [KESCESC[KOO[KBB[Kcr.py)
:[K[K [KESCESC[KOO[KBB[K|   |   |-- EB_PGI (easybuild.easyblocks.pgi @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/p/p :[K[K [KESCESC[KOO[KBB[Kgi.py)
:[K[K [KESCESC[KOO[KBB[K|   |   |-- EB_Samcef (easybuild.easyblocks.samcef @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc :[K[K [KESCESC[KOO[KBB[Kks/s/samcef.py)
:[K[K [KESCESC[KOO[KBB[K|   |   |-- EB_Stata (easybuild.easyblocks.stata @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks :[K[K [KESCESC[KOO[KBB[K/s/stata.py)
:[K[K [KESCESC[KOO[KBB[K|   |   |-- EB_Tornado (easybuild.easyblocks.tornado @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybl :[K[K [KESCESC[KOO[KBB[Kocks/t/tornado.py)
:[K[K [KESCESC[KOO[KBB[K|   |   |-- EB_TotalView (easybuild.easyblocks.totalview @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/ea :[K[K [KESCESC[KOO[KBB[Ksyblocks/t/totalview.py)
:[K[K [KESCESC[KOO[KBB[K|   |-- Rpm (easybuild.easyblocks.generic.rpm @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/ge :[K[K [KESCESC[KOO[KBB[Kneric/rpm.py)
:[K[K [KESCESC[KOO[KBB[K|   |   |-- EB_Mono (easybuild.easyblocks.mono @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m :[K[K [KESCESC[KOO[KBB[K/mono.py)
:[K[K[?1l>[?1049l]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --list-easyblocks=detailed | less[9P[C[C[C[C[C[C[C
[?1049h[?1h=EasyBlock
|-- Binary
|   |-- Conda
|   |-- EB_ABAQUS
|   |-- EB_Allinea
|   |-- EB_Anaconda
|   |-- EB_CPLEX
|   |-- EB_CUDA
|   |-- EB_EPD
|   |-- EB_IMOD
|   |-- EB_Maple
|   |-- EB_Mathematica
|   |-- EB_Molpro
|   |-- JAR
|   |-- PackedBinary
|   |   |-- EB_ANSYS
|   |   |-- EB_ant
|   |   |-- EB_BiSearch
|   |   |-- EB_Chimera
|   |   |-- EB_COMSOL
|   |   |-- EB_FDTD_underscore_Solutions
|   |   |-- EB_FLUENT
|   |   |-- EB_IronPython
|   |   |-- EB_Java
|   |   |-- EB_MATLAB
|   |   |-- EB_MCR
|   |   |-- EB_PGI
|   |   |-- EB_Samcef
|   |   |-- EB_Stata
|   |   |-- EB_Tornado
|   |   |-- EB_TotalView
|   |-- Rpm
|   |   |-- EB_Mono
|-- Bundle
|   |-- BuildEnv
|   |-- CrayToolchain
|   |-- PythonBundle
|   |-- SystemCompiler
|   |-- SystemMPI
|   |-- Toolchain
|-- ConfigureMake
|   |-- CMakeMake
|   |   |-- CMakePythonPackage
|   |   |   |-- EB_DOLFIN
|   |   |   |-- EB_UFC
|   |   |-- EB_Armadillo
|   |   |-- EB_BamTools
|   |   |-- EB_CGAL
:[K[K [KESCESC[K[[[K66[K~~[K|   |   |-- EB_Clang
|   |   |-- EB_DIRAC
|   |   |-- EB_Doxygen
|   |   |-- EB_Eigen
|   |   |-- EB_GATE
|   |   |-- EB_Geant4
|   |   |-- EB_GROMACS
|   |   |-- EB_netCDF
|   |   |-- EB_OpenBabel
|   |   |-- EB_OpenCV
|   |   |-- EB_PSI
|   |   |-- EB_ROOT
|   |   |-- EB_SuperLU
|   |   |-- EB_Trilinos
|   |-- ConfigureMakePythonPackage
|   |-- EB_Amber
|   |-- EB_ARB
|   |-- EB_ATLAS
|   |-- EB_binutils
|   |-- EB_BLACS
|   |-- EB_Bowtie
|   |-- EB_BWA
|   |-- EB_bzip2
|   |-- EB_CBLAS
|   |-- EB_Chapel
|   |-- EB_cppcheck
|   |-- EB_Cufflinks
|   |-- EB_DB
|   |-- EB_DL_underscore_POLY_underscore_Classic
|   |-- EB_Doris
|   |-- EB_EggLib
|   |-- EB_ESMF
|   |-- EB_ESPResSo
|   |-- EB_Extrae
|   |-- EB_Ferret
|   |-- EB_FFTW
|   |-- EB_flex
|   |-- EB_freetype
|   |-- EB_g2clib
|   |-- EB_g2lib
|   |-- EB_GCC
|   |   |-- SystemCompiler
|   |-- EB_GHC
|   |-- EB_Go
|   |-- EB_HDF5
|   |-- EB_HEALPix
|   |-- EB_HPCG
|   |-- EB_HPL
:[K[K [KESCESC[K[[[K66[K~~[K|   |-- EB_Hypre
|   |-- EB_LAPACK
|   |-- EB_Libint
|   |-- EB_libQGLViewer
|   |-- EB_libxml2
|   |-- EB_MetaVelvet
|   |-- EB_METIS
|   |-- EB_Molpro
|   |-- EB_Mono
|   |-- EB_Mothur
|   |-- EB_MPICH
|   |   |-- EB_MVAPICH2
|   |   |-- EB_psmpi
|   |-- EB_MrBayes
|   |-- EB_MUMmer
|   |-- EB_MUMPS
|   |-- EB_MyMediaLite
|   |-- EB_ncurses
|   |-- EB_netCDF_minus_Fortran
|   |-- EB_NEURON
|   |-- EB_NWChem
|   |-- EB_OCaml
|   |-- EB_Octave
|   |-- EB_OpenSSL
|   |-- EB_Paraver
|   |-- EB_Pasha
|   |-- EB_PDT
|   |-- EB_Perl
|   |-- EB_PETSc
|   |-- EB_pplacer
|   |-- EB_Primer3
|   |-- EB_Python
|   |   |-- EB_Tkinter
|   |-- EB_QScintilla
|   |-- EB_Qt
|   |-- EB_QuantumESPRESSO
|   |-- EB_R
|   |-- EB_Ruby
|   |-- EB_SAMtools
|   |-- EB_ScaLAPACK
|   |-- EB_Scalasca1
|   |-- EB_Score_minus_P
|   |-- EB_SHRiMP
|   |-- EB_Siesta
|   |-- EB_SLEPc
|   |-- EB_SOAPdenovo
|   |-- EB_SuiteSparse
|   |-- EB_SWIG
:[K[K/[Kff[Kll[Kee[Kxx[K[1;1H|   |-- EB_Hypre
[2;1H|   |-- EB_LAPACK
[3;1H|   |-- EB_Libint
[4;1H|   |-- EB_libQGLViewer
[5;1H|   |-- EB_libxml2
[6;1H|   |-- EB_MetaVelvet
[7;1H|   |-- EB_METIS
[8;1H|   |-- EB_Molpro
[9;1H|   |-- EB_Mono
[10;1H|   |-- EB_Mothur
[11;1H|   |-- EB_MPICH
[12;1H|   |   |-- EB_MVAPICH2
[13;1H|   |   |-- EB_psmpi
[14;1H|   |-- EB_MrBayes
[15;1H|   |-- EB_MUMmer
[16;1H|   |-- EB_MUMPS
[17;1H|   |-- EB_MyMediaLite
[18;1H|   |-- EB_ncurses
[19;1H|   |-- EB_netCDF_minus_Fortran
[20;1H|   |-- EB_NEURON
[21;1H|   |-- EB_NWChem
[22;1H|   |-- EB_OCaml
[23;1H|   |-- EB_Octave
[24;1H|   |-- EB_OpenSSL
[25;1H|   |-- EB_Paraver
[26;1H|   |-- EB_Pasha
[27;1H|   |-- EB_PDT
[28;1H|   |-- EB_Perl
[29;1H|   |-- EB_PETSc
[30;1H|   |-- EB_pplacer
[31;1H|   |-- EB_Primer3
[32;1H|   |-- EB_Python
[33;1H|   |   |-- EB_Tkinter
[34;1H|   |-- EB_QScintilla
[35;1H|   |-- EB_Qt
[36;1H|   |-- EB_QuantumESPRESSO
[37;1H|   |-- EB_R
[38;1H|   |-- EB_Ruby
[39;1H|   |-- EB_SAMtools
[40;1H|   |-- EB_ScaLAPACK
[41;1H|   |-- EB_Scalasca1
[42;1H|   |-- EB_Score_minus_P
[43;1H|   |-- EB_SHRiMP
[44;1H|   |-- EB_Siesta
[45;1H|   |-- EB_SLEPc
[46;1H|   |-- EB_SOAPdenovo
[47;1H|   |-- EB_SuiteSparse
[48;1H|   |-- EB_SWIG
[49;1H[1;1H|   |-- EB_Hypre
[2;1H|   |-- EB_LAPACK
[3;1H|   |-- EB_Libint
[4;1H|   |-- EB_libQGLViewer
[5;1H|   |-- EB_libxml2
[6;1H|   |-- EB_MetaVelvet
[7;1H|   |-- EB_METIS
[8;1H|   |-- EB_Molpro
[9;1H|   |-- EB_Mono
[10;1H|   |-- EB_Mothur
[11;1H|   |-- EB_MPICH
[12;1H|   |   |-- EB_MVAPICH2
[13;1H|   |   |-- EB_psmpi
[14;1H|   |-- EB_MrBayes
[15;1H|   |-- EB_MUMmer
[16;1H|   |-- EB_MUMPS
[17;1H|   |-- EB_MyMediaLite
[18;1H|   |-- EB_ncurses
[19;1H|   |-- EB_netCDF_minus_Fortran
[20;1H|   |-- EB_NEURON
[21;1H|   |-- EB_NWChem
[22;1H|   |-- EB_OCaml
[23;1H|   |-- EB_Octave
[24;1H|   |-- EB_OpenSSL
[25;1H|   |-- EB_Paraver
[26;1H|   |-- EB_Pasha
[27;1H|   |-- EB_PDT
[28;1H|   |-- EB_Perl
[29;1H|   |-- EB_PETSc
[30;1H|   |-- EB_pplacer
[31;1H|   |-- EB_Primer3
[32;1H|   |-- EB_Python
[33;1H|   |   |-- EB_Tkinter
[34;1H|   |-- EB_QScintilla
[35;1H|   |-- EB_Qt
[36;1H|   |-- EB_QuantumESPRESSO
[37;1H|   |-- EB_R
[38;1H|   |-- EB_Ruby
[39;1H|   |-- EB_SAMtools
[40;1H|   |-- EB_ScaLAPACK
[41;1H|   |-- EB_Scalasca1
[42;1H|   |-- EB_Score_minus_P
[43;1H|   |-- EB_SHRiMP
[44;1H|   |-- EB_Siesta
[45;1H|   |-- EB_SLEPc
[46;1H|   |-- EB_SOAPdenovo
[47;1H|   |-- EB_SuiteSparse
[48;1H|   |-- EB_SWIG
[49;1H[K[7mPattern not found  (press RETURN)[27m[49;1H[K[K [KESCESC[K[[[K55[K~~[K[HM|   |-- EB_HPL
[HM|   |-- EB_HPCG
[HM|   |-- EB_HEALPix
[HM|   |-- EB_HDF5
[HM|   |-- EB_Go
[HM|   |-- EB_GHC
[HM|   |   |-- SystemCompiler
[HM|   |-- EB_GCC
[HM|   |-- EB_g2lib
[HM|   |-- EB_g2clib
[HM|   |-- EB_freetype
[HM|   |-- EB_[7mflex[27m
[HM|   |-- EB_FFTW
[HM|   |-- EB_Ferret
[HM|   |-- EB_Extrae
[HM|   |-- EB_ESPResSo
[HM|   |-- EB_ESMF
[HM|   |-- EB_EggLib
[HM|   |-- EB_Doris
[HM|   |-- EB_DL_underscore_POLY_underscore_Classic
[HM|   |-- EB_DB
[HM|   |-- EB_Cufflinks
[HM|   |-- EB_cppcheck
[HM|   |-- EB_Chapel
[HM|   |-- EB_CBLAS
[HM|   |-- EB_bzip2
[HM|   |-- EB_BWA
[HM|   |-- EB_Bowtie
[HM|   |-- EB_BLACS
[HM|   |-- EB_binutils
[HM|   |-- EB_ATLAS
[HM|   |-- EB_ARB
[HM|   |-- EB_Amber
[HM|   |-- ConfigureMakePythonPackage
[HM|   |   |-- EB_Trilinos
[HM|   |   |-- EB_SuperLU
[HM|   |   |-- EB_ROOT
[HM|   |   |-- EB_PSI
[HM|   |   |-- EB_OpenCV
[HM|   |   |-- EB_OpenBabel
[HM|   |   |-- EB_netCDF
[HM|   |   |-- EB_GROMACS
[HM|   |   |-- EB_Geant4
[HM|   |   |-- EB_GATE
[HM|   |   |-- EB_Eigen
[HM|   |   |-- EB_Doxygen
[HM|   |   |-- EB_DIRAC
[HM|   |   |-- EB_Clang
[49;1H[K:[K[K [KESCESC[K[[[K55[K~~[K[HM|   |   |-- EB_CGAL
[HM|   |   |-- EB_BamTools
[HM|   |   |-- EB_Armadillo
[HM|   |   |   |-- EB_UFC
[HM|   |   |   |-- EB_DOLFIN
[HM|   |   |-- CMakePythonPackage
[HM|   |-- CMakeMake
[HM|-- ConfigureMake
[HM|   |-- Toolchain
[HM|   |-- SystemMPI
[HM|   |-- SystemCompiler
[HM|   |-- PythonBundle
[HM|   |-- CrayToolchain
[HM|   |-- BuildEnv
[HM|-- Bundle
[HM|   |   |-- EB_Mono
[HM|   |-- Rpm
[HM|   |   |-- EB_TotalView
[HM|   |   |-- EB_Tornado
[HM|   |   |-- EB_Stata
[HM|   |   |-- EB_Samcef
[HM|   |   |-- EB_PGI
[HM|   |   |-- EB_MCR
[HM|   |   |-- EB_MATLAB
[HM|   |   |-- EB_Java
[HM|   |   |-- EB_IronPython
[HM|   |   |-- EB_FLUENT
[HM|   |   |-- EB_FDTD_underscore_Solutions
[HM|   |   |-- EB_COMSOL
[HM|   |   |-- EB_Chimera
[HM|   |   |-- EB_BiSearch
[HM|   |   |-- EB_ant
[HM|   |   |-- EB_ANSYS
[HM|   |-- PackedBinary
[HM|   |-- JAR
[HM|   |-- EB_Molpro
[HM|   |-- EB_Mathematica
[HM|   |-- EB_Maple
[HM|   |-- EB_IMOD
[HM|   |-- EB_EPD
[HM|   |-- EB_CUDA
[HM|   |-- EB_CPLEX
[HM|   |-- EB_Anaconda
[HM|   |-- EB_Allinea
[HM|   |-- EB_ABAQUS
[HM|   |-- Conda
[HM|-- Binary
[HMEasyBlock
[49;1H[K:[K[K [KESCESC[K[[[K55[K~~[K[K:[K[K [KESCESC[K[[[K55[K~~[K[K:[K[K [KESCESC[K[[[K55[K~~[K[K:[K[K [KESCESC[K[[[K55[K~~[K[K:[K[K [KESCESC[K[[[K55[K~~[K[K:[K[K [KESCESC[K[[[K55[K~~[K[K:[K[K [KESCESC[K[[[K55[K~~[K[K:[K[K [KESCESC[K[[[K55[K~~[K[K:[K[K [KESCESC[K[[[K55[K~~[K[K:[K[K [KESCESC[K[[[K55[K~~[K[K:[K[K [KESCESC[K[[[K55[K~~[K[K:[K[K/[Kff[Kll[Kee[Kxx[K[1;1HEasyBlock
[2;1H|-- Binary
[3;1H|   |-- Conda
[4;1H|   |-- EB_ABAQUS
[5;1H|   |-- EB_Allinea
[6;1H|   |-- EB_Anaconda
[7;1H|   |-- EB_CPLEX
[8;1H|   |-- EB_CUDA
[9;1H|   |-- EB_EPD
[10;1H|   |-- EB_IMOD
[11;1H|   |-- EB_Maple
[12;1H|   |-- EB_Mathematica
[13;1H|   |-- EB_Molpro
[14;1H|   |-- JAR
[15;1H|   |-- PackedBinary
[16;1H|   |   |-- EB_ANSYS
[17;1H|   |   |-- EB_ant
[18;1H|   |   |-- EB_BiSearch
[19;1H|   |   |-- EB_Chimera
[20;1H|   |   |-- EB_COMSOL
[21;1H|   |   |-- EB_FDTD_underscore_Solutions
[22;1H|   |   |-- EB_FLUENT
[23;1H|   |   |-- EB_IronPython
[24;1H|   |   |-- EB_Java
[25;1H|   |   |-- EB_MATLAB
[26;1H|   |   |-- EB_MCR
[27;1H|   |   |-- EB_PGI
[28;1H|   |   |-- EB_Samcef
[29;1H|   |   |-- EB_Stata
[30;1H|   |   |-- EB_Tornado
[31;1H|   |   |-- EB_TotalView
[32;1H|   |-- Rpm
[33;1H|   |   |-- EB_Mono
[34;1H|-- Bundle
[35;1H|   |-- BuildEnv
[36;1H|   |-- CrayToolchain
[37;1H|   |-- PythonBundle
[38;1H|   |-- SystemCompiler
[39;1H|   |-- SystemMPI
[40;1H|   |-- Toolchain
[41;1H|-- ConfigureMake
[42;1H|   |-- CMakeMake
[43;1H|   |   |-- CMakePythonPackage
[44;1H|   |   |   |-- EB_DOLFIN
[45;1H|   |   |   |-- EB_UFC
[46;1H|   |   |-- EB_Armadillo
[47;1H|   |   |-- EB_BamTools
[48;1H|   |   |-- EB_CGAL
[49;1H[1;1HEasyBlock
[2;1H|-- Binary
[3;1H|   |-- Conda
[4;1H|   |-- EB_ABAQUS
[5;1H|   |-- EB_Allinea
[6;1H|   |-- EB_Anaconda
[7;1H|   |-- EB_CPLEX
[8;1H|   |-- EB_CUDA
[9;1H|   |-- EB_EPD
[10;1H|   |-- EB_IMOD
[11;1H|   |-- EB_Maple
[12;1H|   |-- EB_Mathematica
[13;1H|   |-- EB_Molpro
[14;1H|   |-- JAR
[15;1H|   |-- PackedBinary
[16;1H|   |   |-- EB_ANSYS
[17;1H|   |   |-- EB_ant
[18;1H|   |   |-- EB_BiSearch
[19;1H|   |   |-- EB_Chimera
[20;1H|   |   |-- EB_COMSOL
[21;1H|   |   |-- EB_FDTD_underscore_Solutions
[22;1H|   |   |-- EB_FLUENT
[23;1H|   |   |-- EB_IronPython
[24;1H|   |   |-- EB_Java
[25;1H|   |   |-- EB_MATLAB
[26;1H|   |   |-- EB_MCR
[27;1H|   |   |-- EB_PGI
[28;1H|   |   |-- EB_Samcef
[29;1H|   |   |-- EB_Stata
[30;1H|   |   |-- EB_Tornado
[31;1H|   |   |-- EB_TotalView
[32;1H|   |-- Rpm
[33;1H|   |   |-- EB_Mono
[34;1H|-- Bundle
[35;1H|   |-- BuildEnv
[36;1H|   |-- CrayToolchain
[37;1H|   |-- PythonBundle
[38;1H|   |-- SystemCompiler
[39;1H|   |-- SystemMPI
[40;1H|   |-- Toolchain
[41;1H|-- ConfigureMake
[42;1H|   |-- CMakeMake
[43;1H|   |   |-- CMakePythonPackage
[44;1H|   |   |   |-- EB_DOLFIN
[45;1H|   |   |   |-- EB_UFC
[46;1H|   |   |-- EB_Armadillo
[47;1H|   |   |-- EB_BamTools
[48;1H|   |   |-- EB_CGAL
[49;1H...skipping...
|   |-- EB_[7mflex[27m
|   |-- EB_freetype
|   |-- EB_g2clib
|   |-- EB_g2lib
|   |-- EB_GCC
|   |   |-- SystemCompiler
|   |-- EB_GHC
|   |-- EB_Go
|   |-- EB_HDF5
|   |-- EB_HEALPix
|   |-- EB_HPCG
|   |-- EB_HPL
|   |-- EB_Hypre
|   |-- EB_LAPACK
|   |-- EB_Libint
|   |-- EB_libQGLViewer
|   |-- EB_libxml2
|   |-- EB_MetaVelvet
|   |-- EB_METIS
|   |-- EB_Molpro
|   |-- EB_Mono
|   |-- EB_Mothur
|   |-- EB_MPICH
|   |   |-- EB_MVAPICH2
|   |   |-- EB_psmpi
|   |-- EB_MrBayes
|   |-- EB_MUMmer
|   |-- EB_MUMPS
|   |-- EB_MyMediaLite
|   |-- EB_ncurses
|   |-- EB_netCDF_minus_Fortran
|   |-- EB_NEURON
|   |-- EB_NWChem
|   |-- EB_OCaml
|   |-- EB_Octave
|   |-- EB_OpenSSL
|   |-- EB_Paraver
|   |-- EB_Pasha
|   |-- EB_PDT
|   |-- EB_Perl
|   |-- EB_PETSc
|   |-- EB_pplacer
|   |-- EB_Primer3
|   |-- EB_Python
|   |   |-- EB_Tkinter
|   |-- EB_QScintilla
|   |-- EB_Qt
|   |-- EB_QuantumESPRESSO
:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_FFTW
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_Ferret
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_Extrae
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_ESPResSo
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_ESMF
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_EggLib
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_Doris
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_DL_underscore_POLY_underscore_Classic
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_DB
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_Cufflinks
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_cppcheck
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_Chapel
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_CBLAS
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_bzip2
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_BWA
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_Bowtie
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_BLACS
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_binutils
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_ATLAS
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_ARB
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- EB_Amber
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- ConfigureMakePythonPackage
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_Trilinos
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_SuperLU
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_ROOT
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_PSI
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_OpenCV
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_OpenBabel
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_netCDF
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_GROMACS
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_Geant4
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_GATE
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_Eigen
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_Doxygen
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_DIRAC
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_Clang
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_CGAL
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_BamTools
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_Armadillo
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |   |-- EB_UFC
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |   |-- EB_DOLFIN
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- CMakePythonPackage
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- CMakeMake
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|-- ConfigureMake
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- Toolchain
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- SystemMPI
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- SystemCompiler
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- PythonBundle
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- CrayToolchain
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- BuildEnv
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|-- Bundle
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_Mono
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |-- Rpm
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_TotalView
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_Tornado
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_Stata
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_Samcef
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_PGI
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_MCR
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_MATLAB
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM|   |   |-- EB_Java
[49;1H[K:[K[K[?1l>[?1049l]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --list-easyblocks | less[9@=detailed[C[C[C[C[C[C[C
[?1049h[?1h=EasyBlock (easybuild.framework.easyblock)
|-- Binary (easybuild.easyblocks.generic.binary @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/ generic/binary.py)
|   |-- Conda (easybuild.easyblocks.generic.conda @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblock s/generic/conda.py)
|   |-- EB_ABAQUS (easybuild.easyblocks.abaqus @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a /abaqus.py)
|   |-- EB_Allinea (easybuild.easyblocks.allinea @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks /a/allinea.py)
|   |-- EB_Anaconda (easybuild.easyblocks.anaconda @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc ks/a/anaconda.py)
|   |-- EB_CPLEX (easybuild.easyblocks.cplex @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/c plex.py)
|   |-- EB_CUDA (easybuild.easyblocks.cuda @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/cud a.py)
|   |-- EB_EPD (easybuild.easyblocks.epd @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/e/epd.p y)
|   |-- EB_IMOD (easybuild.easyblocks.imod @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/i/imo d.py)
|   |-- EB_Maple (easybuild.easyblocks.maple @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/m aple.py)
|   |-- EB_Mathematica (easybuild.easyblocks.mathematica @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/ea syblocks/m/mathematica.py)
|   |-- EB_Molpro (easybuild.easyblocks.molpro @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m /molpro.py)
|   |-- JAR (easybuild.easyblocks.generic.jar @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/ge neric/jar.py)
|   |-- PackedBinary (easybuild.easyblocks.generic.packedbinary @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easyb uild/easyblocks/generic/packedbinary.py)
|   |   |-- EB_ANSYS (easybuild.easyblocks.ansys @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks /a/ansys.py)
|   |   |-- EB_ant (easybuild.easyblocks.ant @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a/a nt.py)
|   |   |-- EB_BiSearch (easybuild.easyblocks.bisearch @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easy blocks/b/bisearch.py)
|   |   |-- EB_Chimera (easybuild.easyblocks.chimera @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybl ocks/c/chimera.py)
|   |   |-- EB_COMSOL (easybuild.easyblocks.comsol @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc ks/c/comsol.py)
|   |   |-- EB_FDTD_underscore_Solutions (easybuild.easyblocks.fdtd_solutions @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-p y2.7.egg/easybuild/easyblocks/f/fdtd_solutions.py)
|   |   |-- EB_FLUENT (easybuild.easyblocks.fluent @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc ks/f/fluent.py)
|   |   |-- EB_IronPython (easybuild.easyblocks.ironpython @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/ easyblocks/i/ironpython.py)
|   |   |-- EB_Java (easybuild.easyblocks.java @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/j /java.py)
|   |   |-- EB_MATLAB (easybuild.easyblocks.matlab @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc :[K[K/[KCC[Kmm[Kaa[Kkk[Kee[K[K[K[K[KMM[Kaa[Kkk[Kee[KMM[Kaa[Kkk[Kee[K[1;1HEasyBlock (easybuild.framework.easyblock)
[2;1H|-- Binary (easybuild.easyblocks.generic.binary @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/ [3;1Hgeneric/binary.py)
[4;1H|   |-- Conda (easybuild.easyblocks.generic.conda @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblock [5;1Hs/generic/conda.py)
[6;1H|   |-- EB_ABAQUS (easybuild.easyblocks.abaqus @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a [7;1H/abaqus.py)
[8;1H|   |-- EB_Allinea (easybuild.easyblocks.allinea @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks [9;1H/a/allinea.py)
[10;1H|   |-- EB_Anaconda (easybuild.easyblocks.anaconda @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc [11;1Hks/a/anaconda.py)
[12;1H|   |-- EB_CPLEX (easybuild.easyblocks.cplex @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/c [13;1Hplex.py)
[14;1H|   |-- EB_CUDA (easybuild.easyblocks.cuda @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/cud [15;1Ha.py)
[16;1H|   |-- EB_EPD (easybuild.easyblocks.epd @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/e/epd.p [17;1Hy)
[18;1H|   |-- EB_IMOD (easybuild.easyblocks.imod @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/i/imo [19;1Hd.py)
[20;1H|   |-- EB_Maple (easybuild.easyblocks.maple @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/m [21;1Haple.py)
[22;1H|   |-- EB_Mathematica (easybuild.easyblocks.mathematica @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/ea [23;1Hsyblocks/m/mathematica.py)
[24;1H|   |-- EB_Molpro (easybuild.easyblocks.molpro @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m [25;1H/molpro.py)
[26;1H|   |-- JAR (easybuild.easyblocks.generic.jar @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/ge [27;1Hneric/jar.py)
[28;1H|   |-- PackedBinary (easybuild.easyblocks.generic.packedbinary @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easyb [29;1Huild/easyblocks/generic/packedbinary.py)
[30;1H|   |   |-- EB_ANSYS (easybuild.easyblocks.ansys @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks [31;1H/a/ansys.py)
[32;1H|   |   |-- EB_ant (easybuild.easyblocks.ant @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a/a [33;1Hnt.py)
[34;1H|   |   |-- EB_BiSearch (easybuild.easyblocks.bisearch @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easy [35;1Hblocks/b/bisearch.py)
[36;1H|   |   |-- EB_Chimera (easybuild.easyblocks.chimera @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybl [37;1Hocks/c/chimera.py)
[38;1H|   |   |-- EB_COMSOL (easybuild.easyblocks.comsol @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc [39;1Hks/c/comsol.py)
[40;1H|   |   |-- EB_FDTD_underscore_Solutions (easybuild.easyblocks.fdtd_solutions @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-p [41;1Hy2.7.egg/easybuild/easyblocks/f/fdtd_solutions.py)
[42;1H|   |   |-- EB_FLUENT (easybuild.easyblocks.fluent @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc [43;1Hks/f/fluent.py)
[44;1H|   |   |-- EB_IronPython (easybuild.easyblocks.ironpython @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/ [45;1Heasyblocks/i/ironpython.py)
[46;1H|   |   |-- EB_Java (easybuild.easyblocks.java @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/j [47;1H/java.py)
[48;1H|   |   |-- EB_MATLAB (easybuild.easyblocks.matlab @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc [49;1H[1;1HEasyBlock (easybuild.framework.easyblock)
[2;1H|-- Binary (easybuild.easyblocks.generic.binary @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/ [3;1Hgeneric/binary.py)
[4;1H|   |-- Conda (easybuild.easyblocks.generic.conda @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblock [5;1Hs/generic/conda.py)
[6;1H|   |-- EB_ABAQUS (easybuild.easyblocks.abaqus @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a [7;1H/abaqus.py)
[8;1H|   |-- EB_Allinea (easybuild.easyblocks.allinea @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks [9;1H/a/allinea.py)
[10;1H|   |-- EB_Anaconda (easybuild.easyblocks.anaconda @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc [11;1Hks/a/anaconda.py)
[12;1H|   |-- EB_CPLEX (easybuild.easyblocks.cplex @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/c [13;1Hplex.py)
[14;1H|   |-- EB_CUDA (easybuild.easyblocks.cuda @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c/cud [15;1Ha.py)
[16;1H|   |-- EB_EPD (easybuild.easyblocks.epd @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/e/epd.p [17;1Hy)
[18;1H|   |-- EB_IMOD (easybuild.easyblocks.imod @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/i/imo [19;1Hd.py)
[20;1H|   |-- EB_Maple (easybuild.easyblocks.maple @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m/m [21;1Haple.py)
[22;1H|   |-- EB_Mathematica (easybuild.easyblocks.mathematica @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/ea [23;1Hsyblocks/m/mathematica.py)
[24;1H|   |-- EB_Molpro (easybuild.easyblocks.molpro @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/m [25;1H/molpro.py)
[26;1H|   |-- JAR (easybuild.easyblocks.generic.jar @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/ge [27;1Hneric/jar.py)
[28;1H|   |-- PackedBinary (easybuild.easyblocks.generic.packedbinary @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easyb [29;1Huild/easyblocks/generic/packedbinary.py)
[30;1H|   |   |-- EB_ANSYS (easybuild.easyblocks.ansys @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks [31;1H/a/ansys.py)
[32;1H|   |   |-- EB_ant (easybuild.easyblocks.ant @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a/a [33;1Hnt.py)
[34;1H|   |   |-- EB_BiSearch (easybuild.easyblocks.bisearch @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easy [35;1Hblocks/b/bisearch.py)
[36;1H|   |   |-- EB_Chimera (easybuild.easyblocks.chimera @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybl [37;1Hocks/c/chimera.py)
[38;1H|   |   |-- EB_COMSOL (easybuild.easyblocks.comsol @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc [39;1Hks/c/comsol.py)
[40;1H|   |   |-- EB_FDTD_underscore_Solutions (easybuild.easyblocks.fdtd_solutions @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-p [41;1Hy2.7.egg/easybuild/easyblocks/f/fdtd_solutions.py)
[42;1H|   |   |-- EB_FLUENT (easybuild.easyblocks.fluent @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc [43;1Hks/f/fluent.py)
[44;1H|   |   |-- EB_IronPython (easybuild.easyblocks.ironpython @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/ [45;1Heasyblocks/i/ironpython.py)
[46;1H|   |   |-- EB_Java (easybuild.easyblocks.java @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/j [47;1H/java.py)
[48;1H|   |   |-- EB_MATLAB (easybuild.easyblocks.matlab @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc [49;1H...skipping...
|   |-- [7mCMakeMake[27m (easybuild.easyblocks.generic.cmakemake @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/e asyblocks/generic/cmakemake.py)
|   |   |-- CMakePythonPackage (easybuild.easyblocks.generic.cmakepythonpackage @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1 -py2.7.egg/easybuild/easyblocks/generic/cmakepythonpackage.py)
|   |   |   |-- EB_DOLFIN (easybuild.easyblocks.dolfin @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easy blocks/d/dolfin.py)
|   |   |   |-- EB_UFC (easybuild.easyblocks.ufc @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks /u/ufc.py)
|   |   |-- EB_Armadillo (easybuild.easyblocks.armadillo @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/ea syblocks/a/armadillo.py)
|   |   |-- EB_BamTools (easybuild.easyblocks.bamtools @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easy blocks/b/bamtools.py)
|   |   |-- EB_CGAL (easybuild.easyblocks.cgal @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/c /cgal.py)
|   |   |-- EB_Clang (easybuild.easyblocks.clang @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks /c/clang.py)
|   |   |-- EB_DIRAC (easybuild.easyblocks.dirac @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks /d/dirac.py)
|   |   |-- EB_Doxygen (easybuild.easyblocks.doxygen @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybl ocks/d/doxygen.py)
|   |   |-- EB_Eigen (easybuild.easyblocks.eigen @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks /e/eigen.py)
|   |   |-- EB_GATE (easybuild.easyblocks.gate @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/g /gate.py)
|   |   |-- EB_Geant4 (easybuild.easyblocks.geant4 @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc ks/g/geant4.py)
|   |   |-- EB_GROMACS (easybuild.easyblocks.gromacs @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybl ocks/g/gromacs.py)
|   |   |-- EB_netCDF (easybuild.easyblocks.netcdf @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc ks/n/netcdf.py)
|   |   |-- EB_OpenBabel (easybuild.easyblocks.openbabel @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/ea syblocks/o/openbabel.py)
|   |   |-- EB_OpenCV (easybuild.easyblocks.opencv @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybloc ks/o/opencv.py)
|   |   |-- EB_PSI (easybuild.easyblocks.psi @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/p/p si.py)
|   |   |-- EB_ROOT (easybuild.easyblocks.root @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/r /root.py)
|   |   |-- EB_SuperLU (easybuild.easyblocks.superlu @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easybl ocks/s/superlu.py)
|   |   |-- EB_Trilinos (easybuild.easyblocks.trilinos @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easy blocks/t/trilinos.py)
|   |-- ConfigureMakePythonPackage (easybuild.easyblocks.generic.configuremakepythonpackage @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easy blocks-3.8.1-py2.7.egg/easybuild/easyblocks/generic/configuremakepythonpackage.py)
|   |-- EB_Amber (easybuild.easyblocks.amber @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a/a mber.py)
|   |-- EB_ARB (easybuild.easyblocks.arb @ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyblocks-3.8.1-py2.7.egg/easybuild/easyblocks/a/arb.p y)
:[K[K[?1l>[?1049l]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --list-easyblocks=detailed | less[9P[C[C[C[C[C[C[C[9@=detailed[C[C[C[C[C[C[C[9P[C[C[C[C[C[C[C[9@=detailed[C[C[C[C[C[C[C[K[13Phelp | less
[?1049h[?1h=Usage: eb [options] easyconfig [...]

Builds software based on easyconfig (or parse a directory). Provide one or more easyconfigs or directories, use -H or --help more information.

Options:
  --version             show program's version number and exit
  -h, --shorthelp       show short help message and exit
  -H OUTPUT_FORMAT, --help=OUTPUT_FORMAT
                        show full help message and exit
  --confighelp          show help as annotated configfile

  Debug and logging options (configfile section MAIN):
    -d, --debug         Enable debug log mode (def False)
    --info              Enable info log mode (def False)
    --quiet             Enable quiet/warning log mode (def False)

  Configfile options:
    --configfiles=CONFIGFILES
                        Parse (additional) configfiles (type comma-separated list; def /home/romain.pereira/.config/easybuild/config.cfg)
    --ignoreconfigfiles=IGNORECONFIGFILES
                        Ignore configfiles (type comma-separated list)

  Basic options:
    Basic runtime options for EasyBuild. (configfile section basic)

    --dry-run           Print build overview incl. dependencies (full paths) (def False)
    -D, --dry-run-short
                        Print build overview incl. dependencies (short paths) (def False)
    -x, --extended-dry-run
                        Print build environment and (expected) build procedure that will be performed (def False)
    --extended-dry-run-ignore-errors
                        Ignore errors that occur during dry run (def True)
    -f, --force         Force to rebuild software even if it's already installed (i.e. if it can be found as module), and skipping check for OS dependencies (def False)
    --job               Submit the build as a job (def False)
    -l, --logtostdout   Redirect main log to stdout (def False)
    -b BLOCKS, --only-blocks=BLOCKS
                        Only build listed blocks (type comma-separated list)
    --rebuild           Rebuild software, even if module already exists (don't skip OS dependencies checks) (def False)
    -r PATH[:PATH], --robot=PATH[:PATH]
                        Enable dependency resolution, using easyconfigs in specified paths (type pathsep-separated list; def )
    --robot-paths=PATH[:PATH]
                        Additional paths to consider by robot for easyconfigs (--robot paths get priority) (type pathsep-separated list; def
                        /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs)
    --search-paths=PATH[:PATH]
                        Additional locations to consider in --search (next to --robot and --robot-paths paths) (type pathsep-separated list; def )
    -k, --skip          Skip existing software (useful for installing additional packages) (def False)
    -s STOP, --stop=STOP
                        Stop the installation after certain step (type choice; def source) (choices: fetch, ready, source, patch, prepare, configure, build, test, install, extensions, postproc,
:[K[K/[Kee[Kaa[Kss[Kyy[Kbb[Kll[Koo[Kcc[Kkk[K[1;1HUsage: eb [options] easyconfig [...]
[2;1H
[3;1HBuilds software based on easyconfig (or parse a directory). Provide one or more easyconfigs or directories, use -H or --help more information.
[4;1H
[5;1HOptions:
[6;1H  --version             show program's version number and exit
[7;1H  -h, --shorthelp       show short help message and exit
[8;1H  -H OUTPUT_FORMAT, --help=OUTPUT_FORMAT
[9;1H                        show full help message and exit
[10;1H  --confighelp          show help as annotated configfile
[11;1H
[12;1H  Debug and logging options (configfile section MAIN):
[13;1H    -d, --debug         Enable debug log mode (def False)
[14;1H    --info              Enable info log mode (def False)
[15;1H    --quiet             Enable quiet/warning log mode (def False)
[16;1H
[17;1H  Configfile options:
[18;1H    --configfiles=CONFIGFILES
[19;1H                        Parse (additional) configfiles (type comma-separated list; def /home/romain.pereira/.config/easybuild/config.cfg)
[20;1H    --ignoreconfigfiles=IGNORECONFIGFILES
[21;1H                        Ignore configfiles (type comma-separated list)
[22;1H
[23;1H  Basic options:
[24;1H    Basic runtime options for EasyBuild. (configfile section basic)
[25;1H
[26;1H    --dry-run           Print build overview incl. dependencies (full paths) (def False)
[27;1H    -D, --dry-run-short
[28;1H                        Print build overview incl. dependencies (short paths) (def False)
[29;1H    -x, --extended-dry-run
[30;1H                        Print build environment and (expected) build procedure that will be performed (def False)
[31;1H    --extended-dry-run-ignore-errors
[32;1H                        Ignore errors that occur during dry run (def True)
[33;1H    -f, --force         Force to rebuild software even if it's already installed (i.e. if it can be found as module), and skipping check for OS dependencies (def False)
[34;1H    --job               Submit the build as a job (def False)
[35;1H    -l, --logtostdout   Redirect main log to stdout (def False)
[36;1H    -b BLOCKS, --only-blocks=BLOCKS
[37;1H                        Only build listed blocks (type comma-separated list)
[38;1H    --rebuild           Rebuild software, even if module already exists (don't skip OS dependencies checks) (def False)
[39;1H    -r PATH[:PATH], --robot=PATH[:PATH]
[40;1H                        Enable dependency resolution, using easyconfigs in specified paths (type pathsep-separated list; def )
[41;1H    --robot-paths=PATH[:PATH]
[42;1H                        Additional paths to consider by robot for easyconfigs (--robot paths get priority) (type pathsep-separated list; def
[43;1H                        /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs)
[44;1H    --search-paths=PATH[:PATH]
[45;1H                        Additional locations to consider in --search (next to --robot and --robot-paths paths) (type pathsep-separated list; def )
[46;1H    -k, --skip          Skip existing software (useful for installing additional packages) (def False)
[47;1H    -s STOP, --stop=STOP
[48;1H                        Stop the installation after certain step (type choice; def source) (choices: fetch, ready, source, patch, prepare, configure, build, test, install, extensions, postproc,
[49;1H[1;1HUsage: eb [options] easyconfig [...]
[2;1H
[3;1HBuilds software based on easyconfig (or parse a directory). Provide one or more easyconfigs or directories, use -H or --help more information.
[4;1H
[5;1HOptions:
[6;1H  --version             show program's version number and exit
[7;1H  -h, --shorthelp       show short help message and exit
[8;1H  -H OUTPUT_FORMAT, --help=OUTPUT_FORMAT
[9;1H                        show full help message and exit
[10;1H  --confighelp          show help as annotated configfile
[11;1H
[12;1H  Debug and logging options (configfile section MAIN):
[13;1H    -d, --debug         Enable debug log mode (def False)
[14;1H    --info              Enable info log mode (def False)
[15;1H    --quiet             Enable quiet/warning log mode (def False)
[16;1H
[17;1H  Configfile options:
[18;1H    --configfiles=CONFIGFILES
[19;1H                        Parse (additional) configfiles (type comma-separated list; def /home/romain.pereira/.config/easybuild/config.cfg)
[20;1H    --ignoreconfigfiles=IGNORECONFIGFILES
[21;1H                        Ignore configfiles (type comma-separated list)
[22;1H
[23;1H  Basic options:
[24;1H    Basic runtime options for EasyBuild. (configfile section basic)
[25;1H
[26;1H    --dry-run           Print build overview incl. dependencies (full paths) (def False)
[27;1H    -D, --dry-run-short
[28;1H                        Print build overview incl. dependencies (short paths) (def False)
[29;1H    -x, --extended-dry-run
[30;1H                        Print build environment and (expected) build procedure that will be performed (def False)
[31;1H    --extended-dry-run-ignore-errors
[32;1H                        Ignore errors that occur during dry run (def True)
[33;1H    -f, --force         Force to rebuild software even if it's already installed (i.e. if it can be found as module), and skipping check for OS dependencies (def False)
[34;1H    --job               Submit the build as a job (def False)
[35;1H    -l, --logtostdout   Redirect main log to stdout (def False)
[36;1H    -b BLOCKS, --only-blocks=BLOCKS
[37;1H                        Only build listed blocks (type comma-separated list)
[38;1H    --rebuild           Rebuild software, even if module already exists (don't skip OS dependencies checks) (def False)
[39;1H    -r PATH[:PATH], --robot=PATH[:PATH]
[40;1H                        Enable dependency resolution, using easyconfigs in specified paths (type pathsep-separated list; def )
[41;1H    --robot-paths=PATH[:PATH]
[42;1H                        Additional paths to consider by robot for easyconfigs (--robot paths get priority) (type pathsep-separated list; def
[43;1H                        /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs)
[44;1H    --search-paths=PATH[:PATH]
[45;1H                        Additional locations to consider in --search (next to --robot and --robot-paths paths) (type pathsep-separated list; def )
[46;1H    -k, --skip          Skip existing software (useful for installing additional packages) (def False)
[47;1H    -s STOP, --stop=STOP
[48;1H                        Stop the installation after certain step (type choice; def source) (choices: fetch, ready, source, patch, prepare, configure, build, test, install, extensions, postproc,
[49;1H...skipping...
    --include-[7measyblock[27ms=INCLUDE-EASYBLOCKS
                        Location(s) of extra or customized [7measyblock[27ms (type comma-separated list; def )
    --include-module-naming-schemes=INCLUDE-MODULE-NAMING-SCHEMES
                        Location(s) of extra or customized module naming schemes (type comma-separated list; def )
    --include-toolchains=INCLUDE-TOOLCHAINS
                        Location(s) of extra or customized toolchains or toolchain components (type comma-separated list; def )
    --installpath=INSTALLPATH
                        Install path for software and modules (def /home/romain.pereira/.local/easybuild)
    --installpath-modules=INSTALLPATH-MODULES
                        Install path for modules (if None, combine --installpath and --subdir-modules)
    --installpath-software=INSTALLPATH-SOFTWARE
                        Install path for software (if None, combine --installpath and --subdir-software)
    --job-backend=JOB-BACKEND
                        Backend to use for submitting jobs (type choice; def GC3Pie) (choices: GC3Pie, PbsPython, Slurm)
    --logfile-format=DIR,FORMAT
                        Directory name and format of the log file (type comma-separated tuple; def easybuild,easybuild-%(name)s-%(version)s-%(date)s.%(time)s.log)
    --module-depends-on
                        Use depends_on (Lmod 7.6.1+) for dependencies in all generated modules (implies recursive unloading of modules). (def False)
    --module-naming-scheme=MODULE-NAMING-SCHEME
                        Module naming scheme to use (def EasyBuildMNS)
    --module-syntax=MODULE-SYNTAX
                        Syntax to be used for module files (type choice; def Lua) (choices: Lua, Tcl)
    --moduleclasses=MODULECLASSES
                        Extend supported module classes (For more info on the default classes, use --show-default-moduleclasses) (type comma-separated list; def
                        base,astro,bio,cae,chem,compiler,data,debugger,devel,geo,ide,lang,lib,math,mpi,numlib,perf,quantum,phys,system,toolchain,tools,vis)
    --modules-footer=PATH
                        Path to file containing footer to be added to all generated module files
    --modules-header=PATH
                        Path to file containing header to be added to all generated module files
    --modules-tool=MODULES-TOOL
                        Modules tool to use (type choice; def Lmod) (choices: EnvironmentModules, EnvironmentModulesC, EnvironmentModulesTcl, Lmod)
    --package-naming-scheme=PACKAGE-NAMING-SCHEME
                        Packaging naming scheme choice (type choice; def EasyBuildPNS) (choices: EasyBuildPNS)
    --packagepath=PACKAGEPATH
                        The destination path for the packages built by package-tool (def /home/romain.pereira/.local/easybuild/packages)
    --prefix=PREFIX     Change prefix for buildpath, installpath, sourcepath and repositorypath (used prefix for defaults /home/romain.pereira/.local/easybuild)
    --recursive-module-unload
                        Enable generating of modules that unload recursively. (def False)
    --repository=REPOSITORY
                        Repository type, using repositorypath (type choice; def FileRepository) (choices: FileRepository)
    --repositorypath=REPOSITORYPATH
                        Repository path, used by repository (is passed as list of arguments to create the repository instance). For more info, use --avail-repositories. (type comma-separated list;
                        def /home/romain.pereira/.local/easybuild/ebfiles_repo)
    --sourcepath=SOURCEPATH
                        Path(s) to where sources should be downloaded (string, colon-separated) (def /home/romain.pereira/.local/easybuild/sources)
    --subdir-modules=SUBDIR-MODULES
                        Installpath subdir for modules (def modules)
    --subdir-software=SUBDIR-SOFTWARE
:[K[K/[K                        Installpath subdir for software (def software)
:[K[K/[K...skipping...
                        Show all easyconfig parameters (include [7measyblock[27m-specific ones by using -e) (def False)
    --avail-easyconfig-templates
                        Show all template names and template constants that can be used in easyconfigs. (def False)
    --avail-hooks       Show list of known hooks (def False)
    --avail-toolchain-opts=AVAIL-TOOLCHAIN-OPTS
                        Show options for toolchain (type str)
    --check-conflicts   Check for version conflicts in dependency graphs (def False)
    --dep-graph=depgraph.<ext>
                        Create dependency graph
    --dump-env-script   Dump source script to set up build environment based on toolchain/dependencies (def False)
    --last-log          Print location to EasyBuild log file of last (failed) session (def False)
    --list-[7measyblock[27ms=LIST-EASYBLOCKS
                        Show list of available [7measyblock[27ms (type choice; def simple) (choices: simple, detailed)
    --list-installed-software=LIST-INSTALLED-SOFTWARE
                        Show list of installed software (type choice; def simple) (choices: simple, detailed)
    --list-software=LIST-SOFTWARE
                        Show list of supported software (type choice; def simple) (choices: simple, detailed)
    --list-toolchains   Show list of known toolchains (def False)
    --search=REGEX      Search for easyconfig files in the robot search path, print full paths
    --search-filename=REGEX
                        Search for easyconfig files in the robot search path, print only filenames
    -S REGEX, --search-short=REGEX
                        Search for easyconfig files in the robot search path, print short paths
    --show-config       Show current EasyBuild configuration (only non-default + selected settings) (def False)
    --show-default-configfiles
                        Show list of default config files (def False)
    --show-default-moduleclasses
                        Show default module classes with description (def False)
    --show-full-config  Show current EasyBuild configuration (all settings) (def False)
    --show-system-info  Show system information relevant to EasyBuild (def False)
    --terse             Terse output (machine-readable) (def False)

  Options for job backend:
    Options for job backend (only relevant when --job is used) (configfile section job)

    --job-backend-config=BACKEND-CONFIG
                        Configuration file for job backend
    --job-cores=CORES   Number of cores to request per job (type int)
    --job-deps-type=DEPS-TYPE
                        Type of dependency to set between jobs (default depends on job backend) (type choice) (choices: abort_on_error, always_run)
    --job-max-jobs=MAX-JOBS
                        Maximum number of concurrent jobs (queued and running, 0 = unlimited) (type int; def 0)
    --job-max-walltime=MAX-WALLTIME
                        Maximum walltime for jobs (in hours) (type int; def 24)
    --job-output-dir=OUTPUT-DIR
                        Output directory for jobs (default: current directory) (def /home/romain.pereira)
    --job-polling-interval=POLLING-INTERVAL
                        Interval between polls for status of jobs (in seconds) (type <type 'float'>; def 30.0)
:[K[K/[K    --job-target-resource=TARGET-RESOURCE
                        Target resource for jobs

  Override options:
    Override default EasyBuild behavior. (configfile section override)

    --add-dummy-to-minimal-toolchains
                        Include dummy in minimal toolchain searches (def False)
    --allow-loaded-modules=ALLOW-LOADED-MODULES
                        List of software names for which to allow loaded modules in initial environment (type comma-separated list; def EasyBuild)
    --allow-modules-tool-mismatch
:[K[K/[K                        Allow mismatch of modules tool and definition of 'module' function (def False)
:[K[K/[K...skipping...
    -e CLASS, --[7measyblock[27m=CLASS
                        [7measyblock[27m to use for processing the spec file or dumping the options
    --enforce-checksums
                        Enforce availability of checksums for all sources/patches, so they can be verified (def False)
    --experimental      Allow experimental code (with behaviour that can be changed/removed at any given time). (def False)
    --extra-modules=EXTRA-MODULES
                        List of extra modules to load after setting up the build environment (type comma-separated list)
    --fetch             Allow downloading sources ignoring OS and modules tool dependencies, implies --stop=fetch, --ignore-osdeps and ignore modules tool (def False)
    --filter-deps=FILTER-DEPS
                        List of dependencies that you do *not* want to install with EasyBuild, because equivalent OS packages are installed. (e.g. --filter-deps=zlib,ncurses) (type comma-separated
                        list)
    --filter-env-vars=FILTER-ENV-VARS
                        List of names of environment variables that should *not* be defined/updated by module files generated by EasyBuild (type comma-separated list)
    --fixed-installdir-naming-scheme
                        Use fixed naming scheme for installation directories (def False)
    --force-download=FORCE-DOWNLOAD
                        Force re-downloading of sources and/or patches, even if they are available already in source path (type choice; def sources) (choices: all, patches, sources)
    --group=GROUP       Group to be used for software installations (only verified, not set)
    --group-writable-installdir
                        Enable group write permissions on installation directory after installation (def False)
    --hidden            Install 'hidden' module file(s) by prefixing their version with '.' (def False)
    --hide-deps=HIDE-DEPS
                        Comma separated list of dependencies that you want automatically hidden, (e.g. --hide-deps=zlib,ncurses) (type comma-separated list)
    --hide-toolchains=HIDE-TOOLCHAINS
                        Comma separated list of toolchains that you want automatically hidden, (e.g. --hide-toolchains=GCCcore) (type comma-separated list)
    --ignore-checksums  Ignore failing checksum verification (def False)
    --ignore-osdeps     Ignore any listed OS dependencies (def False)
    --install-latest-eb-release
                        Install latest known version of easybuild (def False)
    --lib64-fallback-sanity-check
                        Fallback in sanity check to lib64/ equivalent for missing libraries (def True)
    --max-fail-ratio-adjust-permissions=MAX-FAIL-RATIO-ADJUST-PERMISSIONS
                        Maximum ratio for failures to allow when adjusting permissions (type float; def 0.5)
    --minimal-toolchains
                        Use minimal toolchain when resolving dependencies (def False)
    --module-only       Only generate module file(s); skip all steps except for module, prepare, ready, sanitycheck (def False)
    --modules-tool-version-check
                        Check version of modules tool being used (def True)
    --mpi-cmd-template=MPI-CMD-TEMPLATE
                        Template for MPI commands (template keys: %(nr_ranks)s, %(cmd)s)
    --mpi-tests         Run MPI tests (when relevant) (def True)
    --optarch=OPTARCH   Set architecture optimization, overriding native architecture optimizations
    --output-format=OUTPUT-FORMAT
                        Set output format (type choice; def txt) (choices: txt, rst)
    --parallel=PARALLEL
                        Specify (maximum) level of parallellism used during build procedure (type int)
    --pre-create-installdir
                        Create installation directory before submitting build jobs (def True)
:[K[K/[K    -p, --pretend       Does the build/installation in a test directory located in $HOME/easybuildinstall (def False)
:[K[K/[K[K[7mPattern not found  (press RETURN)[27m[49;1H[K[K/[K[K[7mPattern not found  (press RETURN)[27m[49;1H[K[K/[K[K[7mPattern not found  (press RETURN)[27m[49;1H[K[K [KESCESC[K[[[K55[K~~[K[HM    -e CLASS, --[7measyblock[27m=CLASS
[HM    --dump-autopep8     Reformat easyconfigs using autopep8 when dumping them (def False)
[HM                        Timeout for initiating downloads (in seconds) (type <type 'float'>)
[HM    --download-timeout=DOWNLOAD-TIMEOUT
[HM    --devel             Enable including of development log messages (def False)
[HM                        Detect loaded EasyBuild-generated modules, act accordingly; supported values: error, ignore, purge, unload, warn (def warn)
[HM    --detect-loaded-modules=DETECT-LOADED-MODULES
[HM                        Run pretending to be (future) version, to test removal of deprecated code.
[HM    --deprecated=DEPRECATED
[HM                        Specify default optimisation level (type choice; def defaultopt) (choices: noopt, lowopt, defaultopt, opt)
[HM    --default-opt-level=DEFAULT-OPT-LEVEL
[HM    --debug-lmod        Run Lmod modules tool commands in debug module (def False)
[HM    -C, --containerize  Generate container recipe/image (def False)
[HM                        Also consider archived easyconfigs (def False)
[HM    --consider-archived-easyconfigs
[HM    --color=WHEN        Colorize output (type choice; def auto) (choices: auto, always, never)
[HM    --cleanup-tmpdir    Cleanup tmp dir after successful run. (def True)
[HM    --cleanup-builddir  Cleanup build dir after successful installation. (def True)
[HM                        Action to take when defined $EBROOT* environment variables are found for which there is no matching loaded module; supported values: error, ignore, unset, warn (def warn)
[HM    --check-ebroot-env-vars=CHECK-EBROOT-ENV-VARS
[HM    --backup-modules    Back up an existing module file, if any. Only works when using --module-only
[HM                        Allow using of EasyBuild as root (NOT RECOMMENDED!) (def False)
[HM    --allow-use-as-root-and-accept-consequences
[HM                        Allow mismatch of modules tool and definition of 'module' function (def False)
[HM    --allow-modules-tool-mismatch
[HM                        List of software names for which to allow loaded modules in initial environment (type comma-separated list; def EasyBuild)
[HM    --allow-loaded-modules=ALLOW-LOADED-MODULES
[HM                        Include dummy in minimal toolchain searches (def False)
[HM    --add-dummy-to-minimal-toolchains
[HM
[HM    Override default EasyBuild behavior. (configfile section override)
[HM  Override options:
[HM
[HM                        Target resource for jobs
[HM    --job-target-resource=TARGET-RESOURCE
[HM                        Interval between polls for status of jobs (in seconds) (type <type 'float'>; def 30.0)
[HM    --job-polling-interval=POLLING-INTERVAL
[HM                        Output directory for jobs (default: current directory) (def /home/romain.pereira)
[HM    --job-output-dir=OUTPUT-DIR
[HM                        Maximum walltime for jobs (in hours) (type int; def 24)
[HM    --job-max-walltime=MAX-WALLTIME
[HM                        Maximum number of concurrent jobs (queued and running, 0 = unlimited) (type int; def 0)
[HM    --job-max-jobs=MAX-JOBS
[HM                        Type of dependency to set between jobs (default depends on job backend) (type choice) (choices: abort_on_error, always_run)
[HM    --job-deps-type=DEPS-TYPE
[HM    --job-cores=CORES   Number of cores to request per job (type int)
[HM                        Configuration file for job backend
[HM    --job-backend-config=BACKEND-CONFIG
[49;1H[K:[K[K [KESCESC[K[[[K55[K~~[K[HM
[HM    Options for job backend (only relevant when --job is used) (configfile section job)
[HM  Options for job backend:
[HM
[HM    --terse             Terse output (machine-readable) (def False)
[HM    --show-system-info  Show system information relevant to EasyBuild (def False)
[HM    --show-full-config  Show current EasyBuild configuration (all settings) (def False)
[HM                        Show default module classes with description (def False)
[HM    --show-default-moduleclasses
[HM                        Show list of default config files (def False)
[HM    --show-default-configfiles
[HM    --show-config       Show current EasyBuild configuration (only non-default + selected settings) (def False)
[HM                        Search for easyconfig files in the robot search path, print short paths
[HM    -S REGEX, --search-short=REGEX
[HM                        Search for easyconfig files in the robot search path, print only filenames
[HM    --search-filename=REGEX
[HM    --search=REGEX      Search for easyconfig files in the robot search path, print full paths
[HM    --list-toolchains   Show list of known toolchains (def False)
[HM                        Show list of supported software (type choice; def simple) (choices: simple, detailed)
[HM    --list-software=LIST-SOFTWARE
[HM                        Show list of installed software (type choice; def simple) (choices: simple, detailed)
[HM    --list-installed-software=LIST-INSTALLED-SOFTWARE
[HM                        Show list of available [7measyblock[27ms (type choice; def simple) (choices: simple, detailed)
[HM    --list-[7measyblock[27ms=LIST-EASYBLOCKS
[HM    --last-log          Print location to EasyBuild log file of last (failed) session (def False)
[HM    --dump-env-script   Dump source script to set up build environment based on toolchain/dependencies (def False)
[HM                        Create dependency graph
[HM    --dep-graph=depgraph.<ext>
[HM    --check-conflicts   Check for version conflicts in dependency graphs (def False)
[HM                        Show options for toolchain (type str)
[HM    --avail-toolchain-opts=AVAIL-TOOLCHAIN-OPTS
[HM    --avail-hooks       Show list of known hooks (def False)
[HM                        Show all template names and template constants that can be used in easyconfigs. (def False)
[HM    --avail-easyconfig-templates
[HM                        Show all easyconfig parameters (include [7measyblock[27m-specific ones by using -e) (def False)
[HM    -a, --avail-easyconfig-params
[HM                        Show all license constants that can be used in easyconfigs (def False)
[HM    --avail-easyconfig-licenses
[HM                        Show all constants that can be used in easyconfigs (def False)
[HM    --avail-easyconfig-constants
[HM                        Show all constants that can be used in configuration files (def False)
[HM    --avail-cfgfile-constants
[HM
[HM    Obtain information about EasyBuild. (configfile section informative)
[HM  Informative options:
[HM
[HM                        Upload full test report as a gist on GitHub (def False)
[HM    -u, --upload-test-report
[49;1H[K:[K[K [KESCESC[K[[[K55[K~~[K[HM    --update-pr=PR#     Update an existing pull request (type <type 'int'>)
[HM                        Regex used to filter out variables in environment dump of test report
[HM    --test-report-env-filter=TEST-REPORT-ENV-FILTER
[HM    --review-pr=PR#     Review specified pull request (type <type 'int'>)
[HM    --preview-pr        Preview a new pull request (def False)
[HM                        Title for new pull request created with --new-pr (type <type 'str'>)
[HM    --pr-title=PR-TITLE
[HM                        Target repository for new/updating PRs (type <type 'str'>; def easybuild-easyconfigs)
[HM    --pr-target-repo=PR-TARGET-REPO
[HM                        Target branch for new PRs (type <type 'str'>; def develop)
[HM    --pr-target-branch=PR-TARGET-BRANCH
[HM                        Target account for new PRs (type <type 'str'>; def easybuilders)
[HM    --pr-target-account=PR-TARGET-ACCOUNT
[HM                        Description for new pull request created with --new-pr (type <type 'str'>)
[HM    --pr-descr=PR-DESCR
[HM                        Commit message for new/updated pull request created with --new-pr (type <type 'str'>)
[HM    --pr-commit-msg=PR-COMMIT-MSG
[HM                        Branch name to use for new PRs; '<timestamp>_new_pr_<name><version>' if unspecified (type <type 'str'>)
[HM    --pr-branch-name=PR-BRANCH-NAME
[HM    --new-pr            Open a new pull request (def False)
[HM    --merge-pr=PR#      Merge pull request (type <type 'int'>)
[HM                        List pull requests (type <type 'str'>; def open,created,desc)
[HM    --list-prs=STATE,ORDER,DIRECTION
[HM                        Install GitHub token (requires --github-user) (def False)
[HM    --install-github-token
[HM                        GitHub username (type <type 'str'>)
[HM    --github-user=GITHUB-USER
[HM                        GitHub organization (type <type 'str'>)
[HM    --github-org=GITHUB-ORG
[HM                        Path to Git working directories for EasyBuild repositories (type <type 'str'>)
[HM    --git-working-dirs-path=GIT-WORKING-DIRS-PATH
[HM    --from-pr=PR#       Obtain easyconfigs from specified PR (type <type 'int'>)
[HM                        Dump test report to specified path (def test_report.md)
[HM    --dump-test-report=DUMP-TEST-REPORT
[HM                        Close reason for pull request closed with --close-pr; supported values: archived, inactive, obsolete (type <type 'str'>)
[HM    --close-pr-reasons=CLOSE-PR-REASONS
[HM                        Custom close message for pull request closed with --close-pr;  (type <type 'str'>)
[HM    --close-pr-msg=CLOSE-PR-MSG
[HM    --close-pr=PR#      Close pull request (type <type 'int'>)
[HM                        Clean up easyconfig files for pull request (def True)
[HM    --cleanup-easyconfigs
[HM    --check-style       Run a style check on the given easyconfigs (def False)
[HM    --check-github      Check status of GitHub integration, and report back (def False)
[HM    --check-contrib     Runs checks to see whether the given easyconfigs are ready to be contributed back (def False)
[HM
[HM    Integration with GitHub (configfile section github)
[HM  GitHub integration options:
[HM
[49;1H[K:[K[K [KESCESC[K[[[K55[K~~[K[HM                        Inject checksums of specified type for sources/patches into easyconfig file(s) (type choice; def sha256) (choices: adler32, crc32, md5, sha1, sha256, sha512, size)
[HM    --inject-checksums=INJECT-CHECKSUMS
[HM
[HM    Options to be passed to all Easyconfig. (configfile section easyconfig)
[HM  Options for Easyconfigs:
[HM
[HM                        Type of container recipe/image to create (type choice; def singularity) (choices: docker, singularity)
[HM    --container-type=TYPE
[HM                        Temporary directory where container image is built
[HM    --container-tmpdir=TMPDIR
[HM                        Custom name for container image (defaults to name of easyconfig)
[HM    --container-image-name=IMAGE-NAME
[HM                        Container image format (type choice) (choices: ext3, sandbox, squashfs)
[HM    --container-image-format=IMAGE-FORMAT
[HM                        Build container image (requires sudo privileges!) (def False)
[HM    --container-build-image
[HM                        docker:<image>:<tag>  (type <type 'str'>)
[HM                        Base for container image. Examples (for Singularity): --container-base localimage:/path/to/image.img, --container-base shub:<image>:<tag>, --container-base
[HM    --container-base=BASE
[HM
[HM    Options related to generating container recipes & images (configfile section container)
[HM  Container options:
[HM
[HM    --tmpdir=TMPDIR     Directory to use for temporary storage
[HM                        Log directory where temporary log files are stored
[HM    --tmp-logdir=TMP-LOGDIR
[HM                        Path to where a job should place the output (to be set within jobscript)
[HM    --testoutput=TESTOUTPUT
[HM                        Suffix for module files install path (def all)
[HM    --suffix-modules-path=SUFFIX-MODULES-PATH
[HM                        Base path of user-specific modules relative to their $HOME
[HM    --subdir-user-modules=SUBDIR-USER-MODULES
[HM                        Installpath subdir for software (def software)
[HM    --subdir-software=SUBDIR-SOFTWARE
[HM                        Installpath subdir for modules (def modules)
[HM    --subdir-modules=SUBDIR-MODULES
[HM                        Path(s) to where sources should be downloaded (string, colon-separated) (def /home/romain.pereira/.local/easybuild/sources)
[HM    --sourcepath=SOURCEPATH
[HM                        def /home/romain.pereira/.local/easybuild/ebfiles_repo)
[HM                        Repository path, used by repository (is passed as list of arguments to create the repository instance). For more info, use --avail-repositories. (type comma-separated list;
[HM    --repositorypath=REPOSITORYPATH
[HM                        Repository type, using repositorypath (type choice; def FileRepository) (choices: FileRepository)
[HM    --repository=REPOSITORY
[HM                        Enable generating of modules that unload recursively. (def False)
[HM    --recursive-module-unload
[HM    --prefix=PREFIX     Change prefix for buildpath, installpath, sourcepath and repositorypath (used prefix for defaults /home/romain.pereira/.local/easybuild)
[HM                        The destination path for the packages built by package-tool (def /home/romain.pereira/.local/easybuild/packages)
[HM    --packagepath=PACKAGEPATH
[49;1H[K:[K[K [KESCESC[K[[[K55[K~~[K[HM                        Packaging naming scheme choice (type choice; def EasyBuildPNS) (choices: EasyBuildPNS)
[HM    --package-naming-scheme=PACKAGE-NAMING-SCHEME
[HM                        Modules tool to use (type choice; def Lmod) (choices: EnvironmentModules, EnvironmentModulesC, EnvironmentModulesTcl, Lmod)
[HM    --modules-tool=MODULES-TOOL
[HM                        Path to file containing header to be added to all generated module files
[HM    --modules-header=PATH
[HM                        Path to file containing footer to be added to all generated module files
[HM    --modules-footer=PATH
[HM                        base,astro,bio,cae,chem,compiler,data,debugger,devel,geo,ide,lang,lib,math,mpi,numlib,perf,quantum,phys,system,toolchain,tools,vis)
[HM                        Extend supported module classes (For more info on the default classes, use --show-default-moduleclasses) (type comma-separated list; def
[HM    --moduleclasses=MODULECLASSES
[HM                        Syntax to be used for module files (type choice; def Lua) (choices: Lua, Tcl)
[HM    --module-syntax=MODULE-SYNTAX
[HM                        Module naming scheme to use (def EasyBuildMNS)
[HM    --module-naming-scheme=MODULE-NAMING-SCHEME
[HM                        Use depends_on (Lmod 7.6.1+) for dependencies in all generated modules (implies recursive unloading of modules). (def False)
[HM    --module-depends-on
[HM                        Directory name and format of the log file (type comma-separated tuple; def easybuild,easybuild-%(name)s-%(version)s-%(date)s.%(time)s.log)
[HM    --logfile-format=DIR,FORMAT
[HM                        Backend to use for submitting jobs (type choice; def GC3Pie) (choices: GC3Pie, PbsPython, Slurm)
[HM    --job-backend=JOB-BACKEND
[HM                        Install path for software (if None, combine --installpath and --subdir-software)
[HM    --installpath-software=INSTALLPATH-SOFTWARE
[HM                        Install path for modules (if None, combine --installpath and --subdir-modules)
[HM    --installpath-modules=INSTALLPATH-MODULES
[HM                        Install path for software and modules (def /home/romain.pereira/.local/easybuild)
[HM    --installpath=INSTALLPATH
[HM                        Location(s) of extra or customized toolchains or toolchain components (type comma-separated list; def )
[HM    --include-toolchains=INCLUDE-TOOLCHAINS
[HM                        Location(s) of extra or customized module naming schemes (type comma-separated list; def )
[HM    --include-module-naming-schemes=INCLUDE-MODULE-NAMING-SCHEMES
[HM                        Location(s) of extra or customized [7measyblock[27ms (type comma-separated list; def )
[HM    --include-[7measyblock[27ms=INCLUDE-EASYBLOCKS
[HM                        Directory names to ignore when searching for files/dirs (type comma-separated list; def .git,.svn)
[HM    --ignore-dirs=IGNORE-DIRS
[HM    --hooks=HOOKS       Location of Python module with hook implementations (type str)
[HM                        List of files specifying metadata for external modules (INI format) (type comma-separated list)
[HM    --external-modules-metadata=EXTERNAL-MODULES-METADATA
[HM                        Location where container recipe & image will be stored (def /home/romain.pereira/.local/easybuild/containers)
[HM    --containerpath=CONTAINERPATH
[HM                        Temporary build path (def /home/romain.pereira/.local/easybuild/build)
[HM    --buildpath=BUILDPATH
[HM                        Show all repository types (incl. non-usable) (def False)
[HM    --avail-repositories
[HM                        Show all supported module tools (def False)
[HM    --avail-modules-tools
[HM                        Show all supported module naming schemes (def False)
[HM    --avail-module-naming-schemes
[49;1H[K:[K[K [KESCESC[K[[[K55[K~~[K[HM
[HM    Configure EasyBuild behavior. (configfile section config)
[HM  Configuration options:
[HM
[HM    --strict=STRICT     Set strictness level (type choice; def warn) (choices: ignore, warn, error)
[HM                        sanitycheck, cleanup, module, permissions, package, testcases)
[HM                        Stop the installation after certain step (type choice; def source) (choices: fetch, ready, source, patch, prepare, configure, build, test, install, extensions, postproc,
[HM    -s STOP, --stop=STOP
[HM    -k, --skip          Skip existing software (useful for installing additional packages) (def False)
[HM                        Additional locations to consider in --search (next to --robot and --robot-paths paths) (type pathsep-separated list; def )
[HM    --search-paths=PATH[:PATH]
[HM                        /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs)
[HM                        Additional paths to consider by robot for easyconfigs (--robot paths get priority) (type pathsep-separated list; def
[HM    --robot-paths=PATH[:PATH]
[HM                        Enable dependency resolution, using easyconfigs in specified paths (type pathsep-separated list; def )
[HM    -r PATH[:PATH], --robot=PATH[:PATH]
[HM    --rebuild           Rebuild software, even if module already exists (don't skip OS dependencies checks) (def False)
[HM                        Only build listed blocks (type comma-separated list)
[HM    -b BLOCKS, --only-blocks=BLOCKS
[HM    -l, --logtostdout   Redirect main log to stdout (def False)
[HM    --job               Submit the build as a job (def False)
[HM    -f, --force         Force to rebuild software even if it's already installed (i.e. if it can be found as module), and skipping check for OS dependencies (def False)
[HM                        Ignore errors that occur during dry run (def True)
[HM    --extended-dry-run-ignore-errors
[HM                        Print build environment and (expected) build procedure that will be performed (def False)
[HM    -x, --extended-dry-run
[HM                        Print build overview incl. dependencies (short paths) (def False)
[HM    -D, --dry-run-short
[HM    --dry-run           Print build overview incl. dependencies (full paths) (def False)
[HM
[HM    Basic runtime options for EasyBuild. (configfile section basic)
[HM  Basic options:
[HM
[HM                        Ignore configfiles (type comma-separated list)
[HM    --ignoreconfigfiles=IGNORECONFIGFILES
[HM                        Parse (additional) configfiles (type comma-separated list; def /home/romain.pereira/.config/easybuild/config.cfg)
[HM    --configfiles=CONFIGFILES
[HM  Configfile options:
[HM
[HM    --quiet             Enable quiet/warning log mode (def False)
[HM    --info              Enable info log mode (def False)
[HM    -d, --debug         Enable debug log mode (def False)
[HM  Debug and logging options (configfile section MAIN):
[HM
[HM  --confighelp          show help as annotated configfile
[HM                        show full help message and exit
[HM  -H OUTPUT_FORMAT, --help=OUTPUT_FORMAT
[HM  -h, --shorthelp       show short help message and exit
[49;1H[K:[K[K [KESCESC[K[[[K55[K~~[K[HM  --version             show program's version number and exit
[HMOptions:
[HM
[HMBuilds software based on easyconfig (or parse a directory). Provide one or more easyconfigs or directories, use -H or --help more information.
[HM
[HMUsage: eb [options] easyconfig [...]
[49;1H[K:[K[K [KESCESC[K[[[K55[K~~[K[K:[K[K [KESCESC[K[[[K55[K~~[K[K:[K[K [KESCESC[K[[[K55[K~~[K[K:[K[K [KESCESC[K[[[K55[K~~[K[K:[K[K [KESCESC[K[[[K55[K~~[K[K:[K[K [KESCESC[K[[[K55[K~~[K[K:[K[K [KESCESC[K[[[K55[K~~[K[K:[K[K [KESCESC[K[[[K55[K~~[K[K:[K[K [KESCESC[K[[[K55[K~~[K[K:[K[K [KESCESC[K[[[K55[K~~[K[K:[K[K [KESCESC[K[[[K55[K~~[K[K:[K[K [KESCESC[K[[[K55[K~~[K[K:[K[K [KESCESC[K[[[K55[K~~[K[K:[K[K [KESCESC[K[[[K55[K~~[K[K:[K[K [KESCESC[K[[[K55[K~~[K[K:[K[K [KESCESC[K[[[K55[K~~[K[K:[K[K [KESCESC[K[[[K55[K~~[K[K:[K[K [KESCESC[K[[[K55[K~~[K[K:[K[K/[Kss[Kee[Kaa[Krr[Kcc[Khh[K[1;1HUsage: eb [options] easyconfig [...]
[2;1H
[3;1HBuilds software based on easyconfig (or parse a directory). Provide one or more easyconfigs or directories, use -H or --help more information.
[4;1H
[5;1HOptions:
[6;1H  --version             show program's version number and exit
[7;1H  -h, --shorthelp       show short help message and exit
[8;1H  -H OUTPUT_FORMAT, --help=OUTPUT_FORMAT
[9;1H                        show full help message and exit
[10;1H  --confighelp          show help as annotated configfile
[11;1H
[12;1H  Debug and logging options (configfile section MAIN):
[13;1H    -d, --debug         Enable debug log mode (def False)
[14;1H    --info              Enable info log mode (def False)
[15;1H    --quiet             Enable quiet/warning log mode (def False)
[16;1H
[17;1H  Configfile options:
[18;1H    --configfiles=CONFIGFILES
[19;1H                        Parse (additional) configfiles (type comma-separated list; def /home/romain.pereira/.config/easybuild/config.cfg)
[20;1H    --ignoreconfigfiles=IGNORECONFIGFILES
[21;1H                        Ignore configfiles (type comma-separated list)
[22;1H
[23;1H  Basic options:
[24;1H    Basic runtime options for EasyBuild. (configfile section basic)
[25;1H
[26;1H    --dry-run           Print build overview incl. dependencies (full paths) (def False)
[27;1H    -D, --dry-run-short
[28;1H                        Print build overview incl. dependencies (short paths) (def False)
[29;1H    -x, --extended-dry-run
[30;1H                        Print build environment and (expected) build procedure that will be performed (def False)
[31;1H    --extended-dry-run-ignore-errors
[32;1H                        Ignore errors that occur during dry run (def True)
[33;1H    -f, --force         Force to rebuild software even if it's already installed (i.e. if it can be found as module), and skipping check for OS dependencies (def False)
[34;1H    --job               Submit the build as a job (def False)
[35;1H    -l, --logtostdout   Redirect main log to stdout (def False)
[36;1H    -b BLOCKS, --only-blocks=BLOCKS
[37;1H                        Only build listed blocks (type comma-separated list)
[38;1H    --rebuild           Rebuild software, even if module already exists (don't skip OS dependencies checks) (def False)
[39;1H    -r PATH[:PATH], --robot=PATH[:PATH]
[40;1H                        Enable dependency resolution, using easyconfigs in specified paths (type pathsep-separated list; def )
[41;1H    --robot-paths=PATH[:PATH]
[42;1H                        Additional paths to consider by robot for easyconfigs (--robot paths get priority) (type pathsep-separated list; def
[43;1H                        /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs)
[44;1H    --search-paths=PATH[:PATH]
[45;1H                        Additional locations to consider in --search (next to --robot and --robot-paths paths) (type pathsep-separated list; def )
[46;1H    -k, --skip          Skip existing software (useful for installing additional packages) (def False)
[47;1H    -s STOP, --stop=STOP
[48;1H                        Stop the installation after certain step (type choice; def source) (choices: fetch, ready, source, patch, prepare, configure, build, test, install, extensions, postproc,
[49;1H[1;1HUsage: eb [options] easyconfig [...]
[2;1H
[3;1HBuilds software based on easyconfig (or parse a directory). Provide one or more easyconfigs or directories, use -H or --help more information.
[4;1H
[5;1HOptions:
[6;1H  --version             show program's version number and exit
[7;1H  -h, --shorthelp       show short help message and exit
[8;1H  -H OUTPUT_FORMAT, --help=OUTPUT_FORMAT
[9;1H                        show full help message and exit
[10;1H  --confighelp          show help as annotated configfile
[11;1H
[12;1H  Debug and logging options (configfile section MAIN):
[13;1H    -d, --debug         Enable debug log mode (def False)
[14;1H    --info              Enable info log mode (def False)
[15;1H    --quiet             Enable quiet/warning log mode (def False)
[16;1H
[17;1H  Configfile options:
[18;1H    --configfiles=CONFIGFILES
[19;1H                        Parse (additional) configfiles (type comma-separated list; def /home/romain.pereira/.config/easybuild/config.cfg)
[20;1H    --ignoreconfigfiles=IGNORECONFIGFILES
[21;1H                        Ignore configfiles (type comma-separated list)
[22;1H
[23;1H  Basic options:
[24;1H    Basic runtime options for EasyBuild. (configfile section basic)
[25;1H
[26;1H    --dry-run           Print build overview incl. dependencies (full paths) (def False)
[27;1H    -D, --dry-run-short
[28;1H                        Print build overview incl. dependencies (short paths) (def False)
[29;1H    -x, --extended-dry-run
[30;1H                        Print build environment and (expected) build procedure that will be performed (def False)
[31;1H    --extended-dry-run-ignore-errors
[32;1H                        Ignore errors that occur during dry run (def True)
[33;1H    -f, --force         Force to rebuild software even if it's already installed (i.e. if it can be found as module), and skipping check for OS dependencies (def False)
[34;1H    --job               Submit the build as a job (def False)
[35;1H    -l, --logtostdout   Redirect main log to stdout (def False)
[36;1H    -b BLOCKS, --only-blocks=BLOCKS
[37;1H                        Only build listed blocks (type comma-separated list)
[38;1H    --rebuild           Rebuild software, even if module already exists (don't skip OS dependencies checks) (def False)
[39;1H    -r PATH[:PATH], --robot=PATH[:PATH]
[40;1H                        Enable dependency resolution, using easyconfigs in specified paths (type pathsep-separated list; def )
[41;1H    --robot-paths=PATH[:PATH]
[42;1H                        Additional paths to consider by robot for easyconfigs (--robot paths get priority) (type pathsep-separated list; def
[43;1H                        /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs)
[44;1H    --[7msearch[27m-paths=PATH[:PATH]
[45;1H                        Additional locations to consider in --[7msearch[27m (next to --robot and --robot-paths paths) (type pathsep-separated list; def )
[46;1H    -k, --skip          Skip existing software (useful for installing additional packages) (def False)
[47;1H    -s STOP, --stop=STOP
[48;1H                        Stop the installation after certain step (type choice; def source) (choices: fetch, ready, source, patch, prepare, configure, build, test, install, extensions, postproc,
[49;1H                        sanitycheck, cleanup, module, permissions, package, testcases)
    --strict=STRICT     Set strictness level (type choice; def warn) (choices: ignore, warn, error)

  Configuration options:
    Configure EasyBuild behavior. (configfile section config)

    --avail-module-naming-schemes
                        Show all supported module naming schemes (def False)
    --avail-modules-tools
                        Show all supported module tools (def False)
    --avail-repositories
                        Show all repository types (incl. non-usable) (def False)
    --buildpath=BUILDPATH
                        Temporary build path (def /home/romain.pereira/.local/easybuild/build)
    --containerpath=CONTAINERPATH
                        Location where container recipe & image will be stored (def /home/romain.pereira/.local/easybuild/containers)
    --external-modules-metadata=EXTERNAL-MODULES-METADATA
                        List of files specifying metadata for external modules (INI format) (type comma-separated list)
    --hooks=HOOKS       Location of Python module with hook implementations (type str)
    --ignore-dirs=IGNORE-DIRS
                        Directory names to ignore when [7msearch[27ming for files/dirs (type comma-separated list; def .git,.svn)
    --include-easyblocks=INCLUDE-EASYBLOCKS
                        Location(s) of extra or customized easyblocks (type comma-separated list; def )
    --include-module-naming-schemes=INCLUDE-MODULE-NAMING-SCHEMES
                        Location(s) of extra or customized module naming schemes (type comma-separated list; def )
    --include-toolchains=INCLUDE-TOOLCHAINS
                        Location(s) of extra or customized toolchains or toolchain components (type comma-separated list; def )
    --installpath=INSTALLPATH
                        Install path for software and modules (def /home/romain.pereira/.local/easybuild)
    --installpath-modules=INSTALLPATH-MODULES
                        Install path for modules (if None, combine --installpath and --subdir-modules)
    --installpath-software=INSTALLPATH-SOFTWARE
                        Install path for software (if None, combine --installpath and --subdir-software)
    --job-backend=JOB-BACKEND
                        Backend to use for submitting jobs (type choice; def GC3Pie) (choices: GC3Pie, PbsPython, Slurm)
    --logfile-format=DIR,FORMAT
                        Directory name and format of the log file (type comma-separated tuple; def easybuild,easybuild-%(name)s-%(version)s-%(date)s.%(time)s.log)
    --module-depends-on
                        Use depends_on (Lmod 7.6.1+) for dependencies in all generated modules (implies recursive unloading of modules). (def False)
    --module-naming-scheme=MODULE-NAMING-SCHEME
                        Module naming scheme to use (def EasyBuildMNS)
    --module-syntax=MODULE-SYNTAX
                        Syntax to be used for module files (type choice; def Lua) (choices: Lua, Tcl)
:[K[K/[K    --moduleclasses=MODULECLASSES
:[K[K/[K                        Extend supported module classes (For more info on the default classes, use --show-default-moduleclasses) (type comma-separated list; def
                        base,astro,bio,cae,chem,compiler,data,debugger,devel,geo,ide,lang,lib,math,mpi,numlib,perf,quantum,phys,system,toolchain,tools,vis)
    --modules-footer=PATH
                        Path to file containing footer to be added to all generated module files
    --modules-header=PATH
                        Path to file containing header to be added to all generated module files
    --modules-tool=MODULES-TOOL
                        Modules tool to use (type choice; def Lmod) (choices: EnvironmentModules, EnvironmentModulesC, EnvironmentModulesTcl, Lmod)
    --package-naming-scheme=PACKAGE-NAMING-SCHEME
                        Packaging naming scheme choice (type choice; def EasyBuildPNS) (choices: EasyBuildPNS)
    --packagepath=PACKAGEPATH
                        The destination path for the packages built by package-tool (def /home/romain.pereira/.local/easybuild/packages)
    --prefix=PREFIX     Change prefix for buildpath, installpath, sourcepath and repositorypath (used prefix for defaults /home/romain.pereira/.local/easybuild)
    --recursive-module-unload
                        Enable generating of modules that unload recursively. (def False)
    --repository=REPOSITORY
                        Repository type, using repositorypath (type choice; def FileRepository) (choices: FileRepository)
    --repositorypath=REPOSITORYPATH
                        Repository path, used by repository (is passed as list of arguments to create the repository instance). For more info, use --avail-repositories. (type comma-separated list;
                        def /home/romain.pereira/.local/easybuild/ebfiles_repo)
    --sourcepath=SOURCEPATH
                        Path(s) to where sources should be downloaded (string, colon-separated) (def /home/romain.pereira/.local/easybuild/sources)
    --subdir-modules=SUBDIR-MODULES
                        Installpath subdir for modules (def modules)
:[K[K/[K...skipping...
    --[7msearch[27m=REGEX      Search for easyconfig files in the robot [7msearch[27m path, print full paths
    --[7msearch[27m-filename=REGEX
                        Search for easyconfig files in the robot [7msearch[27m path, print only filenames
    -S REGEX, --[7msearch[27m-short=REGEX
                        Search for easyconfig files in the robot [7msearch[27m path, print short paths
    --show-config       Show current EasyBuild configuration (only non-default + selected settings) (def False)
    --show-default-configfiles
                        Show list of default config files (def False)
    --show-default-moduleclasses
                        Show default module classes with description (def False)
    --show-full-config  Show current EasyBuild configuration (all settings) (def False)
    --show-system-info  Show system information relevant to EasyBuild (def False)
    --terse             Terse output (machine-readable) (def False)

  Options for job backend:
    Options for job backend (only relevant when --job is used) (configfile section job)

    --job-backend-config=BACKEND-CONFIG
                        Configuration file for job backend
    --job-cores=CORES   Number of cores to request per job (type int)
    --job-deps-type=DEPS-TYPE
                        Type of dependency to set between jobs (default depends on job backend) (type choice) (choices: abort_on_error, always_run)
    --job-max-jobs=MAX-JOBS
                        Maximum number of concurrent jobs (queued and running, 0 = unlimited) (type int; def 0)
    --job-max-walltime=MAX-WALLTIME
                        Maximum walltime for jobs (in hours) (type int; def 24)
    --job-output-dir=OUTPUT-DIR
                        Output directory for jobs (default: current directory) (def /home/romain.pereira)
    --job-polling-interval=POLLING-INTERVAL
                        Interval between polls for status of jobs (in seconds) (type <type 'float'>; def 30.0)
    --job-target-resource=TARGET-RESOURCE
                        Target resource for jobs

  Override options:
    Override default EasyBuild behavior. (configfile section override)

    --add-dummy-to-minimal-toolchains
                        Include dummy in minimal toolchain [7msearch[27mes (def False)
    --allow-loaded-modules=ALLOW-LOADED-MODULES
                        List of software names for which to allow loaded modules in initial environment (type comma-separated list; def EasyBuild)
    --allow-modules-tool-mismatch
                        Allow mismatch of modules tool and definition of 'module' function (def False)
    --allow-use-as-root-and-accept-consequences
                        Allow using of EasyBuild as root (NOT RECOMMENDED!) (def False)
    --backup-modules    Back up an existing module file, if any. Only works when using --module-only
    --check-ebroot-env-vars=CHECK-EBROOT-ENV-VARS
                        Action to take when defined $EBROOT* environment variables are found for which there is no matching loaded module; supported values: error, ignore, unset, warn (def warn)
    --cleanup-builddir  Cleanup build dir after successful installation. (def True)
:[K[K[?1l>[?1049l]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --help | less[20@list-easyblocks=detailed[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Ksearch="flex--2[K[K2.6.44"[K[K"
 * /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4-GCCcore-5.5.0.eb
 * /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4-GCCcore-6.3.0.eb
 * /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4-GCCcore-6.4.0.eb
 * /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4-GCCcore-7.2.0.eb
 * /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4-GCCcore-7.3.0.eb
 * /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4-GCCcore-7.4.0.eb
 * /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4-GCCcore-8.1.0.eb
 * /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4-GCCcore-8.2.0.eb
 * /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4-GCCcore-system.eb
 * /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb
bash: /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb: Permission non accordÃ©e
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cv/home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ci/home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cm/home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.ebb[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

[?1049h[?1h=[2;1Hâ½[6n[1;1H  [1;1H[1;49r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[49;1H"~/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb" 32L, 874C[>c[1;1H[38;5;130m  1 [mname = 'flex'
[38;5;130m  2 [mversion = '2.6.4'
[38;5;130m  3 
  4 [mhomepage = 'http://flex.sourceforge.net/'
[38;5;130m  5 
  6 [mdescription = """
[38;5;130m  7 [m Flex (Fast Lexical Analyzer) is a tool for generating scanners. A scanner,
[38;5;130m  8 [m sometimes called a tokenizer, is a program which recognizes lexical patterns
[38;5;130m  9 [m in text.
[38;5;130m 10 [m"""
[38;5;130m 11 
 12 [mtoolchain = {'name': 'dummy', 'version': ''}
[38;5;130m 13 [mtoolchainopts = {'pic': True}
[38;5;130m 14 
 15 [msource_urls = ['https://github.com/westes/flex/releases/download/v%(version)s/']
[38;5;130m 16 [msources = [SOURCELOWER_TAR_GZ]
[38;5;130m 17 [mchecksums = ['e87aae032bf07c26f85ac0ed3250998c37621d95f8bd748b31f15b33c45ee995']
[38;5;130m 18 
 19 [mbuilddependencies = [
[38;5;130m 20 [m    ('Bison', '3.0.4'),
[38;5;130m 21 [m    ('help2man', '1.47.4'),
[38;5;130m 22 [m]
[38;5;130m 23 
 24 [mdependencies = [
[38;5;130m 25 [m    ('M4', '1.4.18'),
[38;5;130m 26 [m]
[38;5;130m 27 
 28 [m# glibc 2.26 requires _GNU_SOURCE defined to expose reallocarray in the correct
[38;5;130m 29 [m# header, see https://github.com/westes/flex/issues/241
[38;5;130m 30 [mpreconfigopts = 'export CPPFLAGS="$CPPFLAGS -D_GNU_SOURCE" && '
[38;5;130m 31 
 32 [mmoduleclass = 'lang'
[94m~                                                                                                                                                                                                     [34;1H~                                                                                                                                                                                                     [35;1H~                                                                                                                                                                                                     [36;1H~                                                                                                                                                                                                     [37;1H~                                                                                                                                                                                                     [38;1H~                                                                                                                                                                                                     [39;1H~                                                                                                                                                                                                     [40;1H~                                                                                                                                                                                                     [41;1H~                                                                                                                                                                                                     [42;1H~                                                                                                                                                                                                     [43;1H~                                                                                                                                                                                                     [44;1H~                                                                                                                                                                                                     [45;1H~                                                                                                                                                                                                     [46;1H~                                                                                                                                                                                                     [47;1H~                                                                                                                                                                                                     [48;1H~                                                                                                                                                                                                     [m[49;181H1,1[10CTout[1;5H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[49;1H[K[49;1H:[?12l[?25hq[?25l[?12l[?25h![?25l[?12l[?25h[?25l[49;1H[K[49;1H[?1l>[?12l[?25h[?1049l]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ vim /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eeb[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[2P/home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ceb --search="flex-2.6.4"[K[K[K[K[K[K[K[K[K[K[K[K[K"dummy"

]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --search="dummy"vim /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eeb[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[2P/home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ceb --search="flex-2.6.4"[K[8Phelp | less[20@list-easyblocks=detailed[C[C[C[C[C[C[C[9P[C[C[C[C[C[C[C[9@=detailed[C[C[C[C[C[C[C[9P[C[C[C[C[C[C[C[9@=detailed[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Ktoolchains | less
[?1049h[?1h=List of known toolchains (toolchainname: module[,module...]):
        ClangGCC: Clang, GCC
        CrayCCE: PrgEnv-cray
        CrayGNU: PrgEnv-gnu
        CrayIntel: PrgEnv-intel
        CrayPGI: PrgEnv-pgi
        GCC: GCC
        GCCcore: GCCcore
        GNU: GCC
        PGI: PGI
        cgmpich: Clang, GCC, MPICH
        cgmpolf: BLACS, Clang, FFTW, GCC, MPICH, OpenBLAS, ScaLAPACK
        cgmvapich2: Clang, GCC, MVAPICH2
        cgmvolf: BLACS, Clang, FFTW, GCC, MVAPICH2, OpenBLAS, ScaLAPACK
        cgompi: Clang, GCC, OpenMPI
        cgoolf: BLACS, Clang, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
        dummy: 
        foss: BLACS, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
        fosscuda: BLACS, CUDA, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
        gcccuda: CUDA, GCC
        gimkl: GCC, imkl, impi
        gimpi: GCC, impi
        gimpic: CUDA, GCC, impi
        giolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, impi
        giolfc: BLACS, CUDA, FFTW, GCC, OpenBLAS, ScaLAPACK, impi
        gmacml: ACML, BLACS, FFTW, GCC, MVAPICH2, ScaLAPACK
        gmkl: GCC, imkl
        gmklc: CUDA, GCC, imkl
        gmpich: GCC, MPICH
        gmpich2: GCC, MPICH2
        gmpolf: BLACS, FFTW, GCC, MPICH, OpenBLAS, ScaLAPACK
        gmvapich2: GCC, MVAPICH2
        gmvolf: BLACS, FFTW, GCC, MVAPICH2, OpenBLAS, ScaLAPACK
        goalf: ATLAS, BLACS, FFTW, GCC, OpenMPI, ScaLAPACK
        goblf: BLACS, BLIS, FFTW, GCC, LAPACK, OpenMPI, ScaLAPACK
        golf: FFTW, GCC, OpenBLAS
        golfc: CUDA, FFTW, GCC, OpenBLAS
        gomkl: GCC, OpenMPI, imkl
        gomklc: CUDA, GCC, OpenMPI, imkl
        gompi: GCC, OpenMPI
        gompic: CUDA, GCC, OpenMPI
        goolf: BLACS, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
        goolfc: BLACS, CUDA, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
        gpsmpi: GCC, psmpi
        gpsolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, psmpi
        gqacml: ACML, BLACS, FFTW, GCC, QLogicMPI, ScaLAPACK
        gsmpi: GCC, SpectrumMPI
        gsolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, SpectrumMPI
:[K[K/[Kdd[Kuu[Kmm[Kmm[Kyy[K[1;1HList of known toolchains (toolchainname: module[,module...]):
[2;1H        ClangGCC: Clang, GCC
[3;1H        CrayCCE: PrgEnv-cray
[4;1H        CrayGNU: PrgEnv-gnu
[5;1H        CrayIntel: PrgEnv-intel
[6;1H        CrayPGI: PrgEnv-pgi
[7;1H        GCC: GCC
[8;1H        GCCcore: GCCcore
[9;1H        GNU: GCC
[10;1H        PGI: PGI
[11;1H        cgmpich: Clang, GCC, MPICH
[12;1H        cgmpolf: BLACS, Clang, FFTW, GCC, MPICH, OpenBLAS, ScaLAPACK
[13;1H        cgmvapich2: Clang, GCC, MVAPICH2
[14;1H        cgmvolf: BLACS, Clang, FFTW, GCC, MVAPICH2, OpenBLAS, ScaLAPACK
[15;1H        cgompi: Clang, GCC, OpenMPI
[16;1H        cgoolf: BLACS, Clang, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[17;1H        dummy: 
[18;1H        foss: BLACS, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[19;1H        fosscuda: BLACS, CUDA, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[20;1H        gcccuda: CUDA, GCC
[21;1H        gimkl: GCC, imkl, impi
[22;1H        gimpi: GCC, impi
[23;1H        gimpic: CUDA, GCC, impi
[24;1H        giolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, impi
[25;1H        giolfc: BLACS, CUDA, FFTW, GCC, OpenBLAS, ScaLAPACK, impi
[26;1H        gmacml: ACML, BLACS, FFTW, GCC, MVAPICH2, ScaLAPACK
[27;1H        gmkl: GCC, imkl
[28;1H        gmklc: CUDA, GCC, imkl
[29;1H        gmpich: GCC, MPICH
[30;1H        gmpich2: GCC, MPICH2
[31;1H        gmpolf: BLACS, FFTW, GCC, MPICH, OpenBLAS, ScaLAPACK
[32;1H        gmvapich2: GCC, MVAPICH2
[33;1H        gmvolf: BLACS, FFTW, GCC, MVAPICH2, OpenBLAS, ScaLAPACK
[34;1H        goalf: ATLAS, BLACS, FFTW, GCC, OpenMPI, ScaLAPACK
[35;1H        goblf: BLACS, BLIS, FFTW, GCC, LAPACK, OpenMPI, ScaLAPACK
[36;1H        golf: FFTW, GCC, OpenBLAS
[37;1H        golfc: CUDA, FFTW, GCC, OpenBLAS
[38;1H        gomkl: GCC, OpenMPI, imkl
[39;1H        gomklc: CUDA, GCC, OpenMPI, imkl
[40;1H        gompi: GCC, OpenMPI
[41;1H        gompic: CUDA, GCC, OpenMPI
[42;1H        goolf: BLACS, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[43;1H        goolfc: BLACS, CUDA, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[44;1H        gpsmpi: GCC, psmpi
[45;1H        gpsolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, psmpi
[46;1H        gqacml: ACML, BLACS, FFTW, GCC, QLogicMPI, ScaLAPACK
[47;1H        gsmpi: GCC, SpectrumMPI
[48;1H        gsolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, SpectrumMPI
[49;1H[1;1HList of known toolchains (toolchainname: module[,module...]):
[2;1H        ClangGCC: Clang, GCC
[3;1H        CrayCCE: PrgEnv-cray
[4;1H        CrayGNU: PrgEnv-gnu
[5;1H        CrayIntel: PrgEnv-intel
[6;1H        CrayPGI: PrgEnv-pgi
[7;1H        GCC: GCC
[8;1H        GCCcore: GCCcore
[9;1H        GNU: GCC
[10;1H        PGI: PGI
[11;1H        cgmpich: Clang, GCC, MPICH
[12;1H        cgmpolf: BLACS, Clang, FFTW, GCC, MPICH, OpenBLAS, ScaLAPACK
[13;1H        cgmvapich2: Clang, GCC, MVAPICH2
[14;1H        cgmvolf: BLACS, Clang, FFTW, GCC, MVAPICH2, OpenBLAS, ScaLAPACK
[15;1H        cgompi: Clang, GCC, OpenMPI
[16;1H        cgoolf: BLACS, Clang, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[17;1H        [7mdummy[27m: 
[18;1H        foss: BLACS, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[19;1H        fosscuda: BLACS, CUDA, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[20;1H        gcccuda: CUDA, GCC
[21;1H        gimkl: GCC, imkl, impi
[22;1H        gimpi: GCC, impi
[23;1H        gimpic: CUDA, GCC, impi
[24;1H        giolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, impi
[25;1H        giolfc: BLACS, CUDA, FFTW, GCC, OpenBLAS, ScaLAPACK, impi
[26;1H        gmacml: ACML, BLACS, FFTW, GCC, MVAPICH2, ScaLAPACK
[27;1H        gmkl: GCC, imkl
[28;1H        gmklc: CUDA, GCC, imkl
[29;1H        gmpich: GCC, MPICH
[30;1H        gmpich2: GCC, MPICH2
[31;1H        gmpolf: BLACS, FFTW, GCC, MPICH, OpenBLAS, ScaLAPACK
[32;1H        gmvapich2: GCC, MVAPICH2
[33;1H        gmvolf: BLACS, FFTW, GCC, MVAPICH2, OpenBLAS, ScaLAPACK
[34;1H        goalf: ATLAS, BLACS, FFTW, GCC, OpenMPI, ScaLAPACK
[35;1H        goblf: BLACS, BLIS, FFTW, GCC, LAPACK, OpenMPI, ScaLAPACK
[36;1H        golf: FFTW, GCC, OpenBLAS
[37;1H        golfc: CUDA, FFTW, GCC, OpenBLAS
[38;1H        gomkl: GCC, OpenMPI, imkl
[39;1H        gomklc: CUDA, GCC, OpenMPI, imkl
[40;1H        gompi: GCC, OpenMPI
[41;1H        gompic: CUDA, GCC, OpenMPI
[42;1H        goolf: BLACS, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[43;1H        goolfc: BLACS, CUDA, FFTW, GCC, OpenBLAS, OpenMPI, ScaLAPACK
[44;1H        gpsmpi: GCC, psmpi
[45;1H        gpsolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, psmpi
[46;1H        gqacml: ACML, BLACS, FFTW, GCC, QLogicMPI, ScaLAPACK
[47;1H        gsmpi: GCC, SpectrumMPI
[48;1H        gsolf: BLACS, FFTW, GCC, OpenBLAS, ScaLAPACK, SpectrumMPI
[49;1H        iccifort: icc, ifort
        iccifortcuda: CUDA, icc, ifort
        ictce: icc, ifort, imkl, impi
        iimkl: icc, ifort, imkl
        iimklc: CUDA, icc, ifort, imkl
        iimpi: icc, ifort, impi
        iimpic: CUDA, icc, ifort, impi
        iiqmpi: QLogicMPI, icc, ifort
        impich: MPICH, icc, ifort
        impmkl: MPICH, icc, ifort, imkl
        intel: icc, ifort, imkl, impi
        intel-para: icc, ifort, imkl, psmpi
        intelcuda: CUDA, icc, ifort, imkl, impi
        iomkl: OpenMPI, icc, ifort, imkl
        iomklc: CUDA, OpenMPI, icc, ifort, imkl
        iompi: OpenMPI, icc, ifort
:[K[K/[K[K[7mPattern not found  (press RETURN)[27m[49;1H[K[K[?1l>[?1049l]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ man ^C
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --list-toolchains | less[8Psearch="dummy"vim /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eeb[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[2P/home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ceb --search="flex-2.6.4"[K[8Phelp | less
[?1049h[?1h=Usage: eb [options] easyconfig [...]

Builds software based on easyconfig (or parse a directory). Provide one or more easyconfigs or directories, use -H or --help more information.

Options:
  --version             show program's version number and exit
  -h, --shorthelp       show short help message and exit
  -H OUTPUT_FORMAT, --help=OUTPUT_FORMAT
                        show full help message and exit
  --confighelp          show help as annotated configfile

  Debug and logging options (configfile section MAIN):
    -d, --debug         Enable debug log mode (def False)
    --info              Enable info log mode (def False)
    --quiet             Enable quiet/warning log mode (def False)

  Configfile options:
    --configfiles=CONFIGFILES
                        Parse (additional) configfiles (type comma-separated list; def /home/romain.pereira/.config/easybuild/config.cfg)
    --ignoreconfigfiles=IGNORECONFIGFILES
                        Ignore configfiles (type comma-separated list)

  Basic options:
    Basic runtime options for EasyBuild. (configfile section basic)

    --dry-run           Print build overview incl. dependencies (full paths) (def False)
    -D, --dry-run-short
                        Print build overview incl. dependencies (short paths) (def False)
    -x, --extended-dry-run
                        Print build environment and (expected) build procedure that will be performed (def False)
    --extended-dry-run-ignore-errors
                        Ignore errors that occur during dry run (def True)
    -f, --force         Force to rebuild software even if it's already installed (i.e. if it can be found as module), and skipping check for OS dependencies (def False)
    --job               Submit the build as a job (def False)
    -l, --logtostdout   Redirect main log to stdout (def False)
    -b BLOCKS, --only-blocks=BLOCKS
                        Only build listed blocks (type comma-separated list)
    --rebuild           Rebuild software, even if module already exists (don't skip OS dependencies checks) (def False)
    -r PATH[:PATH], --robot=PATH[:PATH]
                        Enable dependency resolution, using easyconfigs in specified paths (type pathsep-separated list; def )
    --robot-paths=PATH[:PATH]
                        Additional paths to consider by robot for easyconfigs (--robot paths get priority) (type pathsep-separated list; def
                        /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs)
    --search-paths=PATH[:PATH]
                        Additional locations to consider in --search (next to --robot and --robot-paths paths) (type pathsep-separated list; def )
    -k, --skip          Skip existing software (useful for installing additional packages) (def False)
    -s STOP, --stop=STOP
                        Stop the installation after certain step (type choice; def source) (choices: fetch, ready, source, patch, prepare, configure, build, test, install, extensions, postproc,
:[K[K/[Ktt[Koo[Koo[Kll[Kcc[Khh[Kaa[Kii[Knn[K[1;1HUsage: eb [options] easyconfig [...]
[2;1H
[3;1HBuilds software based on easyconfig (or parse a directory). Provide one or more easyconfigs or directories, use -H or --help more information.
[4;1H
[5;1HOptions:
[6;1H  --version             show program's version number and exit
[7;1H  -h, --shorthelp       show short help message and exit
[8;1H  -H OUTPUT_FORMAT, --help=OUTPUT_FORMAT
[9;1H                        show full help message and exit
[10;1H  --confighelp          show help as annotated configfile
[11;1H
[12;1H  Debug and logging options (configfile section MAIN):
[13;1H    -d, --debug         Enable debug log mode (def False)
[14;1H    --info              Enable info log mode (def False)
[15;1H    --quiet             Enable quiet/warning log mode (def False)
[16;1H
[17;1H  Configfile options:
[18;1H    --configfiles=CONFIGFILES
[19;1H                        Parse (additional) configfiles (type comma-separated list; def /home/romain.pereira/.config/easybuild/config.cfg)
[20;1H    --ignoreconfigfiles=IGNORECONFIGFILES
[21;1H                        Ignore configfiles (type comma-separated list)
[22;1H
[23;1H  Basic options:
[24;1H    Basic runtime options for EasyBuild. (configfile section basic)
[25;1H
[26;1H    --dry-run           Print build overview incl. dependencies (full paths) (def False)
[27;1H    -D, --dry-run-short
[28;1H                        Print build overview incl. dependencies (short paths) (def False)
[29;1H    -x, --extended-dry-run
[30;1H                        Print build environment and (expected) build procedure that will be performed (def False)
[31;1H    --extended-dry-run-ignore-errors
[32;1H                        Ignore errors that occur during dry run (def True)
[33;1H    -f, --force         Force to rebuild software even if it's already installed (i.e. if it can be found as module), and skipping check for OS dependencies (def False)
[34;1H    --job               Submit the build as a job (def False)
[35;1H    -l, --logtostdout   Redirect main log to stdout (def False)
[36;1H    -b BLOCKS, --only-blocks=BLOCKS
[37;1H                        Only build listed blocks (type comma-separated list)
[38;1H    --rebuild           Rebuild software, even if module already exists (don't skip OS dependencies checks) (def False)
[39;1H    -r PATH[:PATH], --robot=PATH[:PATH]
[40;1H                        Enable dependency resolution, using easyconfigs in specified paths (type pathsep-separated list; def )
[41;1H    --robot-paths=PATH[:PATH]
[42;1H                        Additional paths to consider by robot for easyconfigs (--robot paths get priority) (type pathsep-separated list; def
[43;1H                        /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs)
[44;1H    --search-paths=PATH[:PATH]
[45;1H                        Additional locations to consider in --search (next to --robot and --robot-paths paths) (type pathsep-separated list; def )
[46;1H    -k, --skip          Skip existing software (useful for installing additional packages) (def False)
[47;1H    -s STOP, --stop=STOP
[48;1H                        Stop the installation after certain step (type choice; def source) (choices: fetch, ready, source, patch, prepare, configure, build, test, install, extensions, postproc,
[49;1H[1;1HUsage: eb [options] easyconfig [...]
[2;1H
[3;1HBuilds software based on easyconfig (or parse a directory). Provide one or more easyconfigs or directories, use -H or --help more information.
[4;1H
[5;1HOptions:
[6;1H  --version             show program's version number and exit
[7;1H  -h, --shorthelp       show short help message and exit
[8;1H  -H OUTPUT_FORMAT, --help=OUTPUT_FORMAT
[9;1H                        show full help message and exit
[10;1H  --confighelp          show help as annotated configfile
[11;1H
[12;1H  Debug and logging options (configfile section MAIN):
[13;1H    -d, --debug         Enable debug log mode (def False)
[14;1H    --info              Enable info log mode (def False)
[15;1H    --quiet             Enable quiet/warning log mode (def False)
[16;1H
[17;1H  Configfile options:
[18;1H    --configfiles=CONFIGFILES
[19;1H                        Parse (additional) configfiles (type comma-separated list; def /home/romain.pereira/.config/easybuild/config.cfg)
[20;1H    --ignoreconfigfiles=IGNORECONFIGFILES
[21;1H                        Ignore configfiles (type comma-separated list)
[22;1H
[23;1H  Basic options:
[24;1H    Basic runtime options for EasyBuild. (configfile section basic)
[25;1H
[26;1H    --dry-run           Print build overview incl. dependencies (full paths) (def False)
[27;1H    -D, --dry-run-short
[28;1H                        Print build overview incl. dependencies (short paths) (def False)
[29;1H    -x, --extended-dry-run
[30;1H                        Print build environment and (expected) build procedure that will be performed (def False)
[31;1H    --extended-dry-run-ignore-errors
[32;1H                        Ignore errors that occur during dry run (def True)
[33;1H    -f, --force         Force to rebuild software even if it's already installed (i.e. if it can be found as module), and skipping check for OS dependencies (def False)
[34;1H    --job               Submit the build as a job (def False)
[35;1H    -l, --logtostdout   Redirect main log to stdout (def False)
[36;1H    -b BLOCKS, --only-blocks=BLOCKS
[37;1H                        Only build listed blocks (type comma-separated list)
[38;1H    --rebuild           Rebuild software, even if module already exists (don't skip OS dependencies checks) (def False)
[39;1H    -r PATH[:PATH], --robot=PATH[:PATH]
[40;1H                        Enable dependency resolution, using easyconfigs in specified paths (type pathsep-separated list; def )
[41;1H    --robot-paths=PATH[:PATH]
[42;1H                        Additional paths to consider by robot for easyconfigs (--robot paths get priority) (type pathsep-separated list; def
[43;1H                        /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs)
[44;1H    --search-paths=PATH[:PATH]
[45;1H                        Additional locations to consider in --search (next to --robot and --robot-paths paths) (type pathsep-separated list; def )
[46;1H    -k, --skip          Skip existing software (useful for installing additional packages) (def False)
[47;1H    -s STOP, --stop=STOP
[48;1H                        Stop the installation after certain step (type choice; def source) (choices: fetch, ready, source, patch, prepare, configure, build, test, install, extensions, postproc,
[49;1H...skipping...
    --include-[7mtoolchain[27ms=INCLUDE-TOOLCHAINS
                        Location(s) of extra or customized [7mtoolchain[27ms or [7mtoolchain[27m components (type comma-separated list; def )
    --installpath=INSTALLPATH
                        Install path for software and modules (def /home/romain.pereira/.local/easybuild)
    --installpath-modules=INSTALLPATH-MODULES
                        Install path for modules (if None, combine --installpath and --subdir-modules)
    --installpath-software=INSTALLPATH-SOFTWARE
                        Install path for software (if None, combine --installpath and --subdir-software)
    --job-backend=JOB-BACKEND
                        Backend to use for submitting jobs (type choice; def GC3Pie) (choices: GC3Pie, PbsPython, Slurm)
    --logfile-format=DIR,FORMAT
                        Directory name and format of the log file (type comma-separated tuple; def easybuild,easybuild-%(name)s-%(version)s-%(date)s.%(time)s.log)
    --module-depends-on
                        Use depends_on (Lmod 7.6.1+) for dependencies in all generated modules (implies recursive unloading of modules). (def False)
    --module-naming-scheme=MODULE-NAMING-SCHEME
                        Module naming scheme to use (def EasyBuildMNS)
    --module-syntax=MODULE-SYNTAX
                        Syntax to be used for module files (type choice; def Lua) (choices: Lua, Tcl)
    --moduleclasses=MODULECLASSES
                        Extend supported module classes (For more info on the default classes, use --show-default-moduleclasses) (type comma-separated list; def
                        base,astro,bio,cae,chem,compiler,data,debugger,devel,geo,ide,lang,lib,math,mpi,numlib,perf,quantum,phys,system,[7mtoolchain[27m,tools,vis)
    --modules-footer=PATH
                        Path to file containing footer to be added to all generated module files
    --modules-header=PATH
                        Path to file containing header to be added to all generated module files
    --modules-tool=MODULES-TOOL
                        Modules tool to use (type choice; def Lmod) (choices: EnvironmentModules, EnvironmentModulesC, EnvironmentModulesTcl, Lmod)
    --package-naming-scheme=PACKAGE-NAMING-SCHEME
                        Packaging naming scheme choice (type choice; def EasyBuildPNS) (choices: EasyBuildPNS)
    --packagepath=PACKAGEPATH
                        The destination path for the packages built by package-tool (def /home/romain.pereira/.local/easybuild/packages)
    --prefix=PREFIX     Change prefix for buildpath, installpath, sourcepath and repositorypath (used prefix for defaults /home/romain.pereira/.local/easybuild)
    --recursive-module-unload
                        Enable generating of modules that unload recursively. (def False)
    --repository=REPOSITORY
                        Repository type, using repositorypath (type choice; def FileRepository) (choices: FileRepository)
    --repositorypath=REPOSITORYPATH
                        Repository path, used by repository (is passed as list of arguments to create the repository instance). For more info, use --avail-repositories. (type comma-separated list;
                        def /home/romain.pereira/.local/easybuild/ebfiles_repo)
    --sourcepath=SOURCEPATH
                        Path(s) to where sources should be downloaded (string, colon-separated) (def /home/romain.pereira/.local/easybuild/sources)
    --subdir-modules=SUBDIR-MODULES
                        Installpath subdir for modules (def modules)
    --subdir-software=SUBDIR-SOFTWARE
                        Installpath subdir for software (def software)
    --subdir-user-modules=SUBDIR-USER-MODULES
                        Base path of user-specific modules relative to their $HOME
    --suffix-modules-path=SUFFIX-MODULES-PATH
:[K[K/[K                        Suffix for module files install path (def all)
:[K[K/[K    --testoutput=TESTOUTPUT
                        Path to where a job should place the output (to be set within jobscript)
    --tmp-logdir=TMP-LOGDIR
                        Log directory where temporary log files are stored
    --tmpdir=TMPDIR     Directory to use for temporary storage

  Container options:
    Options related to generating container recipes & images (configfile section container)

    --container-base=BASE
                        Base for container image. Examples (for Singularity): --container-base localimage:/path/to/image.img, --container-base shub:<image>:<tag>, --container-base
                        docker:<image>:<tag>  (type <type 'str'>)
    --container-build-image
                        Build container image (requires sudo privileges!) (def False)
    --container-image-format=IMAGE-FORMAT
                        Container image format (type choice) (choices: ext3, sandbox, squashfs)
    --container-image-name=IMAGE-NAME
                        Custom name for container image (defaults to name of easyconfig)
    --container-tmpdir=TMPDIR
:[K[K/[K...skipping...
    --avail-[7mtoolchain[27m-opts=AVAIL-TOOLCHAIN-OPTS
                        Show options for [7mtoolchain[27m (type str)
    --check-conflicts   Check for version conflicts in dependency graphs (def False)
    --dep-graph=depgraph.<ext>
                        Create dependency graph
    --dump-env-script   Dump source script to set up build environment based on [7mtoolchain[27m/dependencies (def False)
    --last-log          Print location to EasyBuild log file of last (failed) session (def False)
    --list-easyblocks=LIST-EASYBLOCKS
                        Show list of available easyblocks (type choice; def simple) (choices: simple, detailed)
    --list-installed-software=LIST-INSTALLED-SOFTWARE
                        Show list of installed software (type choice; def simple) (choices: simple, detailed)
    --list-software=LIST-SOFTWARE
                        Show list of supported software (type choice; def simple) (choices: simple, detailed)
    --list-[7mtoolchain[27ms   Show list of known [7mtoolchain[27ms (def False)
    --search=REGEX      Search for easyconfig files in the robot search path, print full paths
    --search-filename=REGEX
                        Search for easyconfig files in the robot search path, print only filenames
    -S REGEX, --search-short=REGEX
                        Search for easyconfig files in the robot search path, print short paths
    --show-config       Show current EasyBuild configuration (only non-default + selected settings) (def False)
    --show-default-configfiles
                        Show list of default config files (def False)
    --show-default-moduleclasses
                        Show default module classes with description (def False)
    --show-full-config  Show current EasyBuild configuration (all settings) (def False)
    --show-system-info  Show system information relevant to EasyBuild (def False)
    --terse             Terse output (machine-readable) (def False)

  Options for job backend:
    Options for job backend (only relevant when --job is used) (configfile section job)

    --job-backend-config=BACKEND-CONFIG
                        Configuration file for job backend
    --job-cores=CORES   Number of cores to request per job (type int)
    --job-deps-type=DEPS-TYPE
                        Type of dependency to set between jobs (default depends on job backend) (type choice) (choices: abort_on_error, always_run)
    --job-max-jobs=MAX-JOBS
                        Maximum number of concurrent jobs (queued and running, 0 = unlimited) (type int; def 0)
    --job-max-walltime=MAX-WALLTIME
                        Maximum walltime for jobs (in hours) (type int; def 24)
    --job-output-dir=OUTPUT-DIR
                        Output directory for jobs (default: current directory) (def /home/romain.pereira)
    --job-polling-interval=POLLING-INTERVAL
                        Interval between polls for status of jobs (in seconds) (type <type 'float'>; def 30.0)
    --job-target-resource=TARGET-RESOURCE
                        Target resource for jobs

  Override options:
:[K[K/[K    Override default EasyBuild behavior. (configfile section override)
:[K[K/[K
    --add-dummy-to-minimal-[7mtoolchain[27ms
                        Include dummy in minimal [7mtoolchain[27m searches (def False)
    --allow-loaded-modules=ALLOW-LOADED-MODULES
:[K[K/[K                        List of software names for which to allow loaded modules in initial environment (type comma-separated list; def EasyBuild)
    --allow-modules-tool-mismatch
                        Allow mismatch of modules tool and definition of 'module' function (def False)
    --allow-use-as-root-and-accept-consequences
                        Allow using of EasyBuild as root (NOT RECOMMENDED!) (def False)
    --backup-modules    Back up an existing module file, if any. Only works when using --module-only
    --check-ebroot-env-vars=CHECK-EBROOT-ENV-VARS
                        Action to take when defined $EBROOT* environment variables are found for which there is no matching loaded module; supported values: error, ignore, unset, warn (def warn)
:[K[K/[K    --cleanup-builddir  Cleanup build dir after successful installation. (def True)
    --cleanup-tmpdir    Cleanup tmp dir after successful run. (def True)
    --color=WHEN        Colorize output (type choice; def auto) (choices: auto, always, never)
    --consider-archived-easyconfigs
                        Also consider archived easyconfigs (def False)
    -C, --containerize  Generate container recipe/image (def False)
    --debug-lmod        Run Lmod modules tool commands in debug module (def False)
    --default-opt-level=DEFAULT-OPT-LEVEL
                        Specify default optimisation level (type choice; def defaultopt) (choices: noopt, lowopt, defaultopt, opt)
    --deprecated=DEPRECATED
                        Run pretending to be (future) version, to test removal of deprecated code.
    --detect-loaded-modules=DETECT-LOADED-MODULES
                        Detect loaded EasyBuild-generated modules, act accordingly; supported values: error, ignore, purge, unload, warn (def warn)
    --devel             Enable including of development log messages (def False)
    --download-timeout=DOWNLOAD-TIMEOUT
                        Timeout for initiating downloads (in seconds) (type <type 'float'>)
    --dump-autopep8     Reformat easyconfigs using autopep8 when dumping them (def False)
    -e CLASS, --easyblock=CLASS
                        easyblock to use for processing the spec file or dumping the options
    --enforce-checksums
                        Enforce availability of checksums for all sources/patches, so they can be verified (def False)
    --experimental      Allow experimental code (with behaviour that can be changed/removed at any given time). (def False)
    --extra-modules=EXTRA-MODULES
                        List of extra modules to load after setting up the build environment (type comma-separated list)
    --fetch             Allow downloading sources ignoring OS and modules tool dependencies, implies --stop=fetch, --ignore-osdeps and ignore modules tool (def False)
    --filter-deps=FILTER-DEPS
                        List of dependencies that you do *not* want to install with EasyBuild, because equivalent OS packages are installed. (e.g. --filter-deps=zlib,ncurses) (type comma-separated
                        list)
    --filter-env-vars=FILTER-ENV-VARS
                        List of names of environment variables that should *not* be defined/updated by module files generated by EasyBuild (type comma-separated list)
    --fixed-installdir-naming-scheme
                        Use fixed naming scheme for installation directories (def False)
    --force-download=FORCE-DOWNLOAD
                        Force re-downloading of sources and/or patches, even if they are available already in source path (type choice; def sources) (choices: all, patches, sources)
    --group=GROUP       Group to be used for software installations (only verified, not set)
    --group-writable-installdir
                        Enable group write permissions on installation directory after installation (def False)
:[K[K/[K    --hidden            Install 'hidden' module file(s) by prefixing their version with '.' (def False)
:[K[K/[K...skipping...
    --hide-[7mtoolchain[27ms=HIDE-TOOLCHAINS
                        Comma separated list of [7mtoolchain[27ms that you want automatically hidden, (e.g. --hide-[7mtoolchain[27ms=GCCcore) (type comma-separated list)
    --ignore-checksums  Ignore failing checksum verification (def False)
    --ignore-osdeps     Ignore any listed OS dependencies (def False)
    --install-latest-eb-release
                        Install latest known version of easybuild (def False)
    --lib64-fallback-sanity-check
                        Fallback in sanity check to lib64/ equivalent for missing libraries (def True)
    --max-fail-ratio-adjust-permissions=MAX-FAIL-RATIO-ADJUST-PERMISSIONS
                        Maximum ratio for failures to allow when adjusting permissions (type float; def 0.5)
    --minimal-[7mtoolchain[27ms
                        Use minimal [7mtoolchain[27m when resolving dependencies (def False)
    --module-only       Only generate module file(s); skip all steps except for module, prepare, ready, sanitycheck (def False)
    --modules-tool-version-check
                        Check version of modules tool being used (def True)
    --mpi-cmd-template=MPI-CMD-TEMPLATE
                        Template for MPI commands (template keys: %(nr_ranks)s, %(cmd)s)
    --mpi-tests         Run MPI tests (when relevant) (def True)
    --optarch=OPTARCH   Set architecture optimization, overriding native architecture optimizations
    --output-format=OUTPUT-FORMAT
                        Set output format (type choice; def txt) (choices: txt, rst)
    --parallel=PARALLEL
                        Specify (maximum) level of parallellism used during build procedure (type int)
    --pre-create-installdir
                        Create installation directory before submitting build jobs (def True)
    -p, --pretend       Does the build/installation in a test directory located in $HOME/easybuildinstall (def False)
    --read-only-installdir
                        Set read-only permissions on installation directory after installation (def False)
    --rpath             Enable use of RPATH for linking with libraries (def False)
    --rpath-filter=RPATH-FILTER
                        List of regex patterns to use for filtering out RPATH paths (type comma-separated list)
    --set-default-module
                        Set the generated module as default (def False)
    --set-gid-bit       Set group ID bit on newly created directories (def False)
    -t, --skip-test-cases
                        Skip running test cases (def False)
    --sticky-bit        Set sticky bit on newly created directories (def False)
    -T, --trace         Provide more information in output to stdout on progress (def False)
    --umask=UMASK       umask to use (e.g. '022'); non-user write permissions on install directories are removed
    --update-modules-tool-cache
                        Update modules tool cache file(s) after generating module file (def False)
    --use-ccache=PATH   Enable use of ccache to speed up compilation, with specified cache dir (type <type 'str'>; def False)
    --use-existing-modules
                        Use existing modules when resolving dependencies with minimal [7mtoolchain[27ms (def False)
    --use-f90cache=PATH
                        Enable use of f90cache to speed up compilation, with specified cache dir (type <type 'str'>; def False)
    --verify-easyconfig-filenames
                        Verify whether filename of specified easyconfigs matches with contents (def False)
:[K[K/[K    --zip-logs=ZIP-LOGS
:[K[K/[K                        Zip logs that are copied to install directory, using specified command (def gzip)

  Package options:
    Control packaging performed by EasyBuild. (configfile section package)

    --package           Enabling packaging (def False)
    --package-release=PACKAGE-RELEASE
                        Package release iteration number (def 1)
    --package-tool=PACKAGE-TOOL
:[K[K/[K                        Packaging tool to use (def fpm)
:[K[K/[K    --package-tool-options=PACKAGE-TOOL-OPTIONS
                        Extra options for packaging tool (def '')
    --package-type=PACKAGE-TYPE
                        Type of package to generate (def rpm)

  Regression test options:
    Run and control an EasyBuild regression test. (configfile section regtest)

    --aggregate-regtest=DIR
                        Collect all the xmls inside the given directory and generate a single file
    --regtest           Enable regression test mode (def False)
    --regtest-output-dir=DIR
                        Set output directory for test-run
    --sequential        Specify this option if you want to prevent parallel build (def False)

  Software search and build options:
    Specify software search and build options: EasyBuild will search for a matching easyconfig and build it. When called with the try prefix (i.e. --try-X ), EasyBuild will search for a
    matching easyconfig and if none are found, try to generate one based on a close matching one (NOTE: --try-X is best effort, it might produce wrong builds!) (configfile section software)

    --amend=VAR=VALUE[,VALUE]
                        Specify additional search and build parameters (can be used multiple times); for example: versionprefix=foo or patches=one.patch,two.patch)
    --map-[7mtoolchain[27ms    Enable mapping of (sub)[7mtoolchain[27ms when --try-[7mtoolchain[27m(-version) is used (def True)
    --software=NAME,VERSION
                        Search and build software with given name and version (type comma-separated list)
    --software-name=NAME
                        Search and build software with given name
    --software-version=VERSION
                        Search and build software with given version
    --[7mtoolchain[27m=NAME,VERSION
                        Search and build with given [7mtoolchain[27m (name and version) (type comma-separated list)
    --[7mtoolchain[27m-name=NAME
                        Search and build with given [7mtoolchain[27m name
:[K[K [KESCESC[K[[[K66[K~~[K    --[7mtoolchain[27m-version=VERSION
                        Search and build with given [7mtoolchain[27m version
    --try-amend=VAR=VALUE[,VALUE]
                        Try to specify additional search and build parameters (can be used multiple times); for example: versionprefix=foo or patches=one.patch,two.patch) (USE WITH CARE!)
    --try-software=NAME,VERSION
                        Try to search and build software with given name and version (USE WITH CARE!) (type comma-separated list)
    --try-software-name=NAME
                        Try to search and build software with given name (USE WITH CARE!)
    --try-software-version=VERSION
                        Try to search and build software with given version (USE WITH CARE!)
    --try-[7mtoolchain[27m=NAME,VERSION
                        Try to search and build with given [7mtoolchain[27m (name and version) (USE WITH CARE!) (type comma-separated list)
    --try-[7mtoolchain[27m-name=NAME
                        Try to search and build with given [7mtoolchain[27m name (USE WITH CARE!)
    --try-[7mtoolchain[27m-version=VERSION
                        Try to search and build with given [7mtoolchain[27m version (USE WITH CARE!)

  Unittest options:
    Options dedicated to unittesting (experts only). (configfile section unittest)

    --unittest-file=FILE
                        Log to this file in unittest mode

Boolean options support disable prefix to do the inverse of the action, e.g. option --someopt also supports --disable-someopt.

All long option names can be passed as environment variables. Variable name is EASYBUILD_<LONGNAME> eg. --some-opt is same as setting EASYBUILD_SOME_OPT in the environment.
[7m(END)[27m[K[K [KESCESC[K[[[K66[K~~[K[K[7m(END)[27m[K[K/[Kff[Kii[Kll[Kee[K[1;1H    --regtest           Enable regression test mode (def False)
[2;1H    --regtest-output-dir=DIR
[3;1H                        Set output directory for test-run
[4;1H    --sequential        Specify this option if you want to prevent parallel build (def False)
[5;1H
[6;1H  Software search and build options:
[7;1H    Specify software search and build options: EasyBuild will search for a matching easyconfig and build it. When called with the try prefix (i.e. --try-X ), EasyBuild will search for a
[8;1H    matching easyconfig and if none are found, try to generate one based on a close matching one (NOTE: --try-X is best effort, it might produce wrong builds!) (configfile section software)
[9;1H
[10;1H    --amend=VAR=VALUE[,VALUE]
[11;1H                        Specify additional search and build parameters (can be used multiple times); for example: versionprefix=foo or patches=one.patch,two.patch)
[12;1H    --map-toolchains    Enable mapping of (sub)toolchains when --try-toolchain(-version) is used (def True)
[13;1H    --software=NAME,VERSION
[14;1H                        Search and build software with given name and version (type comma-separated list)
[15;1H    --software-name=NAME
[16;1H                        Search and build software with given name
[17;1H    --software-version=VERSION
[18;1H                        Search and build software with given version
[19;1H    --toolchain=NAME,VERSION
[20;1H                        Search and build with given toolchain (name and version) (type comma-separated list)
[21;1H    --toolchain-name=NAME
[22;1H                        Search and build with given toolchain name
[23;1H    --toolchain-version=VERSION
[24;1H                        Search and build with given toolchain version
[25;1H    --try-amend=VAR=VALUE[,VALUE]
[26;1H                        Try to specify additional search and build parameters (can be used multiple times); for example: versionprefix=foo or patches=one.patch,two.patch) (USE WITH CARE!)
[27;1H    --try-software=NAME,VERSION
[28;1H                        Try to search and build software with given name and version (USE WITH CARE!) (type comma-separated list)
[29;1H    --try-software-name=NAME
[30;1H                        Try to search and build software with given name (USE WITH CARE!)
[31;1H    --try-software-version=VERSION
[32;1H                        Try to search and build software with given version (USE WITH CARE!)
[33;1H    --try-toolchain=NAME,VERSION
[34;1H                        Try to search and build with given toolchain (name and version) (USE WITH CARE!) (type comma-separated list)
[35;1H    --try-toolchain-name=NAME
[36;1H                        Try to search and build with given toolchain name (USE WITH CARE!)
[37;1H    --try-toolchain-version=VERSION
[38;1H                        Try to search and build with given toolchain version (USE WITH CARE!)
[39;1H
[40;1H  Unittest options:
[41;1H    Options dedicated to unittesting (experts only). (configfile section unittest)
[42;1H
[43;1H    --unittest-file=FILE
[44;1H                        Log to this file in unittest mode
[45;1H
[46;1HBoolean options support disable prefix to do the inverse of the action, e.g. option --someopt also supports --disable-someopt.
[47;1H
[48;1HAll long option names can be passed as environment variables. Variable name is EASYBUILD_<LONGNAME> eg. --some-opt is same as setting EASYBUILD_SOME_OPT in the environment.
[49;1H[1;1H    --regtest           Enable regression test mode (def False)
[2;1H    --regtest-output-dir=DIR
[3;1H                        Set output directory for test-run
[4;1H    --sequential        Specify this option if you want to prevent parallel build (def False)
[5;1H
[6;1H  Software search and build options:
[7;1H    Specify software search and build options: EasyBuild will search for a matching easyconfig and build it. When called with the try prefix (i.e. --try-X ), EasyBuild will search for a
[8;1H    matching easyconfig and if none are found, try to generate one based on a close matching one (NOTE: --try-X is best effort, it might produce wrong builds!) (config[7mfile[27m section software)
[9;1H
[10;1H    --amend=VAR=VALUE[,VALUE]
[11;1H                        Specify additional search and build parameters (can be used multiple times); for example: versionprefix=foo or patches=one.patch,two.patch)
[12;1H    --map-toolchains    Enable mapping of (sub)toolchains when --try-toolchain(-version) is used (def True)
[13;1H    --software=NAME,VERSION
[14;1H                        Search and build software with given name and version (type comma-separated list)
[15;1H    --software-name=NAME
[16;1H                        Search and build software with given name
[17;1H    --software-version=VERSION
[18;1H                        Search and build software with given version
[19;1H    --toolchain=NAME,VERSION
[20;1H                        Search and build with given toolchain (name and version) (type comma-separated list)
[21;1H    --toolchain-name=NAME
[22;1H                        Search and build with given toolchain name
[23;1H    --toolchain-version=VERSION
[24;1H                        Search and build with given toolchain version
[25;1H    --try-amend=VAR=VALUE[,VALUE]
[26;1H                        Try to specify additional search and build parameters (can be used multiple times); for example: versionprefix=foo or patches=one.patch,two.patch) (USE WITH CARE!)
[27;1H    --try-software=NAME,VERSION
[28;1H                        Try to search and build software with given name and version (USE WITH CARE!) (type comma-separated list)
[29;1H    --try-software-name=NAME
[30;1H                        Try to search and build software with given name (USE WITH CARE!)
[31;1H    --try-software-version=VERSION
[32;1H                        Try to search and build software with given version (USE WITH CARE!)
[33;1H    --try-toolchain=NAME,VERSION
[34;1H                        Try to search and build with given toolchain (name and version) (USE WITH CARE!) (type comma-separated list)
[35;1H    --try-toolchain-name=NAME
[36;1H                        Try to search and build with given toolchain name (USE WITH CARE!)
[37;1H    --try-toolchain-version=VERSION
[38;1H                        Try to search and build with given toolchain version (USE WITH CARE!)
[39;1H
[40;1H  Unittest options:
[41;1H    Options dedicated to unittesting (experts only). (config[7mfile[27m section unittest)
[42;1H
[43;1H    --unittest-[7mfile[27m=FILE
[44;1H                        Log to this [7mfile[27m in unittest mode
[45;1H
[46;1HBoolean options support disable prefix to do the inverse of the action, e.g. option --someopt also supports --disable-someopt.
[47;1H
[48;1HAll long option names can be passed as environment variables. Variable name is EASYBUILD_<LONGNAME> eg. --some-opt is same as setting EASYBUILD_SOME_OPT in the environment.
[49;1H[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[7m(END)[27m[K[K/[K[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[7m(END)[27m[K[K/[K[1m~[0m
[1m~[0m
[7m(END)[27m[K[K/[K[1m~[0m
[7m(END)[27m[K[K/[K[K[7mPattern not found  (press RETURN)[27m[49;1H[K[K[H[2J[HM                        Stop the installation after certain step (type choice; def source) (choices: fetch, ready, source, patch, prepare, configure, build, test, install, extensions, postproc,
[HM    -s STOP, --stop=STOP
[HM    -k, --skip          Skip existing software (useful for installing additional packages) (def False)
[HM                        Additional locations to consider in --search (next to --robot and --robot-paths paths) (type pathsep-separated list; def )
[HM    --search-paths=PATH[:PATH]
[HM                        /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs)
[HM                        Additional paths to consider by robot for easyconfigs (--robot paths get priority) (type pathsep-separated list; def
[HM    --robot-paths=PATH[:PATH]
[HM                        Enable dependency resolution, using easyconfigs in specified paths (type pathsep-separated list; def )
[HM    -r PATH[:PATH], --robot=PATH[:PATH]
[HM    --rebuild           Rebuild software, even if module already exists (don't skip OS dependencies checks) (def False)
[HM                        Only build listed blocks (type comma-separated list)
[HM    -b BLOCKS, --only-blocks=BLOCKS
[HM    -l, --logtostdout   Redirect main log to stdout (def False)
[HM    --job               Submit the build as a job (def False)
[HM    -f, --force         Force to rebuild software even if it's already installed (i.e. if it can be found as module), and skipping check for OS dependencies (def False)
[HM                        Ignore errors that occur during dry run (def True)
[HM    --extended-dry-run-ignore-errors
[HM                        Print build environment and (expected) build procedure that will be performed (def False)
[HM    -x, --extended-dry-run
[HM                        Print build overview incl. dependencies (short paths) (def False)
[HM    -D, --dry-run-short
[HM    --dry-run           Print build overview incl. dependencies (full paths) (def False)
[HM
[HM    Basic runtime options for EasyBuild. (config[7mfile[27m section basic)
[HM  Basic options:
[HM
[HM                        Ignore config[7mfile[27ms (type comma-separated list)
[HM    --ignoreconfig[7mfile[27ms=IGNORECONFIGFILES
[HM                        Parse (additional) config[7mfile[27ms (type comma-separated list; def /home/romain.pereira/.config/easybuild/config.cfg)
[HM    --config[7mfile[27ms=CONFIGFILES
[HM  Config[7mfile[27m options:
[HM
[HM    --quiet             Enable quiet/warning log mode (def False)
[HM    --info              Enable info log mode (def False)
[HM    -d, --debug         Enable debug log mode (def False)
[HM  Debug and logging options (config[7mfile[27m section MAIN):
[HM
[HM  --confighelp          show help as annotated config[7mfile[27m
[HM                        show full help message and exit
[HM  -H OUTPUT_FORMAT, --help=OUTPUT_FORMAT
[HM  -h, --shorthelp       show short help message and exit
[HM  --version             show program's version number and exit
[HMOptions:
[HM
[HMBuilds software based on easyconfig (or parse a directory). Provide one or more easyconfigs or directories, use -H or --help more information.
[HM
[HMUsage: eb [options] easyconfig [...]
[49;1H[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K/[K                        sanitycheck, cleanup, module, permissions, package, testcases)
    --strict=STRICT     Set strictness level (type choice; def warn) (choices: ignore, warn, error)

  Configuration options:
    Configure EasyBuild behavior. (config[7mfile[27m section config)

    --avail-module-naming-schemes
                        Show all supported module naming schemes (def False)
    --avail-modules-tools
:[K[K/[K                        Show all supported module tools (def False)
    --avail-repositories
:[K[K/[K                        Show all repository types (incl. non-usable) (def False)
    --buildpath=BUILDPATH
                        Temporary build path (def /home/romain.pereira/.local/easybuild/build)
    --containerpath=CONTAINERPATH
                        Location where container recipe & image will be stored (def /home/romain.pereira/.local/easybuild/containers)
:[K[K/[K    --external-modules-metadata=EXTERNAL-MODULES-METADATA
:[K[K/[K                        List of [7mfile[27ms specifying metadata for external modules (INI format) (type comma-separated list)
:[K[K/[K    --hooks=HOOKS       Location of Python module with hook implementations (type str)
:[K[K/[K    --ignore-dirs=IGNORE-DIRS
:[K[K/[K                        Directory names to ignore when searching for [7mfile[27ms/dirs (type comma-separated list; def .git,.svn)
    --include-easyblocks=INCLUDE-EASYBLOCKS
                        Location(s) of extra or customized easyblocks (type comma-separated list; def )
:[K[K/[K    --include-module-naming-schemes=INCLUDE-MODULE-NAMING-SCHEMES
                        Location(s) of extra or customized module naming schemes (type comma-separated list; def )
    --include-toolchains=INCLUDE-TOOLCHAINS
                        Location(s) of extra or customized toolchains or toolchain components (type comma-separated list; def )
    --installpath=INSTALLPATH
                        Install path for software and modules (def /home/romain.pereira/.local/easybuild)
    --installpath-modules=INSTALLPATH-MODULES
                        Install path for modules (if None, combine --installpath and --subdir-modules)
    --installpath-software=INSTALLPATH-SOFTWARE
                        Install path for software (if None, combine --installpath and --subdir-software)
    --job-backend=JOB-BACKEND
                        Backend to use for submitting jobs (type choice; def GC3Pie) (choices: GC3Pie, PbsPython, Slurm)
    --log[7mfile[27m-format=DIR,FORMAT
                        Directory name and format of the log [7mfile[27m (type comma-separated tuple; def easybuild,easybuild-%(name)s-%(version)s-%(date)s.%(time)s.log)
    --module-depends-on
                        Use depends_on (Lmod 7.6.1+) for dependencies in all generated modules (implies recursive unloading of modules). (def False)
    --module-naming-scheme=MODULE-NAMING-SCHEME
                        Module naming scheme to use (def EasyBuildMNS)
    --module-syntax=MODULE-SYNTAX
                        Syntax to be used for module [7mfile[27ms (type choice; def Lua) (choices: Lua, Tcl)
    --moduleclasses=MODULECLASSES
                        Extend supported module classes (For more info on the default classes, use --show-default-moduleclasses) (type comma-separated list; def
                        base,astro,bio,cae,chem,compiler,data,debugger,devel,geo,ide,lang,lib,math,mpi,numlib,perf,quantum,phys,system,toolchain,tools,vis)
    --modules-footer=PATH
                        Path to [7mfile[27m containing footer to be added to all generated module [7mfile[27ms
    --modules-header=PATH
                        Path to [7mfile[27m containing header to be added to all generated module [7mfile[27ms
    --modules-tool=MODULES-TOOL
                        Modules tool to use (type choice; def Lmod) (choices: EnvironmentModules, EnvironmentModulesC, EnvironmentModulesTcl, Lmod)
:[K[K/[K    --package-naming-scheme=PACKAGE-NAMING-SCHEME
                        Packaging naming scheme choice (type choice; def EasyBuildPNS) (choices: EasyBuildPNS)
    --packagepath=PACKAGEPATH
                        The destination path for the packages built by package-tool (def /home/romain.pereira/.local/easybuild/packages)
    --prefix=PREFIX     Change prefix for buildpath, installpath, sourcepath and repositorypath (used prefix for defaults /home/romain.pereira/.local/easybuild)
    --recursive-module-unload
                        Enable generating of modules that unload recursively. (def False)
    --repository=REPOSITORY
                        Repository type, using repositorypath (type choice; def FileRepository) (choices: FileRepository)
    --repositorypath=REPOSITORYPATH
                        Repository path, used by repository (is passed as list of arguments to create the repository instance). For more info, use --avail-repositories. (type comma-separated list;
                        def /home/romain.pereira/.local/easybuild/eb[7mfile[27ms_repo)
    --sourcepath=SOURCEPATH
:[K[K/[K                        Path(s) to where sources should be downloaded (string, colon-separated) (def /home/romain.pereira/.local/easybuild/sources)
    --subdir-modules=SUBDIR-MODULES
                        Installpath subdir for modules (def modules)
:[K[K/[K    --subdir-software=SUBDIR-SOFTWARE
                        Installpath subdir for software (def software)
    --subdir-user-modules=SUBDIR-USER-MODULES
                        Base path of user-specific modules relative to their $HOME
    --suffix-modules-path=SUFFIX-MODULES-PATH
                        Suffix for module [7mfile[27ms install path (def all)
    --testoutput=TESTOUTPUT
                        Path to where a job should place the output (to be set within jobscript)
    --tmp-logdir=TMP-LOGDIR
                        Log directory where temporary log [7mfile[27ms are stored
    --tmpdir=TMPDIR     Directory to use for temporary storage

  Container options:
    Options related to generating container recipes & images (config[7mfile[27m section container)

:[K[K/[K    --container-base=BASE
:[K[K/[K                        Base for container image. Examples (for Singularity): --container-base localimage:/path/to/image.img, --container-base shub:<image>:<tag>, --container-base
                        docker:<image>:<tag>  (type <type 'str'>)
    --container-build-image
                        Build container image (requires sudo privileges!) (def False)
    --container-image-format=IMAGE-FORMAT
                        Container image format (type choice) (choices: ext3, sandbox, squashfs)
:[K[K/[K    --container-image-name=IMAGE-NAME
                        Custom name for container image (defaults to name of easyconfig)
    --container-tmpdir=TMPDIR
                        Temporary directory where container image is built
    --container-type=TYPE
:[K[K/[K                        Type of container recipe/image to create (type choice; def singularity) (choices: docker, singularity)

:[K[K/[K  Options for Easyconfigs:
    Options to be passed to all Easyconfig. (config[7mfile[27m section easyconfig)

    --inject-checksums=INJECT-CHECKSUMS
                        Inject checksums of specified type for sources/patches into easyconfig [7mfile[27m(s) (type choice; def sha256) (choices: adler32, crc32, md5, sha1, sha256, sha512, size)

  GitHub integration options:
    Integration with GitHub (config[7mfile[27m section github)

    --check-contrib     Runs checks to see whether the given easyconfigs are ready to be contributed back (def False)
    --check-github      Check status of GitHub integration, and report back (def False)
    --check-style       Run a style check on the given easyconfigs (def False)
    --cleanup-easyconfigs
                        Clean up easyconfig [7mfile[27ms for pull request (def True)
:[K[K/[K    --close-pr=PR#      Close pull request (type <type 'int'>)
    --close-pr-msg=CLOSE-PR-MSG
                        Custom close message for pull request closed with --close-pr;  (type <type 'str'>)
    --close-pr-reasons=CLOSE-PR-REASONS
                        Close reason for pull request closed with --close-pr; supported values: archived, inactive, obsolete (type <type 'str'>)
    --dump-test-report=DUMP-TEST-REPORT
                        Dump test report to specified path (def test_report.md)
    --from-pr=PR#       Obtain easyconfigs from specified PR (type <type 'int'>)
    --git-working-dirs-path=GIT-WORKING-DIRS-PATH
                        Path to Git working directories for EasyBuild repositories (type <type 'str'>)
:[K[K[?1l>[?1049l]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --help | less
[?1049h[?1h=Usage: eb [options] easyconfig [...]

Builds software based on easyconfig (or parse a directory). Provide one or more easyconfigs or directories, use -H or --help more information.

Options:
  --version             show program's version number and exit
  -h, --shorthelp       show short help message and exit
  -H OUTPUT_FORMAT, --help=OUTPUT_FORMAT
                        show full help message and exit
  --confighelp          show help as annotated configfile

  Debug and logging options (configfile section MAIN):
    -d, --debug         Enable debug log mode (def False)
    --info              Enable info log mode (def False)
    --quiet             Enable quiet/warning log mode (def False)

  Configfile options:
    --configfiles=CONFIGFILES
                        Parse (additional) configfiles (type comma-separated list; def /home/romain.pereira/.config/easybuild/config.cfg)
    --ignoreconfigfiles=IGNORECONFIGFILES
                        Ignore configfiles (type comma-separated list)

  Basic options:
    Basic runtime options for EasyBuild. (configfile section basic)

    --dry-run           Print build overview incl. dependencies (full paths) (def False)
    -D, --dry-run-short
                        Print build overview incl. dependencies (short paths) (def False)
    -x, --extended-dry-run
                        Print build environment and (expected) build procedure that will be performed (def False)
    --extended-dry-run-ignore-errors
                        Ignore errors that occur during dry run (def True)
    -f, --force         Force to rebuild software even if it's already installed (i.e. if it can be found as module), and skipping check for OS dependencies (def False)
    --job               Submit the build as a job (def False)
    -l, --logtostdout   Redirect main log to stdout (def False)
    -b BLOCKS, --only-blocks=BLOCKS
                        Only build listed blocks (type comma-separated list)
    --rebuild           Rebuild software, even if module already exists (don't skip OS dependencies checks) (def False)
    -r PATH[:PATH], --robot=PATH[:PATH]
                        Enable dependency resolution, using easyconfigs in specified paths (type pathsep-separated list; def )
    --robot-paths=PATH[:PATH]
                        Additional paths to consider by robot for easyconfigs (--robot paths get priority) (type pathsep-separated list; def
                        /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs)
    --search-paths=PATH[:PATH]
                        Additional locations to consider in --search (next to --robot and --robot-paths paths) (type pathsep-separated list; def )
    -k, --skip          Skip existing software (useful for installing additional packages) (def False)
    -s STOP, --stop=STOP
                        Stop the installation after certain step (type choice; def source) (choices: fetch, ready, source, patch, prepare, configure, build, test, install, extensions, postproc,
:[K[K/[Kdd[Krr[Kyy[K--[Krr[Kuu[Knn[K[1;1HUsage: eb [options] easyconfig [...]
[2;1H
[3;1HBuilds software based on easyconfig (or parse a directory). Provide one or more easyconfigs or directories, use -H or --help more information.
[4;1H
[5;1HOptions:
[6;1H  --version             show program's version number and exit
[7;1H  -h, --shorthelp       show short help message and exit
[8;1H  -H OUTPUT_FORMAT, --help=OUTPUT_FORMAT
[9;1H                        show full help message and exit
[10;1H  --confighelp          show help as annotated configfile
[11;1H
[12;1H  Debug and logging options (configfile section MAIN):
[13;1H    -d, --debug         Enable debug log mode (def False)
[14;1H    --info              Enable info log mode (def False)
[15;1H    --quiet             Enable quiet/warning log mode (def False)
[16;1H
[17;1H  Configfile options:
[18;1H    --configfiles=CONFIGFILES
[19;1H                        Parse (additional) configfiles (type comma-separated list; def /home/romain.pereira/.config/easybuild/config.cfg)
[20;1H    --ignoreconfigfiles=IGNORECONFIGFILES
[21;1H                        Ignore configfiles (type comma-separated list)
[22;1H
[23;1H  Basic options:
[24;1H    Basic runtime options for EasyBuild. (configfile section basic)
[25;1H
[26;1H    --dry-run           Print build overview incl. dependencies (full paths) (def False)
[27;1H    -D, --dry-run-short
[28;1H                        Print build overview incl. dependencies (short paths) (def False)
[29;1H    -x, --extended-dry-run
[30;1H                        Print build environment and (expected) build procedure that will be performed (def False)
[31;1H    --extended-dry-run-ignore-errors
[32;1H                        Ignore errors that occur during dry run (def True)
[33;1H    -f, --force         Force to rebuild software even if it's already installed (i.e. if it can be found as module), and skipping check for OS dependencies (def False)
[34;1H    --job               Submit the build as a job (def False)
[35;1H    -l, --logtostdout   Redirect main log to stdout (def False)
[36;1H    -b BLOCKS, --only-blocks=BLOCKS
[37;1H                        Only build listed blocks (type comma-separated list)
[38;1H    --rebuild           Rebuild software, even if module already exists (don't skip OS dependencies checks) (def False)
[39;1H    -r PATH[:PATH], --robot=PATH[:PATH]
[40;1H                        Enable dependency resolution, using easyconfigs in specified paths (type pathsep-separated list; def )
[41;1H    --robot-paths=PATH[:PATH]
[42;1H                        Additional paths to consider by robot for easyconfigs (--robot paths get priority) (type pathsep-separated list; def
[43;1H                        /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs)
[44;1H    --search-paths=PATH[:PATH]
[45;1H                        Additional locations to consider in --search (next to --robot and --robot-paths paths) (type pathsep-separated list; def )
[46;1H    -k, --skip          Skip existing software (useful for installing additional packages) (def False)
[47;1H    -s STOP, --stop=STOP
[48;1H                        Stop the installation after certain step (type choice; def source) (choices: fetch, ready, source, patch, prepare, configure, build, test, install, extensions, postproc,
[49;1H[1;1HUsage: eb [options] easyconfig [...]
[2;1H
[3;1HBuilds software based on easyconfig (or parse a directory). Provide one or more easyconfigs or directories, use -H or --help more information.
[4;1H
[5;1HOptions:
[6;1H  --version             show program's version number and exit
[7;1H  -h, --shorthelp       show short help message and exit
[8;1H  -H OUTPUT_FORMAT, --help=OUTPUT_FORMAT
[9;1H                        show full help message and exit
[10;1H  --confighelp          show help as annotated configfile
[11;1H
[12;1H  Debug and logging options (configfile section MAIN):
[13;1H    -d, --debug         Enable debug log mode (def False)
[14;1H    --info              Enable info log mode (def False)
[15;1H    --quiet             Enable quiet/warning log mode (def False)
[16;1H
[17;1H  Configfile options:
[18;1H    --configfiles=CONFIGFILES
[19;1H                        Parse (additional) configfiles (type comma-separated list; def /home/romain.pereira/.config/easybuild/config.cfg)
[20;1H    --ignoreconfigfiles=IGNORECONFIGFILES
[21;1H                        Ignore configfiles (type comma-separated list)
[22;1H
[23;1H  Basic options:
[24;1H    Basic runtime options for EasyBuild. (configfile section basic)
[25;1H
[26;1H    --[7mdry-run[27m           Print build overview incl. dependencies (full paths) (def False)
[27;1H    -D, --[7mdry-run[27m-short
[28;1H                        Print build overview incl. dependencies (short paths) (def False)
[29;1H    -x, --extended-[7mdry-run[27m
[30;1H                        Print build environment and (expected) build procedure that will be performed (def False)
[31;1H    --extended-[7mdry-run[27m-ignore-errors
[32;1H                        Ignore errors that occur during dry run (def True)
[33;1H    -f, --force         Force to rebuild software even if it's already installed (i.e. if it can be found as module), and skipping check for OS dependencies (def False)
[34;1H    --job               Submit the build as a job (def False)
[35;1H    -l, --logtostdout   Redirect main log to stdout (def False)
[36;1H    -b BLOCKS, --only-blocks=BLOCKS
[37;1H                        Only build listed blocks (type comma-separated list)
[38;1H    --rebuild           Rebuild software, even if module already exists (don't skip OS dependencies checks) (def False)
[39;1H    -r PATH[:PATH], --robot=PATH[:PATH]
[40;1H                        Enable dependency resolution, using easyconfigs in specified paths (type pathsep-separated list; def )
[41;1H    --robot-paths=PATH[:PATH]
[42;1H                        Additional paths to consider by robot for easyconfigs (--robot paths get priority) (type pathsep-separated list; def
[43;1H                        /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs)
[44;1H    --search-paths=PATH[:PATH]
[45;1H                        Additional locations to consider in --search (next to --robot and --robot-paths paths) (type pathsep-separated list; def )
[46;1H    -k, --skip          Skip existing software (useful for installing additional packages) (def False)
[47;1H    -s STOP, --stop=STOP
[48;1H                        Stop the installation after certain step (type choice; def source) (choices: fetch, ready, source, patch, prepare, configure, build, test, install, extensions, postproc,
[49;1H                        sanitycheck, cleanup, module, permissions, package, testcases)
    --strict=STRICT     Set strictness level (type choice; def warn) (choices: ignore, warn, error)

  Configuration options:
    Configure EasyBuild behavior. (configfile section config)

    --avail-module-naming-schemes
                        Show all supported module naming schemes (def False)
    --avail-modules-tools
                        Show all supported module tools (def False)
    --avail-repositories
                        Show all repository types (incl. non-usable) (def False)
    --buildpath=BUILDPATH
                        Temporary build path (def /home/romain.pereira/.local/easybuild/build)
    --containerpath=CONTAINERPATH
                        Location where container recipe & image will be stored (def /home/romain.pereira/.local/easybuild/containers)
    --external-modules-metadata=EXTERNAL-MODULES-METADATA
                        List of files specifying metadata for external modules (INI format) (type comma-separated list)
    --hooks=HOOKS       Location of Python module with hook implementations (type str)
    --ignore-dirs=IGNORE-DIRS
                        Directory names to ignore when searching for files/dirs (type comma-separated list; def .git,.svn)
    --include-easyblocks=INCLUDE-EASYBLOCKS
                        Location(s) of extra or customized easyblocks (type comma-separated list; def )
    --include-module-naming-schemes=INCLUDE-MODULE-NAMING-SCHEMES
                        Location(s) of extra or customized module naming schemes (type comma-separated list; def )
:[K[K [KESCESC[KOO[KAA[K[HM
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM    Basic runtime options for EasyBuild. (configfile section basic)
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM  Basic options:
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM                        Ignore configfiles (type comma-separated list)
[49;1H[K:[K[K [KESCESC[KOO[KAA[K[HM    --ignoreconfigfiles=IGNORECONFIGFILES
[49;1H[K:[K[K[?1l>[?1049l]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ vim /h^C
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ less /home/romain.lo[K[Kpereira/local/esa[K[Kasybuild/software/e[KEasyBuild/3.8.1/libpy[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[1P[1P[C[1P /home/romain.pereira/[1P /home/romain.pereira/f /home/romain.pereira/i /home/romain.pereira/n /home/romain.pereira/d /home/romain.pereira/[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
.cache/      .dbus/       dummy/       LDAP/        .local/      .mozilla/    .pki/        S4/          .xemacs/     
.config/     DNS/         FS/          local/       modulefiles/ .pcocc/      S3/          .ssh/        
[romain.pereira@hpc01 ~]$ find /home/romain.pereira/local/easybuild/
modules/  software/ 
[romain.pereira@hpc01 ~]$ find /home/romain.pereira/local/easybuild/ -name "*dy[Kummy*"
/home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/easybuild/toolchains/dummy.py
/home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/easybuild/toolchains/dummy.pyc
/home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/easybuild/toolchains/dummy.pyo
/home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/easybuild/toolchains/compiler/dummycompiler.py
/home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/easybuild/toolchains/compiler/dummycompiler.pyc
/home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/easybuild/toolchains/compiler/dummycompiler.pyo
/home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/sandbox/easybuild/easyblocks/generic/dummyextension.py
/home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/sandbox/easybuild/easyblocks/generic/dummyextension.pyc
/home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_framework-3.8.1-py2.7.egg/test/framework/sandbox/easybuild/easyblocks/generic/dummyextension.pyo
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ vfind /home/romain.pereira/local/easybuild/ -name "*dummy*"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ceb --help | less[K[11@list-toolchains[C[C[C[C[C[C[C[8Psearch="dummy"vim /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eeb[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[2P/home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cvim /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eeb
[?1049h[?1h=[2;1Hâ½[6n[1;1H  [1;1H[1;49r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[49;1H"~/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb" 32L, 874C[>c[1;1H[38;5;130m  1 [mname = 'flex'
[38;5;130m  2 [mversion = '2.6.4'
[38;5;130m  3 
  4 [mhomepage = 'http://flex.sourceforge.net/'
[38;5;130m  5 
  6 [mdescription = """
[38;5;130m  7 [m Flex (Fast Lexical Analyzer) is a tool for generating scanners. A scanner,
[38;5;130m  8 [m sometimes called a tokenizer, is a program which recognizes lexical patterns
[38;5;130m  9 [m in text.
[38;5;130m 10 [m"""
[38;5;130m 11 
 12 [mtoolchain = {'name': 'dummy', 'version': ''}
[38;5;130m 13 [mtoolchainopts = {'pic': True}
[38;5;130m 14 
 15 [msource_urls = ['https://github.com/westes/flex/releases/download/v%(version)s/']
[38;5;130m 16 [msources = [SOURCELOWER_TAR_GZ]
[38;5;130m 17 [mchecksums = ['e87aae032bf07c26f85ac0ed3250998c37621d95f8bd748b31f15b33c45ee995']
[38;5;130m 18 
 19 [mbuilddependencies = [
[38;5;130m 20 [m    ('Bison', '3.0.4'),
[38;5;130m 21 [m    ('help2man', '1.47.4'),
[38;5;130m 22 [m]
[38;5;130m 23 
 24 [mdependencies = [
[38;5;130m 25 [m    ('M4', '1.4.18'),
[38;5;130m 26 [m]
[38;5;130m 27 
 28 [m# glibc 2.26 requires _GNU_SOURCE defined to expose reallocarray in the correct
[38;5;130m 29 [m# header, see https://github.com/westes/flex/issues/241
[38;5;130m 30 [mpreconfigopts = 'export CPPFLAGS="$CPPFLAGS -D_GNU_SOURCE" && '
[38;5;130m 31 
 32 [mmoduleclass = 'lang'
[94m~                                                                                                                                                                                                     [34;1H~                                                                                                                                                                                                     [35;1H~                                                                                                                                                                                                     [36;1H~                                                                                                                                                                                                     [37;1H~                                                                                                                                                                                                     [38;1H~                                                                                                                                                                                                     [39;1H~                                                                                                                                                                                                     [40;1H~                                                                                                                                                                                                     [41;1H~                                                                                                                                                                                                     [42;1H~                                                                                                                                                                                                     [43;1H~                                                                                                                                                                                                     [44;1H~                                                                                                                                                                                                     [45;1H~                                                                                                                                                                                                     [46;1H~                                                                                                                                                                                                     [47;1H~                                                                                                                                                                                                     [48;1H~                                                                                                                                                                                                     [m[49;181H1,1[10CTout[1;5H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[49;1H[K[49;1H/[?12l[?25hu[?25l[?12l[?25h[?25l[49;2H[K[49;2H[?12l[?25h [?25l[179C1,1[10CTout[1;5H[?12l[?25h[?25l[49;181H[K[49;1H/[?12l[?25hd[?25l[?12l[?25hu[?25l[?12l[?25hm[?25l[?12l[?25hm[?25l[?12l[?25hy[?25l[?12l[?25h[?25l[12;27H[103mdummy[m[49;181H12,23[8CTout[12;27H[?12l[?25h[?25l[49;1H[K[49;1H:[?12l[?25hq[?25l[?12l[?25h![?25l[?12l[?25h[?25l[49;1H[K[49;1H[?1l>[?12l[?25h[?1049l]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ vim /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eeb[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cim /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cm /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb [K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C^C
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ man^C
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ manvim /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eeb[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[114Pfind /home/romain.pereira/local/easybuild/ -name "*dummy*"
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ceb --help | less[K[11@list-toolchains[C[C[C[C[C[C[C[8Psearch="dummy"vim /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eeb[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ceb --search="dummy"[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Clist-toolchains | less[11Phelp[C[C[C[C[C[C[C[11@list-toolchains[C[C[C[C[C[C[C[11Phelp[C[C[C[C[C[C[C
[?1049h[?1h=Usage: eb [options] easyconfig [...]

Builds software based on easyconfig (or parse a directory). Provide one or more easyconfigs or directories, use -H or --help more information.

Options:
  --version             show program's version number and exit
  -h, --shorthelp       show short help message and exit
  -H OUTPUT_FORMAT, --help=OUTPUT_FORMAT
                        show full help message and exit
  --confighelp          show help as annotated configfile

  Debug and logging options (configfile section MAIN):
    -d, --debug         Enable debug log mode (def False)
    --info              Enable info log mode (def False)
    --quiet             Enable quiet/warning log mode (def False)

  Configfile options:
    --configfiles=CONFIGFILES
                        Parse (additional) configfiles (type comma-separated list; def /home/romain.pereira/.config/easybuild/config.cfg)
    --ignoreconfigfiles=IGNORECONFIGFILES
                        Ignore configfiles (type comma-separated list)

  Basic options:
    Basic runtime options for EasyBuild. (configfile section basic)

    --dry-run           Print build overview incl. dependencies (full paths) (def False)
    -D, --dry-run-short
                        Print build overview incl. dependencies (short paths) (def False)
    -x, --extended-dry-run
                        Print build environment and (expected) build procedure that will be performed (def False)
    --extended-dry-run-ignore-errors
                        Ignore errors that occur during dry run (def True)
    -f, --force         Force to rebuild software even if it's already installed (i.e. if it can be found as module), and skipping check for OS dependencies (def False)
    --job               Submit the build as a job (def False)
    -l, --logtostdout   Redirect main log to stdout (def False)
    -b BLOCKS, --only-blocks=BLOCKS
                        Only build listed blocks (type comma-separated list)
    --rebuild           Rebuild software, even if module already exists (don't skip OS dependencies checks) (def False)
    -r PATH[:PATH], --robot=PATH[:PATH]
                        Enable dependency resolution, using easyconfigs in specified paths (type pathsep-separated list; def )
    --robot-paths=PATH[:PATH]
                        Additional paths to consider by robot for easyconfigs (--robot paths get priority) (type pathsep-separated list; def
                        /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs)
    --search-paths=PATH[:PATH]
                        Additional locations to consider in --search (next to --robot and --robot-paths paths) (type pathsep-separated list; def )
    -k, --skip          Skip existing software (useful for installing additional packages) (def False)
    -s STOP, --stop=STOP
                        Stop the installation after certain step (type choice; def source) (choices: fetch, ready, source, patch, prepare, configure, build, test, install, extensions, postproc,
:[K[K/[Kbb[Kuu[Kii[Kll[Kdd[K[1;1HUsage: eb [options] easyconfig [...]
[2;1H
[3;1HBuilds software based on easyconfig (or parse a directory). Provide one or more easyconfigs or directories, use -H or --help more information.
[4;1H
[5;1HOptions:
[6;1H  --version             show program's version number and exit
[7;1H  -h, --shorthelp       show short help message and exit
[8;1H  -H OUTPUT_FORMAT, --help=OUTPUT_FORMAT
[9;1H                        show full help message and exit
[10;1H  --confighelp          show help as annotated configfile
[11;1H
[12;1H  Debug and logging options (configfile section MAIN):
[13;1H    -d, --debug         Enable debug log mode (def False)
[14;1H    --info              Enable info log mode (def False)
[15;1H    --quiet             Enable quiet/warning log mode (def False)
[16;1H
[17;1H  Configfile options:
[18;1H    --configfiles=CONFIGFILES
[19;1H                        Parse (additional) configfiles (type comma-separated list; def /home/romain.pereira/.config/easybuild/config.cfg)
[20;1H    --ignoreconfigfiles=IGNORECONFIGFILES
[21;1H                        Ignore configfiles (type comma-separated list)
[22;1H
[23;1H  Basic options:
[24;1H    Basic runtime options for EasyBuild. (configfile section basic)
[25;1H
[26;1H    --dry-run           Print build overview incl. dependencies (full paths) (def False)
[27;1H    -D, --dry-run-short
[28;1H                        Print build overview incl. dependencies (short paths) (def False)
[29;1H    -x, --extended-dry-run
[30;1H                        Print build environment and (expected) build procedure that will be performed (def False)
[31;1H    --extended-dry-run-ignore-errors
[32;1H                        Ignore errors that occur during dry run (def True)
[33;1H    -f, --force         Force to rebuild software even if it's already installed (i.e. if it can be found as module), and skipping check for OS dependencies (def False)
[34;1H    --job               Submit the build as a job (def False)
[35;1H    -l, --logtostdout   Redirect main log to stdout (def False)
[36;1H    -b BLOCKS, --only-blocks=BLOCKS
[37;1H                        Only build listed blocks (type comma-separated list)
[38;1H    --rebuild           Rebuild software, even if module already exists (don't skip OS dependencies checks) (def False)
[39;1H    -r PATH[:PATH], --robot=PATH[:PATH]
[40;1H                        Enable dependency resolution, using easyconfigs in specified paths (type pathsep-separated list; def )
[41;1H    --robot-paths=PATH[:PATH]
[42;1H                        Additional paths to consider by robot for easyconfigs (--robot paths get priority) (type pathsep-separated list; def
[43;1H                        /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs)
[44;1H    --search-paths=PATH[:PATH]
[45;1H                        Additional locations to consider in --search (next to --robot and --robot-paths paths) (type pathsep-separated list; def )
[46;1H    -k, --skip          Skip existing software (useful for installing additional packages) (def False)
[47;1H    -s STOP, --stop=STOP
[48;1H                        Stop the installation after certain step (type choice; def source) (choices: fetch, ready, source, patch, prepare, configure, build, test, install, extensions, postproc,
[49;1H[1;1HUsage: eb [options] easyconfig [...]
[2;1H
[3;1HBuilds software based on easyconfig (or parse a directory). Provide one or more easyconfigs or directories, use -H or --help more information.
[4;1H
[5;1HOptions:
[6;1H  --version             show program's version number and exit
[7;1H  -h, --shorthelp       show short help message and exit
[8;1H  -H OUTPUT_FORMAT, --help=OUTPUT_FORMAT
[9;1H                        show full help message and exit
[10;1H  --confighelp          show help as annotated configfile
[11;1H
[12;1H  Debug and logging options (configfile section MAIN):
[13;1H    -d, --debug         Enable debug log mode (def False)
[14;1H    --info              Enable info log mode (def False)
[15;1H    --quiet             Enable quiet/warning log mode (def False)
[16;1H
[17;1H  Configfile options:
[18;1H    --configfiles=CONFIGFILES
[19;1H                        Parse (additional) configfiles (type comma-separated list; def /home/romain.pereira/.config/easy[7mbuild[27m/config.cfg)
[20;1H    --ignoreconfigfiles=IGNORECONFIGFILES
[21;1H                        Ignore configfiles (type comma-separated list)
[22;1H
[23;1H  Basic options:
[24;1H    Basic runtime options for EasyBuild. (configfile section basic)
[25;1H
[26;1H    --dry-run           Print [7mbuild[27m overview incl. dependencies (full paths) (def False)
[27;1H    -D, --dry-run-short
[28;1H                        Print [7mbuild[27m overview incl. dependencies (short paths) (def False)
[29;1H    -x, --extended-dry-run
[30;1H                        Print [7mbuild[27m environment and (expected) [7mbuild[27m procedure that will be performed (def False)
[31;1H    --extended-dry-run-ignore-errors
[32;1H                        Ignore errors that occur during dry run (def True)
[33;1H    -f, --force         Force to re[7mbuild[27m software even if it's already installed (i.e. if it can be found as module), and skipping check for OS dependencies (def False)
[34;1H    --job               Submit the [7mbuild[27m as a job (def False)
[35;1H    -l, --logtostdout   Redirect main log to stdout (def False)
[36;1H    -b BLOCKS, --only-blocks=BLOCKS
[37;1H                        Only [7mbuild[27m listed blocks (type comma-separated list)
[38;1H    --re[7mbuild[27m           Re[7mbuild[27m software, even if module already exists (don't skip OS dependencies checks) (def False)
[39;1H    -r PATH[:PATH], --robot=PATH[:PATH]
[40;1H                        Enable dependency resolution, using easyconfigs in specified paths (type pathsep-separated list; def )
[41;1H    --robot-paths=PATH[:PATH]
[42;1H                        Additional paths to consider by robot for easyconfigs (--robot paths get priority) (type pathsep-separated list; def
[43;1H                        /home/romain.pereira/local/easy[7mbuild[27m/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easy[7mbuild[27m_easyconfigs-3.8.1-py2.7.egg/easy[7mbuild[27m/easyconfigs)
[44;1H    --search-paths=PATH[:PATH]
[45;1H                        Additional locations to consider in --search (next to --robot and --robot-paths paths) (type pathsep-separated list; def )
[46;1H    -k, --skip          Skip existing software (useful for installing additional packages) (def False)
[47;1H    -s STOP, --stop=STOP
[48;1H                        Stop the installation after certain step (type choice; def source) (choices: fetch, ready, source, patch, prepare, configure, [7mbuild[27m, test, install, extensions, postproc,
[49;1H                        sanitycheck, cleanup, module, permissions, package, testcases)
    --strict=STRICT     Set strictness level (type choice; def warn) (choices: ignore, warn, error)

  Configuration options:
    Configure EasyBuild behavior. (configfile section config)

    --avail-module-naming-schemes
                        Show all supported module naming schemes (def False)
    --avail-modules-tools
                        Show all supported module tools (def False)
    --avail-repositories
                        Show all repository types (incl. non-usable) (def False)
    --[7mbuild[27mpath=BUILDPATH
                        Temporary [7mbuild[27m path (def /home/romain.pereira/.local/easy[7mbuild[27m/[7mbuild[27m)
    --containerpath=CONTAINERPATH
                        Location where container recipe & image will be stored (def /home/romain.pereira/.local/easy[7mbuild[27m/containers)
    --external-modules-metadata=EXTERNAL-MODULES-METADATA
                        List of files specifying metadata for external modules (INI format) (type comma-separated list)
:[K[K/[K    --hooks=HOOKS       Location of Python module with hook implementations (type str)
    --ignore-dirs=IGNORE-DIRS
                        Directory names to ignore when searching for files/dirs (type comma-separated list; def .git,.svn)
    --include-easyblocks=INCLUDE-EASYBLOCKS
                        Location(s) of extra or customized easyblocks (type comma-separated list; def )
    --include-module-naming-schemes=INCLUDE-MODULE-NAMING-SCHEMES
                        Location(s) of extra or customized module naming schemes (type comma-separated list; def )
:[K[K/[K    --include-toolchains=INCLUDE-TOOLCHAINS
                        Location(s) of extra or customized toolchains or toolchain components (type comma-separated list; def )
:[K[K/[K    --installpath=INSTALLPATH
                        Install path for software and modules (def /home/romain.pereira/.local/easy[7mbuild[27m)
:[K[K/[K    --installpath-modules=INSTALLPATH-MODULES
                        Install path for modules (if None, combine --installpath and --subdir-modules)
    --installpath-software=INSTALLPATH-SOFTWARE
:[K[K/[K                        Install path for software (if None, combine --installpath and --subdir-software)
:[K[K/[K    --job-backend=JOB-BACKEND
                        Backend to use for submitting jobs (type choice; def GC3Pie) (choices: GC3Pie, PbsPython, Slurm)
    --logfile-format=DIR,FORMAT
:[K[K/[K                        Directory name and format of the log file (type comma-separated tuple; def easy[7mbuild[27m,easy[7mbuild[27m-%(name)s-%(version)s-%(date)s.%(time)s.log)
:[K[K/[K    --module-depends-on
                        Use depends_on (Lmod 7.6.1+) for dependencies in all generated modules (implies recursive unloading of modules). (def False)
    --module-naming-scheme=MODULE-NAMING-SCHEME
                        Module naming scheme to use (def EasyBuildMNS)
    --module-syntax=MODULE-SYNTAX
:[K[K/[K                        Syntax to be used for module files (type choice; def Lua) (choices: Lua, Tcl)
    --moduleclasses=MODULECLASSES
                        Extend supported module classes (For more info on the default classes, use --show-default-moduleclasses) (type comma-separated list; def
                        base,astro,bio,cae,chem,compiler,data,debugger,devel,geo,ide,lang,lib,math,mpi,numlib,perf,quantum,phys,system,toolchain,tools,vis)
    --modules-footer=PATH
:[K[K/[K                        Path to file containing footer to be added to all generated module files
    --modules-header=PATH
                        Path to file containing header to be added to all generated module files
    --modules-tool=MODULES-TOOL
                        Modules tool to use (type choice; def Lmod) (choices: EnvironmentModules, EnvironmentModulesC, EnvironmentModulesTcl, Lmod)
    --package-naming-scheme=PACKAGE-NAMING-SCHEME
                        Packaging naming scheme choice (type choice; def EasyBuildPNS) (choices: EasyBuildPNS)
    --packagepath=PACKAGEPATH
                        The destination path for the packages built by package-tool (def /home/romain.pereira/.local/easy[7mbuild[27m/packages)
    --prefix=PREFIX     Change prefix for [7mbuild[27mpath, installpath, sourcepath and repositorypath (used prefix for defaults /home/romain.pereira/.local/easy[7mbuild[27m)
    --recursive-module-unload
                        Enable generating of modules that unload recursively. (def False)
    --repository=REPOSITORY
:[K[K/[K                        Repository type, using repositorypath (type choice; def FileRepository) (choices: FileRepository)
:[K[K/[K    --repositorypath=REPOSITORYPATH
                        Repository path, used by repository (is passed as list of arguments to create the repository instance). For more info, use --avail-repositories. (type comma-separated list;
:[K[K/[K                        def /home/romain.pereira/.local/easy[7mbuild[27m/ebfiles_repo)
    --sourcepath=SOURCEPATH
                        Path(s) to where sources should be downloaded (string, colon-separated) (def /home/romain.pereira/.local/easy[7mbuild[27m/sources)
    --subdir-modules=SUBDIR-MODULES
                        Installpath subdir for modules (def modules)
    --subdir-software=SUBDIR-SOFTWARE
                        Installpath subdir for software (def software)
    --subdir-user-modules=SUBDIR-USER-MODULES
                        Base path of user-specific modules relative to their $HOME
    --suffix-modules-path=SUFFIX-MODULES-PATH
                        Suffix for module files install path (def all)
    --testoutput=TESTOUTPUT
                        Path to where a job should place the output (to be set within jobscript)
:[K[K/[K    --tmp-logdir=TMP-LOGDIR
                        Log directory where temporary log files are stored
    --tmpdir=TMPDIR     Directory to use for temporary storage

  Container options:
    Options related to generating container recipes & images (configfile section container)

    --container-base=BASE
:[K[K/[K                        Base for container image. Examples (for Singularity): --container-base localimage:/path/to/image.img, --container-base shub:<image>:<tag>, --container-base
                        docker:<image>:<tag>  (type <type 'str'>)
    --container-[7mbuild[27m-image
                        Build container image (requires sudo privileges!) (def False)
    --container-image-format=IMAGE-FORMAT
                        Container image format (type choice) (choices: ext3, sandbox, squashfs)
    --container-image-name=IMAGE-NAME
                        Custom name for container image (defaults to name of easyconfig)
    --container-tmpdir=TMPDIR
                        Temporary directory where container image is built
    --container-type=TYPE
                        Type of container recipe/image to create (type choice; def singularity) (choices: docker, singularity)

  Options for Easyconfigs:
    Options to be passed to all Easyconfig. (configfile section easyconfig)

    --inject-checksums=INJECT-CHECKSUMS
                        Inject checksums of specified type for sources/patches into easyconfig file(s) (type choice; def sha256) (choices: adler32, crc32, md5, sha1, sha256, sha512, size)

:[K[K/[K  GitHub integration options:
:[K[K/[K    Integration with GitHub (configfile section github)

    --check-contrib     Runs checks to see whether the given easyconfigs are ready to be contributed back (def False)
    --check-github      Check status of GitHub integration, and report back (def False)
    --check-style       Run a style check on the given easyconfigs (def False)
    --cleanup-easyconfigs
                        Clean up easyconfig files for pull request (def True)
:[K[K/[K    --close-pr=PR#      Close pull request (type <type 'int'>)
    --close-pr-msg=CLOSE-PR-MSG
:[K[K/[Kee[Kaa[Kss[Ktt[K[Kyy[Kbb[Kll[Koo[Kcc[Kkk[K[1;1H                        Path(s) to where sources should be downloaded (string, colon-separated) (def /home/romain.pereira/.local/easybuild/sources)
[2;1H    --subdir-modules=SUBDIR-MODULES
[3;1H                        Installpath subdir for modules (def modules)
[4;1H    --subdir-software=SUBDIR-SOFTWARE
[5;1H                        Installpath subdir for software (def software)
[6;1H    --subdir-user-modules=SUBDIR-USER-MODULES
[7;1H                        Base path of user-specific modules relative to their $HOME
[8;1H    --suffix-modules-path=SUFFIX-MODULES-PATH
[9;1H                        Suffix for module files install path (def all)
[10;1H    --testoutput=TESTOUTPUT
[11;1H                        Path to where a job should place the output (to be set within jobscript)
[12;1H    --tmp-logdir=TMP-LOGDIR
[13;1H                        Log directory where temporary log files are stored
[14;1H    --tmpdir=TMPDIR     Directory to use for temporary storage
[15;1H
[16;1H  Container options:
[17;1H    Options related to generating container recipes & images (configfile section container)
[18;1H
[19;1H    --container-base=BASE
[20;1H                        Base for container image. Examples (for Singularity): --container-base localimage:/path/to/image.img, --container-base shub:<image>:<tag>, --container-base
[21;1H                        docker:<image>:<tag>  (type <type 'str'>)
[22;1H    --container-build-image
[23;1H                        Build container image (requires sudo privileges!) (def False)
[24;1H    --container-image-format=IMAGE-FORMAT
[25;1H                        Container image format (type choice) (choices: ext3, sandbox, squashfs)
[26;1H    --container-image-name=IMAGE-NAME
[27;1H                        Custom name for container image (defaults to name of easyconfig)
[28;1H    --container-tmpdir=TMPDIR
[29;1H                        Temporary directory where container image is built
[30;1H    --container-type=TYPE
[31;1H                        Type of container recipe/image to create (type choice; def singularity) (choices: docker, singularity)
[32;1H
[33;1H  Options for Easyconfigs:
[34;1H    Options to be passed to all Easyconfig. (configfile section easyconfig)
[35;1H
[36;1H    --inject-checksums=INJECT-CHECKSUMS
[37;1H                        Inject checksums of specified type for sources/patches into easyconfig file(s) (type choice; def sha256) (choices: adler32, crc32, md5, sha1, sha256, sha512, size)
[38;1H
[39;1H  GitHub integration options:
[40;1H    Integration with GitHub (configfile section github)
[41;1H
[42;1H    --check-contrib     Runs checks to see whether the given easyconfigs are ready to be contributed back (def False)
[43;1H    --check-github      Check status of GitHub integration, and report back (def False)
[44;1H    --check-style       Run a style check on the given easyconfigs (def False)
[45;1H    --cleanup-easyconfigs
[46;1H                        Clean up easyconfig files for pull request (def True)
[47;1H    --close-pr=PR#      Close pull request (type <type 'int'>)
[48;1H    --close-pr-msg=CLOSE-PR-MSG
[49;1H[1;1H                        Path(s) to where sources should be downloaded (string, colon-separated) (def /home/romain.pereira/.local/easybuild/sources)
[2;1H    --subdir-modules=SUBDIR-MODULES
[3;1H                        Installpath subdir for modules (def modules)
[4;1H    --subdir-software=SUBDIR-SOFTWARE
[5;1H                        Installpath subdir for software (def software)
[6;1H    --subdir-user-modules=SUBDIR-USER-MODULES
[7;1H                        Base path of user-specific modules relative to their $HOME
[8;1H    --suffix-modules-path=SUFFIX-MODULES-PATH
[9;1H                        Suffix for module files install path (def all)
[10;1H    --testoutput=TESTOUTPUT
[11;1H                        Path to where a job should place the output (to be set within jobscript)
[12;1H    --tmp-logdir=TMP-LOGDIR
[13;1H                        Log directory where temporary log files are stored
[14;1H    --tmpdir=TMPDIR     Directory to use for temporary storage
[15;1H
[16;1H  Container options:
[17;1H    Options related to generating container recipes & images (configfile section container)
[18;1H
[19;1H    --container-base=BASE
[20;1H                        Base for container image. Examples (for Singularity): --container-base localimage:/path/to/image.img, --container-base shub:<image>:<tag>, --container-base
[21;1H                        docker:<image>:<tag>  (type <type 'str'>)
[22;1H    --container-build-image
[23;1H                        Build container image (requires sudo privileges!) (def False)
[24;1H    --container-image-format=IMAGE-FORMAT
[25;1H                        Container image format (type choice) (choices: ext3, sandbox, squashfs)
[26;1H    --container-image-name=IMAGE-NAME
[27;1H                        Custom name for container image (defaults to name of easyconfig)
[28;1H    --container-tmpdir=TMPDIR
[29;1H                        Temporary directory where container image is built
[30;1H    --container-type=TYPE
[31;1H                        Type of container recipe/image to create (type choice; def singularity) (choices: docker, singularity)
[32;1H
[33;1H  Options for Easyconfigs:
[34;1H    Options to be passed to all Easyconfig. (configfile section easyconfig)
[35;1H
[36;1H    --inject-checksums=INJECT-CHECKSUMS
[37;1H                        Inject checksums of specified type for sources/patches into easyconfig file(s) (type choice; def sha256) (choices: adler32, crc32, md5, sha1, sha256, sha512, size)
[38;1H
[39;1H  GitHub integration options:
[40;1H    Integration with GitHub (configfile section github)
[41;1H
[42;1H    --check-contrib     Runs checks to see whether the given easyconfigs are ready to be contributed back (def False)
[43;1H    --check-github      Check status of GitHub integration, and report back (def False)
[44;1H    --check-style       Run a style check on the given easyconfigs (def False)
[45;1H    --cleanup-easyconfigs
[46;1H                        Clean up easyconfig files for pull request (def True)
[47;1H    --close-pr=PR#      Close pull request (type <type 'int'>)
[48;1H    --close-pr-msg=CLOSE-PR-MSG
[49;1H...skipping...
                        Show all easyconfig parameters (include [7measyblock[27m-specific ones by using -e) (def False)
    --avail-easyconfig-templates
                        Show all template names and template constants that can be used in easyconfigs. (def False)
    --avail-hooks       Show list of known hooks (def False)
    --avail-toolchain-opts=AVAIL-TOOLCHAIN-OPTS
                        Show options for toolchain (type str)
    --check-conflicts   Check for version conflicts in dependency graphs (def False)
    --dep-graph=depgraph.<ext>
                        Create dependency graph
    --dump-env-script   Dump source script to set up build environment based on toolchain/dependencies (def False)
    --last-log          Print location to EasyBuild log file of last (failed) session (def False)
    --list-[7measyblock[27ms=LIST-EASYBLOCKS
                        Show list of available [7measyblock[27ms (type choice; def simple) (choices: simple, detailed)
    --list-installed-software=LIST-INSTALLED-SOFTWARE
                        Show list of installed software (type choice; def simple) (choices: simple, detailed)
    --list-software=LIST-SOFTWARE
                        Show list of supported software (type choice; def simple) (choices: simple, detailed)
    --list-toolchains   Show list of known toolchains (def False)
    --search=REGEX      Search for easyconfig files in the robot search path, print full paths
    --search-filename=REGEX
                        Search for easyconfig files in the robot search path, print only filenames
    -S REGEX, --search-short=REGEX
                        Search for easyconfig files in the robot search path, print short paths
    --show-config       Show current EasyBuild configuration (only non-default + selected settings) (def False)
    --show-default-configfiles
                        Show list of default config files (def False)
    --show-default-moduleclasses
                        Show default module classes with description (def False)
    --show-full-config  Show current EasyBuild configuration (all settings) (def False)
    --show-system-info  Show system information relevant to EasyBuild (def False)
    --terse             Terse output (machine-readable) (def False)

  Options for job backend:
    Options for job backend (only relevant when --job is used) (configfile section job)

    --job-backend-config=BACKEND-CONFIG
                        Configuration file for job backend
    --job-cores=CORES   Number of cores to request per job (type int)
    --job-deps-type=DEPS-TYPE
                        Type of dependency to set between jobs (default depends on job backend) (type choice) (choices: abort_on_error, always_run)
    --job-max-jobs=MAX-JOBS
                        Maximum number of concurrent jobs (queued and running, 0 = unlimited) (type int; def 0)
    --job-max-walltime=MAX-WALLTIME
                        Maximum walltime for jobs (in hours) (type int; def 24)
    --job-output-dir=OUTPUT-DIR
                        Output directory for jobs (default: current directory) (def /home/romain.pereira)
    --job-polling-interval=POLLING-INTERVAL
                        Interval between polls for status of jobs (in seconds) (type <type 'float'>; def 30.0)
:[K[K/[K    --job-target-resource=TARGET-RESOURCE
                        Target resource for jobs

  Override options:
    Override default EasyBuild behavior. (configfile section override)

    --add-dummy-to-minimal-toolchains
                        Include dummy in minimal toolchain searches (def False)
    --allow-loaded-modules=ALLOW-LOADED-MODULES
                        List of software names for which to allow loaded modules in initial environment (type comma-separated list; def EasyBuild)
    --allow-modules-tool-mismatch
:[K[K[K[7mDetermining length of file... (interrupt to abort)[27m[K[H[2J[HM                        Stop the installation after certain step (type choice; def source) (choices: fetch, ready, source, patch, prepare, configure, build, test, install, extensions, postproc,
[HM    -s STOP, --stop=STOP
[HM    -k, --skip          Skip existing software (useful for installing additional packages) (def False)
[HM                        Additional locations to consider in --search (next to --robot and --robot-paths paths) (type pathsep-separated list; def )
[HM    --search-paths=PATH[:PATH]
[HM                        /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs)
[HM                        Additional paths to consider by robot for easyconfigs (--robot paths get priority) (type pathsep-separated list; def
[HM    --robot-paths=PATH[:PATH]
[HM                        Enable dependency resolution, using easyconfigs in specified paths (type pathsep-separated list; def )
[HM    -r PATH[:PATH], --robot=PATH[:PATH]
[HM    --rebuild           Rebuild software, even if module already exists (don't skip OS dependencies checks) (def False)
[HM                        Only build listed blocks (type comma-separated list)
[HM    -b BLOCKS, --only-blocks=BLOCKS
[HM    -l, --logtostdout   Redirect main log to stdout (def False)
[HM    --job               Submit the build as a job (def False)
[HM    -f, --force         Force to rebuild software even if it's already installed (i.e. if it can be found as module), and skipping check for OS dependencies (def False)
[HM                        Ignore errors that occur during dry run (def True)
[HM    --extended-dry-run-ignore-errors
[HM                        Print build environment and (expected) build procedure that will be performed (def False)
[HM    -x, --extended-dry-run
[HM                        Print build overview incl. dependencies (short paths) (def False)
[HM    -D, --dry-run-short
[HM    --dry-run           Print build overview incl. dependencies (full paths) (def False)
[HM
[HM    Basic runtime options for EasyBuild. (configfile section basic)
[HM  Basic options:
[HM
[HM                        Ignore configfiles (type comma-separated list)
[HM    --ignoreconfigfiles=IGNORECONFIGFILES
[HM                        Parse (additional) configfiles (type comma-separated list; def /home/romain.pereira/.config/easybuild/config.cfg)
[HM    --configfiles=CONFIGFILES
[HM  Configfile options:
[HM
[HM    --quiet             Enable quiet/warning log mode (def False)
[HM    --info              Enable info log mode (def False)
[HM    -d, --debug         Enable debug log mode (def False)
[HM  Debug and logging options (configfile section MAIN):
[HM
[HM  --confighelp          show help as annotated configfile
[HM                        show full help message and exit
[HM  -H OUTPUT_FORMAT, --help=OUTPUT_FORMAT
[HM  -h, --shorthelp       show short help message and exit
[HM  --version             show program's version number and exit
[HMOptions:
[HM
[HMBuilds software based on easyconfig (or parse a directory). Provide one or more easyconfigs or directories, use -H or --help more information.
[HM
[HMUsage: eb [options] easyconfig [...]
[49;1H[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K[K:[K[K/[K...skipping...
    --include-[7measyblock[27ms=INCLUDE-EASYBLOCKS
                        Location(s) of extra or customized [7measyblock[27ms (type comma-separated list; def )
    --include-module-naming-schemes=INCLUDE-MODULE-NAMING-SCHEMES
                        Location(s) of extra or customized module naming schemes (type comma-separated list; def )
    --include-toolchains=INCLUDE-TOOLCHAINS
                        Location(s) of extra or customized toolchains or toolchain components (type comma-separated list; def )
    --installpath=INSTALLPATH
                        Install path for software and modules (def /home/romain.pereira/.local/easybuild)
    --installpath-modules=INSTALLPATH-MODULES
                        Install path for modules (if None, combine --installpath and --subdir-modules)
    --installpath-software=INSTALLPATH-SOFTWARE
                        Install path for software (if None, combine --installpath and --subdir-software)
    --job-backend=JOB-BACKEND
                        Backend to use for submitting jobs (type choice; def GC3Pie) (choices: GC3Pie, PbsPython, Slurm)
    --logfile-format=DIR,FORMAT
                        Directory name and format of the log file (type comma-separated tuple; def easybuild,easybuild-%(name)s-%(version)s-%(date)s.%(time)s.log)
    --module-depends-on
                        Use depends_on (Lmod 7.6.1+) for dependencies in all generated modules (implies recursive unloading of modules). (def False)
    --module-naming-scheme=MODULE-NAMING-SCHEME
                        Module naming scheme to use (def EasyBuildMNS)
    --module-syntax=MODULE-SYNTAX
                        Syntax to be used for module files (type choice; def Lua) (choices: Lua, Tcl)
    --moduleclasses=MODULECLASSES
                        Extend supported module classes (For more info on the default classes, use --show-default-moduleclasses) (type comma-separated list; def
                        base,astro,bio,cae,chem,compiler,data,debugger,devel,geo,ide,lang,lib,math,mpi,numlib,perf,quantum,phys,system,toolchain,tools,vis)
    --modules-footer=PATH
                        Path to file containing footer to be added to all generated module files
    --modules-header=PATH
                        Path to file containing header to be added to all generated module files
    --modules-tool=MODULES-TOOL
                        Modules tool to use (type choice; def Lmod) (choices: EnvironmentModules, EnvironmentModulesC, EnvironmentModulesTcl, Lmod)
    --package-naming-scheme=PACKAGE-NAMING-SCHEME
                        Packaging naming scheme choice (type choice; def EasyBuildPNS) (choices: EasyBuildPNS)
    --packagepath=PACKAGEPATH
                        The destination path for the packages built by package-tool (def /home/romain.pereira/.local/easybuild/packages)
    --prefix=PREFIX     Change prefix for buildpath, installpath, sourcepath and repositorypath (used prefix for defaults /home/romain.pereira/.local/easybuild)
    --recursive-module-unload
                        Enable generating of modules that unload recursively. (def False)
    --repository=REPOSITORY
                        Repository type, using repositorypath (type choice; def FileRepository) (choices: FileRepository)
    --repositorypath=REPOSITORYPATH
                        Repository path, used by repository (is passed as list of arguments to create the repository instance). For more info, use --avail-repositories. (type comma-separated list;
                        def /home/romain.pereira/.local/easybuild/ebfiles_repo)
    --sourcepath=SOURCEPATH
                        Path(s) to where sources should be downloaded (string, colon-separated) (def /home/romain.pereira/.local/easybuild/sources)
    --subdir-modules=SUBDIR-MODULES
                        Installpath subdir for modules (def modules)
    --subdir-software=SUBDIR-SOFTWARE
:[K[K/[K                        Installpath subdir for software (def software)
:[K[K/[K...skipping...
                        Show all easyconfig parameters (include [7measyblock[27m-specific ones by using -e) (def False)
    --avail-easyconfig-templates
                        Show all template names and template constants that can be used in easyconfigs. (def False)
    --avail-hooks       Show list of known hooks (def False)
    --avail-toolchain-opts=AVAIL-TOOLCHAIN-OPTS
                        Show options for toolchain (type str)
    --check-conflicts   Check for version conflicts in dependency graphs (def False)
    --dep-graph=depgraph.<ext>
                        Create dependency graph
    --dump-env-script   Dump source script to set up build environment based on toolchain/dependencies (def False)
    --last-log          Print location to EasyBuild log file of last (failed) session (def False)
    --list-[7measyblock[27ms=LIST-EASYBLOCKS
                        Show list of available [7measyblock[27ms (type choice; def simple) (choices: simple, detailed)
    --list-installed-software=LIST-INSTALLED-SOFTWARE
                        Show list of installed software (type choice; def simple) (choices: simple, detailed)
    --list-software=LIST-SOFTWARE
                        Show list of supported software (type choice; def simple) (choices: simple, detailed)
    --list-toolchains   Show list of known toolchains (def False)
    --search=REGEX      Search for easyconfig files in the robot search path, print full paths
    --search-filename=REGEX
                        Search for easyconfig files in the robot search path, print only filenames
    -S REGEX, --search-short=REGEX
                        Search for easyconfig files in the robot search path, print short paths
    --show-config       Show current EasyBuild configuration (only non-default + selected settings) (def False)
    --show-default-configfiles
                        Show list of default config files (def False)
    --show-default-moduleclasses
                        Show default module classes with description (def False)
    --show-full-config  Show current EasyBuild configuration (all settings) (def False)
    --show-system-info  Show system information relevant to EasyBuild (def False)
    --terse             Terse output (machine-readable) (def False)

  Options for job backend:
    Options for job backend (only relevant when --job is used) (configfile section job)

    --job-backend-config=BACKEND-CONFIG
                        Configuration file for job backend
    --job-cores=CORES   Number of cores to request per job (type int)
    --job-deps-type=DEPS-TYPE
                        Type of dependency to set between jobs (default depends on job backend) (type choice) (choices: abort_on_error, always_run)
    --job-max-jobs=MAX-JOBS
                        Maximum number of concurrent jobs (queued and running, 0 = unlimited) (type int; def 0)
    --job-max-walltime=MAX-WALLTIME
                        Maximum walltime for jobs (in hours) (type int; def 24)
    --job-output-dir=OUTPUT-DIR
                        Output directory for jobs (default: current directory) (def /home/romain.pereira)
    --job-polling-interval=POLLING-INTERVAL
                        Interval between polls for status of jobs (in seconds) (type <type 'float'>; def 30.0)
:[K[K/[K    --job-target-resource=TARGET-RESOURCE
                        Target resource for jobs

  Override options:
    Override default EasyBuild behavior. (configfile section override)

    --add-dummy-to-minimal-toolchains
                        Include dummy in minimal toolchain searches (def False)
    --allow-loaded-modules=ALLOW-LOADED-MODULES
                        List of software names for which to allow loaded modules in initial environment (type comma-separated list; def EasyBuild)
    --allow-modules-tool-mismatch
:[K[K/[K                        Allow mismatch of modules tool and definition of 'module' function (def False)
:[K[K/[K...skipping...
    -e CLASS, --[7measyblock[27m=CLASS
                        [7measyblock[27m to use for processing the spec file or dumping the options
    --enforce-checksums
                        Enforce availability of checksums for all sources/patches, so they can be verified (def False)
    --experimental      Allow experimental code (with behaviour that can be changed/removed at any given time). (def False)
    --extra-modules=EXTRA-MODULES
                        List of extra modules to load after setting up the build environment (type comma-separated list)
    --fetch             Allow downloading sources ignoring OS and modules tool dependencies, implies --stop=fetch, --ignore-osdeps and ignore modules tool (def False)
    --filter-deps=FILTER-DEPS
                        List of dependencies that you do *not* want to install with EasyBuild, because equivalent OS packages are installed. (e.g. --filter-deps=zlib,ncurses) (type comma-separated
                        list)
    --filter-env-vars=FILTER-ENV-VARS
                        List of names of environment variables that should *not* be defined/updated by module files generated by EasyBuild (type comma-separated list)
    --fixed-installdir-naming-scheme
                        Use fixed naming scheme for installation directories (def False)
    --force-download=FORCE-DOWNLOAD
                        Force re-downloading of sources and/or patches, even if they are available already in source path (type choice; def sources) (choices: all, patches, sources)
    --group=GROUP       Group to be used for software installations (only verified, not set)
    --group-writable-installdir
                        Enable group write permissions on installation directory after installation (def False)
    --hidden            Install 'hidden' module file(s) by prefixing their version with '.' (def False)
    --hide-deps=HIDE-DEPS
                        Comma separated list of dependencies that you want automatically hidden, (e.g. --hide-deps=zlib,ncurses) (type comma-separated list)
    --hide-toolchains=HIDE-TOOLCHAINS
                        Comma separated list of toolchains that you want automatically hidden, (e.g. --hide-toolchains=GCCcore) (type comma-separated list)
    --ignore-checksums  Ignore failing checksum verification (def False)
    --ignore-osdeps     Ignore any listed OS dependencies (def False)
    --install-latest-eb-release
                        Install latest known version of easybuild (def False)
    --lib64-fallback-sanity-check
                        Fallback in sanity check to lib64/ equivalent for missing libraries (def True)
    --max-fail-ratio-adjust-permissions=MAX-FAIL-RATIO-ADJUST-PERMISSIONS
                        Maximum ratio for failures to allow when adjusting permissions (type float; def 0.5)
    --minimal-toolchains
                        Use minimal toolchain when resolving dependencies (def False)
    --module-only       Only generate module file(s); skip all steps except for module, prepare, ready, sanitycheck (def False)
    --modules-tool-version-check
                        Check version of modules tool being used (def True)
    --mpi-cmd-template=MPI-CMD-TEMPLATE
                        Template for MPI commands (template keys: %(nr_ranks)s, %(cmd)s)
    --mpi-tests         Run MPI tests (when relevant) (def True)
    --optarch=OPTARCH   Set architecture optimization, overriding native architecture optimizations
    --output-format=OUTPUT-FORMAT
                        Set output format (type choice; def txt) (choices: txt, rst)
    --parallel=PARALLEL
                        Specify (maximum) level of parallellism used during build procedure (type int)
    --pre-create-installdir
                        Create installation directory before submitting build jobs (def True)
:[K[K/[K    -p, --pretend       Does the build/installation in a test directory located in $HOME/easybuildinstall (def False)
:[K[K/[K[K[7mPattern not found  (press RETURN)[27m[49;1H[K[K/[Kbb[Kuu[Kii[Kll[Kdd[K[1;1H                        easyblock to use for processing the spec file or dumping the options
[2;1H    --enforce-checksums
[3;1H                        Enforce availability of checksums for all sources/patches, so they can be verified (def False)
[4;1H    --experimental      Allow experimental code (with behaviour that can be changed/removed at any given time). (def False)
[5;1H    --extra-modules=EXTRA-MODULES
[6;1H                        List of extra modules to load after setting up the build environment (type comma-separated list)
[7;1H    --fetch             Allow downloading sources ignoring OS and modules tool dependencies, implies --stop=fetch, --ignore-osdeps and ignore modules tool (def False)
[8;1H    --filter-deps=FILTER-DEPS
[9;1H                        List of dependencies that you do *not* want to install with EasyBuild, because equivalent OS packages are installed. (e.g. --filter-deps=zlib,ncurses) (type comma-separated
[10;1H                        list)
[11;1H    --filter-env-vars=FILTER-ENV-VARS
[12;1H                        List of names of environment variables that should *not* be defined/updated by module files generated by EasyBuild (type comma-separated list)
[13;1H    --fixed-installdir-naming-scheme
[14;1H                        Use fixed naming scheme for installation directories (def False)
[15;1H    --force-download=FORCE-DOWNLOAD
[16;1H                        Force re-downloading of sources and/or patches, even if they are available already in source path (type choice; def sources) (choices: all, patches, sources)
[17;1H    --group=GROUP       Group to be used for software installations (only verified, not set)
[18;1H    --group-writable-installdir
[19;1H                        Enable group write permissions on installation directory after installation (def False)
[20;1H    --hidden            Install 'hidden' module file(s) by prefixing their version with '.' (def False)
[21;1H    --hide-deps=HIDE-DEPS
[22;1H                        Comma separated list of dependencies that you want automatically hidden, (e.g. --hide-deps=zlib,ncurses) (type comma-separated list)
[23;1H    --hide-toolchains=HIDE-TOOLCHAINS
[24;1H                        Comma separated list of toolchains that you want automatically hidden, (e.g. --hide-toolchains=GCCcore) (type comma-separated list)
[25;1H    --ignore-checksums  Ignore failing checksum verification (def False)
[26;1H    --ignore-osdeps     Ignore any listed OS dependencies (def False)
[27;1H    --install-latest-eb-release
[28;1H                        Install latest known version of easybuild (def False)
[29;1H    --lib64-fallback-sanity-check
[30;1H                        Fallback in sanity check to lib64/ equivalent for missing libraries (def True)
[31;1H    --max-fail-ratio-adjust-permissions=MAX-FAIL-RATIO-ADJUST-PERMISSIONS
[32;1H                        Maximum ratio for failures to allow when adjusting permissions (type float; def 0.5)
[33;1H    --minimal-toolchains
[34;1H                        Use minimal toolchain when resolving dependencies (def False)
[35;1H    --module-only       Only generate module file(s); skip all steps except for module, prepare, ready, sanitycheck (def False)
[36;1H    --modules-tool-version-check
[37;1H                        Check version of modules tool being used (def True)
[38;1H    --mpi-cmd-template=MPI-CMD-TEMPLATE
[39;1H                        Template for MPI commands (template keys: %(nr_ranks)s, %(cmd)s)
[40;1H    --mpi-tests         Run MPI tests (when relevant) (def True)
[41;1H    --optarch=OPTARCH   Set architecture optimization, overriding native architecture optimizations
[42;1H    --output-format=OUTPUT-FORMAT
[43;1H                        Set output format (type choice; def txt) (choices: txt, rst)
[44;1H    --parallel=PARALLEL
[45;1H                        Specify (maximum) level of parallellism used during build procedure (type int)
[46;1H    --pre-create-installdir
[47;1H                        Create installation directory before submitting build jobs (def True)
[48;1H    -p, --pretend       Does the build/installation in a test directory located in $HOME/easybuildinstall (def False)
[49;1H[1;1H                        easyblock to use for processing the spec file or dumping the options
[2;1H    --enforce-checksums
[3;1H                        Enforce availability of checksums for all sources/patches, so they can be verified (def False)
[4;1H    --experimental      Allow experimental code (with behaviour that can be changed/removed at any given time). (def False)
[5;1H    --extra-modules=EXTRA-MODULES
[6;1H                        List of extra modules to load after setting up the [7mbuild[27m environment (type comma-separated list)
[7;1H    --fetch             Allow downloading sources ignoring OS and modules tool dependencies, implies --stop=fetch, --ignore-osdeps and ignore modules tool (def False)
[8;1H    --filter-deps=FILTER-DEPS
[9;1H                        List of dependencies that you do *not* want to install with EasyBuild, because equivalent OS packages are installed. (e.g. --filter-deps=zlib,ncurses) (type comma-separated
[10;1H                        list)
[11;1H    --filter-env-vars=FILTER-ENV-VARS
[12;1H                        List of names of environment variables that should *not* be defined/updated by module files generated by EasyBuild (type comma-separated list)
[13;1H    --fixed-installdir-naming-scheme
[14;1H                        Use fixed naming scheme for installation directories (def False)
[15;1H    --force-download=FORCE-DOWNLOAD
[16;1H                        Force re-downloading of sources and/or patches, even if they are available already in source path (type choice; def sources) (choices: all, patches, sources)
[17;1H    --group=GROUP       Group to be used for software installations (only verified, not set)
[18;1H    --group-writable-installdir
[19;1H                        Enable group write permissions on installation directory after installation (def False)
[20;1H    --hidden            Install 'hidden' module file(s) by prefixing their version with '.' (def False)
[21;1H    --hide-deps=HIDE-DEPS
[22;1H                        Comma separated list of dependencies that you want automatically hidden, (e.g. --hide-deps=zlib,ncurses) (type comma-separated list)
[23;1H    --hide-toolchains=HIDE-TOOLCHAINS
[24;1H                        Comma separated list of toolchains that you want automatically hidden, (e.g. --hide-toolchains=GCCcore) (type comma-separated list)
[25;1H    --ignore-checksums  Ignore failing checksum verification (def False)
[26;1H    --ignore-osdeps     Ignore any listed OS dependencies (def False)
[27;1H    --install-latest-eb-release
[28;1H                        Install latest known version of easy[7mbuild[27m (def False)
[29;1H    --lib64-fallback-sanity-check
[30;1H                        Fallback in sanity check to lib64/ equivalent for missing libraries (def True)
[31;1H    --max-fail-ratio-adjust-permissions=MAX-FAIL-RATIO-ADJUST-PERMISSIONS
[32;1H                        Maximum ratio for failures to allow when adjusting permissions (type float; def 0.5)
[33;1H    --minimal-toolchains
[34;1H                        Use minimal toolchain when resolving dependencies (def False)
[35;1H    --module-only       Only generate module file(s); skip all steps except for module, prepare, ready, sanitycheck (def False)
[36;1H    --modules-tool-version-check
[37;1H                        Check version of modules tool being used (def True)
[38;1H    --mpi-cmd-template=MPI-CMD-TEMPLATE
[39;1H                        Template for MPI commands (template keys: %(nr_ranks)s, %(cmd)s)
[40;1H    --mpi-tests         Run MPI tests (when relevant) (def True)
[41;1H    --optarch=OPTARCH   Set architecture optimization, overriding native architecture optimizations
[42;1H    --output-format=OUTPUT-FORMAT
[43;1H                        Set output format (type choice; def txt) (choices: txt, rst)
[44;1H    --parallel=PARALLEL
[45;1H                        Specify (maximum) level of parallellism used during [7mbuild[27m procedure (type int)
[46;1H    --pre-create-installdir
[47;1H                        Create installation directory before submitting [7mbuild[27m jobs (def True)
[48;1H    -p, --pretend       Does the [7mbuild[27m/installation in a test directory located in $HOME/easy[7mbuild[27minstall (def False)
[49;1H    --read-only-installdir
                        Set read-only permissions on installation directory after installation (def False)
    --rpath             Enable use of RPATH for linking with libraries (def False)
    --rpath-filter=RPATH-FILTER
                        List of regex patterns to use for filtering out RPATH paths (type comma-separated list)
:[K[K/[K    --set-default-module
                        Set the generated module as default (def False)
    --set-gid-bit       Set group ID bit on newly created directories (def False)
    -t, --skip-test-cases
                        Skip running test cases (def False)
    --sticky-bit        Set sticky bit on newly created directories (def False)
    -T, --trace         Provide more information in output to stdout on progress (def False)
    --umask=UMASK       umask to use (e.g. '022'); non-user write permissions on install directories are removed
    --update-modules-tool-cache
                        Update modules tool cache file(s) after generating module file (def False)
    --use-ccache=PATH   Enable use of ccache to speed up compilation, with specified cache dir (type <type 'str'>; def False)
    --use-existing-modules
                        Use existing modules when resolving dependencies with minimal toolchains (def False)
    --use-f90cache=PATH
                        Enable use of f90cache to speed up compilation, with specified cache dir (type <type 'str'>; def False)
    --verify-easyconfig-filenames
                        Verify whether filename of specified easyconfigs matches with contents (def False)
    --zip-logs=ZIP-LOGS
                        Zip logs that are copied to install directory, using specified command (def gzip)

  Package options:
    Control packaging performed by EasyBuild. (configfile section package)
:[K[K/[Kdd[Krr[Kyy[K--[Krr[Kuu[Knn[K[1;1H                        Install latest known version of easybuild (def False)
[2;1H    --lib64-fallback-sanity-check
[3;1H                        Fallback in sanity check to lib64/ equivalent for missing libraries (def True)
[4;1H    --max-fail-ratio-adjust-permissions=MAX-FAIL-RATIO-ADJUST-PERMISSIONS
[5;1H                        Maximum ratio for failures to allow when adjusting permissions (type float; def 0.5)
[6;1H    --minimal-toolchains
[7;1H                        Use minimal toolchain when resolving dependencies (def False)
[8;1H    --module-only       Only generate module file(s); skip all steps except for module, prepare, ready, sanitycheck (def False)
[9;1H    --modules-tool-version-check
[10;1H                        Check version of modules tool being used (def True)
[11;1H    --mpi-cmd-template=MPI-CMD-TEMPLATE
[12;1H                        Template for MPI commands (template keys: %(nr_ranks)s, %(cmd)s)
[13;1H    --mpi-tests         Run MPI tests (when relevant) (def True)
[14;1H    --optarch=OPTARCH   Set architecture optimization, overriding native architecture optimizations
[15;1H    --output-format=OUTPUT-FORMAT
[16;1H                        Set output format (type choice; def txt) (choices: txt, rst)
[17;1H    --parallel=PARALLEL
[18;1H                        Specify (maximum) level of parallellism used during build procedure (type int)
[19;1H    --pre-create-installdir
[20;1H                        Create installation directory before submitting build jobs (def True)
[21;1H    -p, --pretend       Does the build/installation in a test directory located in $HOME/easybuildinstall (def False)
[22;1H    --read-only-installdir
[23;1H                        Set read-only permissions on installation directory after installation (def False)
[24;1H    --rpath             Enable use of RPATH for linking with libraries (def False)
[25;1H    --rpath-filter=RPATH-FILTER
[26;1H                        List of regex patterns to use for filtering out RPATH paths (type comma-separated list)
[27;1H    --set-default-module
[28;1H                        Set the generated module as default (def False)
[29;1H    --set-gid-bit       Set group ID bit on newly created directories (def False)
[30;1H    -t, --skip-test-cases
[31;1H                        Skip running test cases (def False)
[32;1H    --sticky-bit        Set sticky bit on newly created directories (def False)
[33;1H    -T, --trace         Provide more information in output to stdout on progress (def False)
[34;1H    --umask=UMASK       umask to use (e.g. '022'); non-user write permissions on install directories are removed
[35;1H    --update-modules-tool-cache
[36;1H                        Update modules tool cache file(s) after generating module file (def False)
[37;1H    --use-ccache=PATH   Enable use of ccache to speed up compilation, with specified cache dir (type <type 'str'>; def False)
[38;1H    --use-existing-modules
[39;1H                        Use existing modules when resolving dependencies with minimal toolchains (def False)
[40;1H    --use-f90cache=PATH
[41;1H                        Enable use of f90cache to speed up compilation, with specified cache dir (type <type 'str'>; def False)
[42;1H    --verify-easyconfig-filenames
[43;1H                        Verify whether filename of specified easyconfigs matches with contents (def False)
[44;1H    --zip-logs=ZIP-LOGS
[45;1H                        Zip logs that are copied to install directory, using specified command (def gzip)
[46;1H
[47;1H  Package options:
[48;1H    Control packaging performed by EasyBuild. (configfile section package)
[49;1H[1;1H                        Install latest known version of easybuild (def False)
[2;1H    --lib64-fallback-sanity-check
[3;1H                        Fallback in sanity check to lib64/ equivalent for missing libraries (def True)
[4;1H    --max-fail-ratio-adjust-permissions=MAX-FAIL-RATIO-ADJUST-PERMISSIONS
[5;1H                        Maximum ratio for failures to allow when adjusting permissions (type float; def 0.5)
[6;1H    --minimal-toolchains
[7;1H                        Use minimal toolchain when resolving dependencies (def False)
[8;1H    --module-only       Only generate module file(s); skip all steps except for module, prepare, ready, sanitycheck (def False)
[9;1H    --modules-tool-version-check
[10;1H                        Check version of modules tool being used (def True)
[11;1H    --mpi-cmd-template=MPI-CMD-TEMPLATE
[12;1H                        Template for MPI commands (template keys: %(nr_ranks)s, %(cmd)s)
[13;1H    --mpi-tests         Run MPI tests (when relevant) (def True)
[14;1H    --optarch=OPTARCH   Set architecture optimization, overriding native architecture optimizations
[15;1H    --output-format=OUTPUT-FORMAT
[16;1H                        Set output format (type choice; def txt) (choices: txt, rst)
[17;1H    --parallel=PARALLEL
[18;1H                        Specify (maximum) level of parallellism used during build procedure (type int)
[19;1H    --pre-create-installdir
[20;1H                        Create installation directory before submitting build jobs (def True)
[21;1H    -p, --pretend       Does the build/installation in a test directory located in $HOME/easybuildinstall (def False)
[22;1H    --read-only-installdir
[23;1H                        Set read-only permissions on installation directory after installation (def False)
[24;1H    --rpath             Enable use of RPATH for linking with libraries (def False)
[25;1H    --rpath-filter=RPATH-FILTER
[26;1H                        List of regex patterns to use for filtering out RPATH paths (type comma-separated list)
[27;1H    --set-default-module
[28;1H                        Set the generated module as default (def False)
[29;1H    --set-gid-bit       Set group ID bit on newly created directories (def False)
[30;1H    -t, --skip-test-cases
[31;1H                        Skip running test cases (def False)
[32;1H    --sticky-bit        Set sticky bit on newly created directories (def False)
[33;1H    -T, --trace         Provide more information in output to stdout on progress (def False)
[34;1H    --umask=UMASK       umask to use (e.g. '022'); non-user write permissions on install directories are removed
[35;1H    --update-modules-tool-cache
[36;1H                        Update modules tool cache file(s) after generating module file (def False)
[37;1H    --use-ccache=PATH   Enable use of ccache to speed up compilation, with specified cache dir (type <type 'str'>; def False)
[38;1H    --use-existing-modules
[39;1H                        Use existing modules when resolving dependencies with minimal toolchains (def False)
[40;1H    --use-f90cache=PATH
[41;1H                        Enable use of f90cache to speed up compilation, with specified cache dir (type <type 'str'>; def False)
[42;1H    --verify-easyconfig-filenames
[43;1H                        Verify whether filename of specified easyconfigs matches with contents (def False)
[44;1H    --zip-logs=ZIP-LOGS
[45;1H                        Zip logs that are copied to install directory, using specified command (def gzip)
[46;1H
[47;1H  Package options:
[48;1H    Control packaging performed by EasyBuild. (configfile section package)
[49;1H[K[7mPattern not found  (press RETURN)[27m[49;1H[K[K[?1l>[?1049l]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb --help | lessvim /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eeb[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cim /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cm /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb [K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ce /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ca /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.ebb[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cs /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cy /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.e[1Pb[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb [K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cb /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.ebb[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C- /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C- /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cd /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4[1P.eb[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.[1Peb[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.e[1Pb[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C/home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[C --dry-run
== temporary log file in case of crash /tmp/eb-GyzLKV/easybuild-4SkN3j.log
Dry run: printing build status of easyconfigs and dependencies
 * [ ] /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/m/M4/M4-1.4.18.eb (module: M4/1.4.18)
 * [ ] /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/h/help2man/help2man-1.47.4.eb (module: help2man/1.47.4)
 * [ ] /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/m/M4/M4-1.4.17.eb (module: M4/1.4.17)
 * [ ] /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/b/Bison/Bison-3.0.4.eb (module: Bison/3.0.4)
 * [ ] /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb (module: flex/2.6.4)
== Temporary log file(s) /tmp/eb-GyzLKV/easybuild-4SkN3j.log* have been removed.
== Temporary directory /tmp/eb-GyzLKV has been removed.
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ veb /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.ebb --dry-run[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C--help | less[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cvim /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eeb
[?1049h[?1h=[2;1Hâ½[6n[1;1H  [1;1H[1;49r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[49;1H"~/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb" 32L, 874C[>c[1;1H[38;5;130m  1 [mname = 'flex'
[38;5;130m  2 [mversion = '2.6.4'
[38;5;130m  3 
  4 [mhomepage = 'http://flex.sourceforge.net/'
[38;5;130m  5 
  6 [mdescription = """
[38;5;130m  7 [m Flex (Fast Lexical Analyzer) is a tool for generating scanners. A scanner,
[38;5;130m  8 [m sometimes called a tokenizer, is a program which recognizes lexical patterns
[38;5;130m  9 [m in text.
[38;5;130m 10 [m"""
[38;5;130m 11 
 12 [mtoolchain = {'name': '[103mdummy[m', 'version': ''}
[38;5;130m 13 [mtoolchainopts = {'pic': True}
[38;5;130m 14 
 15 [msource_urls = ['https://github.com/westes/flex/releases/download/v%(version)s/']
[38;5;130m 16 [msources = [SOURCELOWER_TAR_GZ]
[38;5;130m 17 [mchecksums = ['e87aae032bf07c26f85ac0ed3250998c37621d95f8bd748b31f15b33c45ee995']
[38;5;130m 18 
 19 [mbuilddependencies = [
[38;5;130m 20 [m    ('Bison', '3.0.4'),
[38;5;130m 21 [m    ('help2man', '1.47.4'),
[38;5;130m 22 [m]
[38;5;130m 23 
 24 [mdependencies = [
[38;5;130m 25 [m    ('M4', '1.4.18'),
[38;5;130m 26 [m]
[38;5;130m 27 
 28 [m# glibc 2.26 requires _GNU_SOURCE defined to expose reallocarray in the correct
[38;5;130m 29 [m# header, see https://github.com/westes/flex/issues/241
[38;5;130m 30 [mpreconfigopts = 'export CPPFLAGS="$CPPFLAGS -D_GNU_SOURCE" && '
[38;5;130m 31 
 32 [mmoduleclass = 'lang'
[94m~                                                                                                                                                                                                     [34;1H~                                                                                                                                                                                                     [35;1H~                                                                                                                                                                                                     [36;1H~                                                                                                                                                                                                     [37;1H~                                                                                                                                                                                                     [38;1H~                                                                                                                                                                                                     [39;1H~                                                                                                                                                                                                     [40;1H~                                                                                                                                                                                                     [41;1H~                                                                                                                                                                                                     [42;1H~                                                                                                                                                                                                     [43;1H~                                                                                                                                                                                                     [44;1H~                                                                                                                                                                                                     [45;1H~                                                                                                                                                                                                     [46;1H~                                                                                                                                                                                                     [47;1H~                                                                                                                                                                                                     [48;1H~                                                                                                                                                                                                     [m[49;181H12,1[9CTout[12;5H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[49;1H[K[49;1H:[?12l[?25hq[?25l[?12l[?25h![?25l[?12l[?25h[?25l[49;1H[K[49;1H[?1l>[?12l[?25h[?1049l]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ vim /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eeb[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ceb /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb --dry-run[K[K[K[K[K[K[K[K[K[K
== temporary log file in case of crash /tmp/eb-ItrwnY/easybuild-USnl4u.log
== processing EasyBuild easyconfig /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb
== building and installing flex/2.6.4...
== fetching files...
== creating build dir, resetting environment...
== unpacking...
== patching...
== preparing...
== FAILED: Installation ended unsuccessfully (build directory: /home/romain.pereira/.local/easybuild/build/flex/2.6.4/dummy-): build failed (first 300 chars): Missing modules for dependencies (use --robot?): M4/1.4.18, Bison/3.0.4, help2man/1.47.4
== Results of the build can be found in the log file(s) /tmp/eb-ItrwnY/easybuild-flex-2.6.4-20190331.151146.Jabec.log
ERROR: Build of /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb failed (err: 'build failed (first 300 chars): Missing modules for dependencies (use --robot?): M4/1.4.18, Bison/3.0.4, help2man/1.47.4')
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ eb /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.ebb --robot
== temporary log file in case of crash /tmp/eb-RnI1yv/easybuild-gplAPJ.log
== resolving dependencies ...
== processing EasyBuild easyconfig /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/m/M4/M4-1.4.18.eb
== building and installing M4/1.4.18...
== fetching files...
== creating build dir, resetting environment...
== unpacking...
== patching...
== preparing...
== configuring...
== building...
== testing...
== installing...
== taking care of extensions...
== postprocessing...
== sanity checking...
== cleaning up...
== creating module...
== permissions...
== packaging...
== COMPLETED: Installation ended successfully
== Results of the build can be found in the log file(s) /home/romain.pereira/local/software/M4/1.4.18/easybuild/easybuild-M4-1.4.18-20190331.151233.log
== processing EasyBuild easyconfig /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/h/help2man/help2man-1.47.4.eb
== building and installing help2man/1.47.4...
== fetching files...
== creating build dir, resetting environment...
== unpacking...
== patching...
== preparing...
== configuring...
== building...
== testing...
== installing...
== taking care of extensions...
== postprocessing...
== sanity checking...
== cleaning up...
== creating module...
== permissions...
== packaging...
== COMPLETED: Installation ended successfully
== Results of the build can be found in the log file(s) /home/romain.pereira/local/software/help2man/1.47.4/easybuild/easybuild-help2man-1.47.4-20190331.151235.log
== processing EasyBuild easyconfig /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/m/M4/M4-1.4.17.eb
== building and installing M4/1.4.17...
== fetching files...
== creating build dir, resetting environment...
== unpacking...
== patching...
== preparing...
== configuring...
== building...
== testing...
== installing...
== taking care of extensions...
== postprocessing...
== sanity checking...
== cleaning up...
== creating module...
== permissions...
== packaging...
== COMPLETED: Installation ended successfully
== Results of the build can be found in the log file(s) /home/romain.pereira/local/software/M4/1.4.17/easybuild/easybuild-M4-1.4.17-20190331.151309.log
== processing EasyBuild easyconfig /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/b/Bison/Bison-3.0.4.eb
== building and installing Bison/3.0.4...
== fetching files...
== creating build dir, resetting environment...
== unpacking...
== patching...
== preparing...
== configuring...
== building...
== testing...
== installing...
== taking care of extensions...
== postprocessing...
== sanity checking...
== cleaning up...
== creating module...
== permissions...
== packaging...
== COMPLETED: Installation ended successfully
== Results of the build can be found in the log file(s) /home/romain.pereira/local/software/Bison/3.0.4/easybuild/easybuild-Bison-3.0.4-20190331.151350.log
== processing EasyBuild easyconfig /home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/lib/python2.7/site-packages/easybuild_easyconfigs-3.8.1-py2.7.egg/easybuild/easyconfigs/f/flex/flex-2.6.4.eb
== building and installing flex/2.6.4...
== fetching files...
== creating build dir, resetting environment...
== unpacking...
== patching...
== preparing...
== configuring...
== building...
== testing...
== installing...
== taking care of extensions...
== postprocessing...
== sanity checking...
== cleaning up...
== creating module...
== permissions...
== packaging...
== COMPLETED: Installation ended successfully
== Results of the build can be found in the log file(s) /home/romain.pereira/local/software/flex/2.6.4/easybuild/easybuild-flex-2.6.4-20190331.151402.log
== Build succeeded for 5 out of 5
== Temporary log file(s) /tmp/eb-RnI1yv/easybuild-gplAPJ.log* have been removed.
== Temporary directory /tmp/eb-RnI1yv has been removed.
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ tree /h[Khome/romain.pereira/local/modules/
/home/romain.pereira/local/modules/
âââ all
âÂ Â  âââ Bison
âÂ Â  âÂ Â  âââ 3.0.4
âÂ Â  âââ flex
âÂ Â  âÂ Â  âââ 2.6.4
âÂ Â  âââ help2man
âÂ Â  âÂ Â  âââ 1.47.4
âÂ Â  âââ M4
âÂ Â      âââ 1.4.17
âÂ Â      âââ 1.4.18
âââ devel
âÂ Â  âââ M4
âÂ Â      âââ 1.4.17 -> /home/romain.pereira/local/modules/all/M4/1.4.17
âÂ Â      âââ 1.4.18 -> /home/romain.pereira/local/modules/all/M4/1.4.18
âââ lang
âÂ Â  âââ Bison
âÂ Â  âÂ Â  âââ 3.0.4 -> /home/romain.pereira/local/modules/all/Bison/3.0.4
âÂ Â  âââ flex
âÂ Â      âââ 2.6.4 -> /home/romain.pereira/local/modules/all/flex/2.6.4
âââ tools
    âââ help2man
        âââ 1.47.4 -> /home/romain.pereira/local/modules/all/help2man/1.47.4

12 directories, 10 files
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ [4P(reverse-i-search)`':[Cm': tree /home/romain.pereira/local/modules/[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@o[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@d[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@u[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@l[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@e[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[8Pmodule load all/EasyBuild/3.8.1 [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cavail[K[C[C[C[C[C[C[Cuse local/easybuild/modules/[2P[romain.pereira@hpc01 ~]$[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
all/   tools/ 
[romain.pereira@hpc01 ~]$ module use local/easybuild/modules/all/
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ mp[Kodule avail

------------------------------------------------------------------------------------ local/easybuild/modules/all/ ------------------------------------------------------------------------------------
EasyBuild/3.8.1

-------------------------------------------------------------------------------------- local/easybuild/modules/ --------------------------------------------------------------------------------------
all/EasyBuild/3.8.1   tools/EasyBuild/3.8.1

----------------------------------------------------------------------------------- /usr/share/Modules/modulefiles -----------------------------------------------------------------------------------
dot         module-git  module-info modules     null        use.own

------------------------------------------------------------------------------------------ /etc/modulefiles ------------------------------------------------------------------------------------------
mpi/mpich-3.0-x86_64         mpi/mpich-x86_64             mpi/mvapich2-2.2-psm2-x86_64 mpi/mvapich2-x86_64
mpi/mpich-3.2-x86_64         mpi/mvapich2-2.0-x86_64      mpi/mvapich2-2.2-x86_64      mpi/openmpi-x86_64
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ module availuse local/easybuild/modules/all/[K[K[K[K[K[K[K[K[K[K[K[K
modules/  software/ 
[romain.pereira@hpc01 ~]$ module use local/easybuild/m[K[K[K[K[K[K[K[K[K[K[K[K/modules/all/
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ module ava[K[K[Kunused[K local/
local/easybuild/modules/      local/easybuild/modules/all/  local/modules/all/            
[romain.pereira@hpc01 ~]$ module unuse local/easybuild/modules/m[K
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ l[Kmodule avail

----------------------------------------------------------------------------------------- local/modules/all/ -----------------------------------------------------------------------------------------
Bison/3.0.4     flex/2.6.4      help2man/1.47.4 M4/1.4.17       M4/1.4.18

------------------------------------------------------------------------------------ local/easybuild/modules/all/ ------------------------------------------------------------------------------------
EasyBuild/3.8.1

----------------------------------------------------------------------------------- /usr/share/Modules/modulefiles -----------------------------------------------------------------------------------
dot         module-git  module-info modules     null        use.own

------------------------------------------------------------------------------------------ /etc/modulefiles ------------------------------------------------------------------------------------------
mpi/mpich-3.0-x86_64         mpi/mpich-x86_64             mpi/mvapich2-2.2-psm2-x86_64 mpi/mvapich2-x86_64
mpi/mpich-3.2-x86_64         mpi/mvapich2-2.0-x86_64      mpi/mvapich2-2.2-x86_64      mpi/openmpi-x86_64
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ module load ea[K[KEasyBuild/3.8.1 
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ module avail

----------------------------------------------------------------------------------------- local/modules/all/ -----------------------------------------------------------------------------------------
Bison/3.0.4     flex/2.6.4      help2man/1.47.4 M4/1.4.17       M4/1.4.18

------------------------------------------------------------------------------------ local/easybuild/modules/all/ ------------------------------------------------------------------------------------
EasyBuild/3.8.1

----------------------------------------------------------------------------------- /usr/share/Modules/modulefiles -----------------------------------------------------------------------------------
dot         module-git  module-info modules     null        use.own

------------------------------------------------------------------------------------------ /etc/modulefiles ------------------------------------------------------------------------------------------
mpi/mpich-3.0-x86_64         mpi/mpich-x86_64             mpi/mvapich2-2.2-psm2-x86_64 mpi/mvapich2-x86_64
mpi/mpich-3.2-x86_64         mpi/mvapich2-2.0-x86_64      mpi/mvapich2-2.2-x86_64      mpi/openmpi-x86_64
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ module avail[K[K[K[K[Kload flex/2.6.4 
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ flex --version
flex 2.6.4
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ echo $PATH
/home/romain.pereira/local/software/flex/2.6.4/bin:/home/romain.pereira/local/software/M4/1.4.18/bin:/home/romain.pereira/local/easybuild/software/EasyBuild/3.8.1/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/romain.pereira/.local/bin:/home/romain.pereira/bin
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ module purge
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ module list
No Modulefiles Currently Loaded.
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ echo $PATH | sed "s:$HOME:\$HOME:g"
/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:$HOME/.local/bin:$HOME/bin
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ echo $PATH | sed "s:$HOME:\$HOME:g"
/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:$HOME/.local/bin:$HOME/bin
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ moudl^C
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ [4P(reverse-i-search)`':[Cm': module list[1@o[C[C[C[1@d[C[C[C[1@u[C[C[C[1@l[C[C[C[1@e[C[C[C[C[C[C[C[C[C[Cpurge[C[C[C[C[C[C[Cload flex/2.6.4 [2P[romain.pereira@hpc01 ~]$[C
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ module load flex/2.6.4 echo $PATH | sed "s:$HOME:\$HOME:g"
$HOME/local/software/flex/2.6.4/bin:$HOME/local/software/M4/1.4.18/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:$HOME/.local/bin:$HOME/bin
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ module prg[K[Kurge
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ module list
No Modulefiles Currently Loaded.
]0;romain.pereira@hpc01:~[romain.pereira@hpc01 ~]$ exit

Script terminÃ© sur dim. 31 mars 2019 15:20:15 CEST
